<?xml version='1.0'?>
<datamodel version="8.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/18/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/18/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:ce="http://www.tresos.de/_projects/DataModel2/18/childenable.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM6I5R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Dem" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.0.3</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>6.5.8</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2024-07-08T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                    Configuration of the Dem (Diagnostic Event Manager) module.
                  &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="31d2e0f5-e6da-4e8f-a6d8-bf40a2d8367d"/>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Dem can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="4"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="6"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="5"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="8"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="54"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Configuration Variant"/>
                <a:a name="UUID" value="b8885af9-43c1-411b-bba2-a546d8cb1299"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="EDITABLE" value="false"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:lst name="DemConfigSet" 
                     type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:a name="LABEL" value="Configuration Set List"/>
                <a:a name="ROWS" value="1"/>
                <a:da name="MAX" value="1"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="DemConfigSet" 
                       type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container contains the configuration parameters and sub
                        containers of the Dem module supporting multiple configuration sets.&lt;/p&gt;

                        &lt;p&gt;This container is a MultipleConfigurationContainer, i.e. this
                        container and its sub-containers exist once per configuration set.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="NAME_PATTERN" value="Dem_Config_?"/>
                  <a:a name="UUID" value="fa8b2936-728d-43fa-960c-3f6a95be03fc"/>
                  <a:da name="TITLE" value="Configuration Set"/>
                  <v:lst name="DemDTCClass" type="MAP">
                    <a:a name="COLUMNS">
                      <a:v>DemObdDTC</a:v>
                      <a:v>DemUdsDTC</a:v>
                      <a:v>DemJ1939DTCValue</a:v>
                      <a:v>DemDtcValue3Byte</a:v>
                      <a:v>DemJ1939NodeRef</a:v>
                      <a:v>DemDTCFunctionalUnit</a:v>
                    </a:a>
                    <a:a name="LABEL" value="DTC Class List"/>
                    <a:da name="MAX" value="65535"/>
                    <v:ctr name="DemDTCClass" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            This container contains the configuration
                            (parameters) for &lt;code&gt;DTCClass&lt;/code&gt;.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="REQUIRES-INDEX" value="false"/>
                      <a:a name="UUID" 
                           value="8294c901-5fc4-4a44-a683-79d120ec2c35"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(not(node:exists(./DemUdsDTC)) and not(node:exists(./DemObdDTC)) and not(node:exists(./DemDtcValue3Byte)) and not(node:exists(./DemJ1939DTCValue)))" 
                            true="No DTC value configured for DemDTCClass."/>
                      <a:da name="TITLE" value="DTC Class"/>
                      <a:da name="WARNING" type="XPath">
                        <a:tst expr="Dem:DTCClassVerify(.)" 
                               false="Suboptimal configuration: This DTC class is not used by any event."/>
                        <a:tst 
                               expr="node:exists(DemObdDTC) and (count(../eb-list::*[node:exists(DemObdDTC) and (DemObdDTC = node:value(node:current()/DemObdDTC)) and ((not(node:exists(DemDTCSeverity)) and node:exists(node:current()/DemDTCSeverity)) or (node:exists(DemDTCSeverity) and not(node:exists(node:current()/DemDTCSeverity))) or (node:exists(DemDTCSeverity) and node:exists(node:current()/DemDTCSeverity) and (node:value(DemDTCSeverity)!=node:value(node:current()/DemDTCSeverity))))])!=0)" 
                               true="DTC classes having identical OBD DTC value shall not be assigned to different DTC severity."/>
                        <a:tst 
                               expr="node:exists(DemObdDTC) and (count(../eb-list::*[node:exists(DemObdDTC) and (node:value(DemObdDTC) = node:value(node:current()/DemObdDTC)) and (node:value(DemDTCFunctionalUnit) != node:value(node:current()/DemDTCFunctionalUnit))]) != 0)" 
                               true="DTC classes having identical OBD DTC value shall not be assigned to different DTC functional units."/>
                      </a:da>
                      <v:var name="DemObdDTC" type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="DTC"/>
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Diagnostic Trouble Code value for OBD.&lt;/p&gt;
                              &lt;p&gt;More than one DemDTCClass can be configured with identical OBD DTC value.&lt;/p&gt;
                              &lt;p&gt;Identical OBD DTC value usage between different DTC allows different events to typically use the same DTC value to report to Dcm.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable this configuration parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;
                            &lt;b&gt;Important Note:&lt;/b&gt;
                            &lt;p&gt;Configuring identical OBD DTC value for multiple DTCs have impact on the following features&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;for services $03/$07/$0A, same DTC will be reported multiple times.&lt;/li&gt;
                              &lt;li&gt;for PID $01, same DTC can be counted multiple times due to several confirmed events.&lt;/li&gt;
                              &lt;li&gt;for PID $01 and PID $41, same DTC can belong to different readiness groups which may result in inconsistent readiness completion.&lt;/li&gt;
                              &lt;li&gt;hidden displacement of OBD freeze frame by identical OBD DTC events (if different priorities).&lt;/li&gt;
                            &lt;/ul&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="OBD DTC Value"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:e979a29e-4aef-405e-aee7-2dc1c41b6c04"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(node:pos(..) + 1)"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                        </a:da>
                      </v:var>
                      <v:var name="DemUdsDTC" type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="DTC"/>
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Unique Diagnostic Trouble Code value for UDS.&lt;/p&gt;

                              &lt;p&gt;(Range &lt;code&gt;0x000000&lt;/code&gt; and &lt;code&gt;0xFFFFFF&lt;/code&gt; are
                              reserved for DTC groups by ISO 14229-1)&lt;/p&gt;
                              &lt;p&gt;Events without DTC value will be cleared by ClearDTC for
                              DEM_DTC_GROUP_ALL_DTCS&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="UDS DTC Value"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:c1fc7bad-0617-4667-8f03-ef4094b29060"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(node:pos(..) + 1)"/>
                        <a:da name="ENABLE" value="true"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=16777214"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst false="The UDS DTC values must be unique." 
                                    expr="text:uniq(../../eb-list::*/DemUdsDTC, .)"/>
                            <mt:tst 
                                    true="DTC value 0xFFFF33 conflicts with FunctionalGroupIdentifier Emissions Group." 
                                    expr="( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                             (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                             (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                           (num:integer(.) = 16777011)"/>
                            <mt:tst 
                                    true="The UDS DTC values must not be equal to group of UDS DTC values." 
                                    expr="count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGroupOfDTC/eb-list::*[DemGroupDTCs = node:current()]) &gt; 0"/>
                          </mt:xpath>
                        </a:da>
                        <a:da name="TOOLTIP" type="XPath" 
                              expr="node:when(node:exists(util:distinct(node:order(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGroupOfDTC/eb-list::*[DemGroupDTCs &lt; node:current()], &apos;./DemGroupDTCs&apos;))[last()]),                              concat(&apos;DTC is element of DTC-group &apos;, node:name(util:distinct(node:order(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGroupOfDTC/eb-list::*[DemGroupDTCs &lt; node:current()], &apos;./DemGroupDTCs&apos;))[last()])),                              &apos;This DTC is not assigned to any DTC group other than DEM_DTC_GROUP_ALL_DTCS (because its value is less than the values of all DTC groups configured)&apos;)"/>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                          (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                          (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                        (num:integer(.) &gt;= 16776960) and (num:integer(.) &lt;= 16777214)" 
                                 true="Range 0xFFFF00..0xFFFFFE is reserved for FunctionalGroupIdentifier."/>
                          <a:tst 
                                 expr="( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                          (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                          (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                        ( (num:integer(.) &lt;= 255) or (num:integer(.) = 16777215) )" 
                                 true="Ranges 0x000000..0x0000FF and 0xFFFFFF are reserved by ISO 14229-1."/>
                        </a:da>
                      </v:var>
                      <v:var name="DemJ1939DTCValue" type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="DTC"/>
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Diagnostic Trouble Code value for J1939.&lt;/p&gt;
                              &lt;p&gt;Unique Diagnostic Trouble Code value for J1939 (consiting of SPN and FMI).&lt;/p&gt;
                              &lt;p&gt;The SPN is 19 bits and FMI is 5 bits.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;J1939 DTC Value&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="J1939 DTC Value"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:bc857da5-8824-42f3-aa15-53291a706cb2"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(node:pos(..) + 1)"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=16777214"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The J1939 DTC values must not be equal to group of DTC values." 
                                    expr="count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGroupOfDTC/eb-list::*[DemGroupDTCs = node:current()]) &gt; 0"/>
                            <mt:tst false="The J1939 DTC values must be unique." 
                                    expr="text:uniq(../../eb-list::*/DemJ1939DTCValue, .)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DemDtcValue3Byte" type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="DTC"/>
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Unique 3-byte Diagnostic Trouble Code value for OBDonUDS.&lt;/p&gt;
                              &lt;p&gt;The 3-byte OBD DTC value is used for OBDonUDS based communication
                                 if OBD/UDS DTC separation is enabled.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable this configuration parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;:
                                    must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;:
                                    must be configured.&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation&quot;&gt;DemSupportedObdUdsDtcSeparation&lt;/a&gt;:
                                    must be enabled and set to true.&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;: must be configued to
                                    either DEM_OBD_PRIMARY_ECU or DEM_OBD_MASTER_ECU.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="3-Byte OBD DTC Value"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:b1a44287-6b12-4e8d-a7a8-4995194b9763"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(node:pos(..) + 256)"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                      (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                       node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                   node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                     ((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_PRIMARY_ECU&apos;) or                                      (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_MASTER_ECU&apos;))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=16777214"/>
                            <mt:tst expr="&gt;=256"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    false="The 3-byte OBD DTC values must be unique." 
                                    expr="text:uniq(../../eb-list::*/DemDtcValue3Byte, .)"/>
                            <mt:tst 
                                    true="Range 0xFFFF00..0xFFFFFE is reserved by ISO 14229-1 for FunctionalGroupIdentifier, 0xFFFFFF is reserved for All Groups (all DTCs)" 
                                    expr="((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                            (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                            node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and (num:integer(.) &gt;= 16776960)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:ref name="DemJ1939NodeRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the J1939 NM node.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;J1939 NM node reference&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemJ1939DTCValue&lt;/code&gt;: J1939 DTC Value must be specified.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="J1939 NM node reference"/>
                        <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                        <a:a name="UUID" 
                             value="3191366c-7a88-44cc-8c69-5a9e0d981484"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="node:exists(../DemJ1939DTCValue)"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" false="Invalid reference."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmNode"/>
                      </v:ref>
                      <v:var name="DemDTCFunctionalUnit" type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="Functional Unit"/>
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;code&gt;DTCFuncitonalUnit&lt;/code&gt; is a 1-byte value that identifies
                              the corresponding basic vehicle / system function that reports
                              the DTC. This parameter is necessary for the report of
                              severity information.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DTC Functional Unit"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="be6b3762-e428-4602-beca-f8d49dede5cf"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="DemDTCSeverity" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter depends on the
                              automotive manufacturer and is optional.&lt;/p&gt;

                              &lt;p&gt;Range&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_SEV_NO_SEVERITY&lt;/code&gt;: No severity information available.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_SEV_MAINTENANCE_ONLY&lt;/code&gt;: Maintenance required.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_SEV_CHECK_AT_NEXT_HALT&lt;/code&gt;: Check at next halt.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_SEV_IMMEDIATELY&lt;/code&gt;: Check immediately.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DTC Severity"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="e584e93d-ac28-467e-b1da-1fd9f625d868"/>
                        <a:da name="DEFAULT" value="DEM_DTC_SEV_NO_SEVERITY"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="RANGE">
                          <a:v>DEM_DTC_SEV_NO_SEVERITY</a:v>
                          <a:v>DEM_DTC_SEV_MAINTENANCE_ONLY</a:v>
                          <a:v>DEM_DTC_SEV_CHECK_AT_NEXT_HALT</a:v>
                          <a:v>DEM_DTC_SEV_IMMEDIATELY</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DemWWHOBDDTCClass" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;DTC Class according to ISO 14229-1 [2013 version]. This parameter
                                depends on the automotive manufacturer. If this parameter is not configured
                                for any DTC, the Dem provides no DTC WWHOBD class information.&lt;/p&gt;
                              &lt;p&gt;This parameter has only a descriptive role, i.e., Dem supports its configuration
                                and calibration but without any WWHOBD related functionality.&lt;/p&gt;
                              &lt;p&gt;Range&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_WWHOBD_CLASS_NOCLASS&lt;/code&gt;: No Class information.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_WWHOBD_CLASS_A&lt;/code&gt;: Class A.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_WWHOBD_CLASS_B1&lt;/code&gt;: Class B1.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_WWHOBD_CLASS_B2&lt;/code&gt;: Class B2.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_DTC_WWHOBD_CLASS_C&lt;/code&gt;: Class C.&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Note: It must be ensured that DTC priority fits WWHOBD DTC Class priority.[refer SWS_Dem_CONSTR_6110]&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable this configuration parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemWWHOBDDTCClassSupport&quot;&gt;DemWWHOBDDTCClassSupport&lt;/a&gt;:
                                            must be set to &lt;code&gt;true&lt;/code&gt; and&lt;/li&gt;
                                &lt;li&gt;The DTC must be OBD relevant.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="WWHOBD DTC Class"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="1128206e-0e12-4e69-80a0-2e6f05f33fc0"/>
                        <a:da name="DEFAULT" value="DEM_DTC_WWHOBD_CLASS_A"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemWWHOBDDTCClassSupport)) and                                     ( (node:exists(../DemDtcValue3Byte)) or                                       ( (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) or                                            not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation))) and                                         (node:exists(../DemObdDTC)) ) )"/>
                        <a:da name="RANGE">
                          <a:v>DEM_DTC_WWHOBD_CLASS_NOCLASS</a:v>
                          <a:v>DEM_DTC_WWHOBD_CLASS_A</a:v>
                          <a:v>DEM_DTC_WWHOBD_CLASS_B1</a:v>
                          <a:v>DEM_DTC_WWHOBD_CLASS_B2</a:v>
                          <a:v>DEM_DTC_WWHOBD_CLASS_C</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DemImmediateNvStorage" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Switch to enable immediate storage triggering of a respective event
                              memory entry persistently to NVRAM.&lt;/p&gt;

                              &lt;p&gt;For an event with DemImmediateNvStorage ON, a respective event memory
                              entry is stored immediately.&lt;/p&gt;

                              &lt;p&gt;For an event with DemImmediateNvStorage OFF, a respective event memory
                              entry is stored persistently with &lt;code&gt;NvM_WriteAll()&lt;/code&gt; during shut-down.&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: immediate non-volatile storage triggering
                                enabled&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: immediate non-volatile storage triggering
                                disabled&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Immediate Nv Storage"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ed391357-89d9-4214-bb51-88a0a6f5e580"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:lst name="DemCallbackInitMForF" type="MAP">
                        <a:a name="LABEL" 
                             value="InitMonitorForFunction Callback List"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="ENABLE" value="false"/>
                        <v:ctr name="DemCallbackInitMForF" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;The presence of this container indicates that the
                                Dem has access to an &quot;InitMonitorForFunction&quot; callback,
                                which the Dem will call to initialize a monitor.&lt;/p&gt;

                                &lt;p&gt;If the container has a &lt;code&gt;DemCallbackInitMForFFnc&lt;/code&gt;,
                                this parameter defines the name of the function that the Dem will
                                call.&lt;/p&gt;

                                &lt;p&gt;If there is no &lt;code&gt;DemCallbackInitMForFFnc&lt;/code&gt;, the
                                Dem will have an R-Port requiring the interface
                                &lt;code&gt;CallbackInitMonitorForFunction&lt;/code&gt;,
                                whose name is generated by using the unique callback-prefix
                                followed by the event name.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="71b98f77-e622-40f7-a42d-d952e6923d85"/>
                          <a:da name="TITLE" 
                                value="InitMontiorForFunction Callback"/>
                          <v:var name="DemCallbackInitMForFFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                  is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                  &lt;p&gt;Function name of prototype
                                  &quot;InitMonitorForFunction&quot;.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="InitMonitorForFunction Callback C-Function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="8449f133-67f4-4d00-9318-67e6360310a0"/>
                            <a:da name="DEFAULT" 
                                  value="Module_DemCallbackInitMForFunction"/>
                            <a:da name="EDITABLE" value="false"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                  false="Invalid name. (no prefixed C function name)"/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                  <v:lst name="DemEventParameter" type="MAP">
                    <a:a name="COLUMNS">
                      <a:v>DemEventKind</a:v>
                      <a:v>DemMaxNumberFreezeFrameRecords</a:v>
                      <a:v>DemEventClass/DemEventDestination</a:v>
                      <a:v>DemEventClass/DemEventPriority</a:v>
                      <a:v>DemEventClass/DemFFPrestorageSupported</a:v>
                      <a:v>DemEventClass/DemAgingAllowed</a:v>
                      <a:v>DemEventClass/DemOperationCycleRef</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Event List"/>
                    <a:da name="MAX" value="8190"/>
                    <a:da name="MIN" value="1"/>
                    <v:ctr name="DemEventParameter" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This container contains the configuration (parameters) for
                            events.&lt;/p&gt;

                            &lt;p&gt;Note that this container definition does not explicitly define a
                            symbolic name parameter. Instead, the short name of the container
                            will be used in the Ecu configuration description to specify the
                            symbolic name of the diagnostic event.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="NAME_PATTERN" value="APPL_E_?"/>
                      <a:a name="REQUIRES-INDEX" value="false"/>
                      <a:a name="UUID" 
                           value="aa481c82-3b85-4d13-b656-fdf657bcb633"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                      (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)  =&apos;DEM_OBD_VARIANT_OBD_CLASSIC&apos;) and                                      node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC)))" 
                               true="If OBD support is activated and an event refers to the MIL, then it has to specify a DemObdDTC."/>
                        <a:tst 
                               expr="node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport) and                                      not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                      (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)  =&apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                       (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation))) and                                      node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemDtcValue3Byte)))" 
                               true="If OBD support is activated and an event refers to the MIL, then it has to specify a DemDtcValue3Byte."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                       not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemJ1939DTCValue)))" 
                               true="If OBD support and J1939 Support are activated and an event refers to the MIL, then it has to specify DemJ1939DTCValue."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                      (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef)) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef]) &gt; 0) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemJ1939DTCValue)))" 
                               true="If J1939 support is activated and an event refers to the AWIL then it has to specify a DemJ1939DTCValue."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                      (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef)) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef]) &gt; 0) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemJ1939DTCValue)))" 
                               true="If J1939 support is activated and an event refers to the PIL then it has to specify a DemJ1939DTCValue."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                      (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef)) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef]) &gt; 0) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemJ1939DTCValue)))" 
                               true="If J1939 support is activated and an event refers to the RSIL then it has to specify a DemJ1939DTCValue."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      (node:exists(./DemEventClass/DemEventDestination)) and                                      (node:value(./DemEventClass/DemEventDestination) != &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)" 
                               true="If an event refers to the MIL it shall be also assigned to the primary event memory."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                      (node:exists(./DemDTCClassRef)) and (node:exists(node:ref(DemDTCClassRef)/DemJ1939DTCValue)) and                                      (node:exists(./DemEventClass/DemEventDestination)) and                                      (node:value(./DemEventClass/DemEventDestination) != &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)" 
                               true="An event that refers to a DTC with a J1939 DTC value shall be assigned to the primary event memory."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                         node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)  =&apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                      (count(util:distinct(node:refs(util:distinct(node:refs(DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) &gt; 0) and                                      (node:ref(DemEventClass/DemOperationCycleRef)/DemOperationCycleType != &apos;DEM_OPCYC_OBD_DCY&apos;)" 
                               true="The event which references extended data record number 0x93 must be assigned to the DCY."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                         node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                      ( ( ( (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation))) or                                            (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)) ) and                                          (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC))) )  or                                        ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)) and                                          (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)) and                                          (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemDtcValue3Byte))) and                                          (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) ) ) and                                     (count(util:distinct(node:refs(util:distinct(node:refs(DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) &gt; 0)" 
                               true="Non OBD-relevant event is referencing extended data record number 0x93, but MAR data is allowed only for OBD-relevant events."/>
                        <a:tst 
                               expr="( (node:existsAndFalse(./DemStatusBitStorageTestFailedPerEvent)) or                                        ( not(node:exists(./DemStatusBitStorageTestFailedPerEvent)) and                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStatusBitStorageTestFailed = &apos;false&apos;) )                                      ) and                                      ( ( ( not(node:exists(./DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(./DemEvtCmbCommonParamMaster)) ) and                                          (count(node:refs(node:refs(node:refs(./DemFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)                                        ) or                                        ( (node:existsAndFalse(./DemEvtCmbCommonParamMaster)) and                                           (count(node:refs(node:refs(node:refs(../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and (DemDTCClassRef = node:current()/DemDTCClassRef)]/DemFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)                                        )                                      )" 
                               true="When a freeze frame references a DID containing a data element with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION, the TestFailed status bit must be stored permanently (see DemStatusBitStorageTestFailed and DemStatusBitStorageTestFailedPerEvent)."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemIgnoreResetEventStatusForEventRelatedDataCapturing)) and                                      ( (node:existsAndFalse(./DemStatusBitStorageTestFailedPerEvent)) or                                        ( not(node:exists(./DemStatusBitStorageTestFailedPerEvent)) and                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStatusBitStorageTestFailed = &apos;false&apos;) )                                      )" 
                               true="When DemIgnoreResetEventStatusForEventRelatedDataCapturing is set to true, the TestFailed status bit must be stored permanently (see DemStatusBitStorageTestFailed and DemStatusBitStorageTestFailedPerEvent)."/>
                      </a:da>
                      <a:da name="TITLE" value="Event Parameter"/>
                      <a:da name="WARNING" type="XPath">
                        <a:tst 
                               expr="node:refexists(DemDTCClassRef) and node:exists(node:ref(DemDTCClassRef)/DemObdDTC) and                                      ( count(../eb-list::*[node:refexists(DemDTCClassRef) and node:exists(node:ref(DemDTCClassRef)/DemObdDTC) and                                        (node:ref(DemDTCClassRef)/DemObdDTC = node:ref(node:current()/DemDTCClassRef)/DemObdDTC) and                                        node:exists(DemEventClass/DemEventPriority) and node:exists(node:current()/DemEventClass/DemEventPriority) and                                        (node:value(DemEventClass/DemEventPriority) != node:value(node:current()/DemEventClass/DemEventPriority))]) != 0 )" 
                               true="Events having identical OBD DTC value shall not be assigned different event priorities."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      node:refexists(DemDTCClassRef) and node:exists(node:ref(DemDTCClassRef)/DemObdDTC) and                                      ( count(../eb-list::*[node:refexists(DemDTCClassRef) and node:exists(node:ref(DemDTCClassRef)/DemObdDTC) and                                        (node:ref(DemDTCClassRef)/DemObdDTC = node:ref(node:current()/DemDTCClassRef)/DemObdDTC) and                                        (not(node:exists(DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(DemEvtCmbCommonParamMaster))) and                                        (not(node:exists(node:current()/DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(node:current()/DemEvtCmbCommonParamMaster))) and                                        (node:value(DemEventClass/DemEventOBDReadinessGroup) != node:value(node:current()/DemEventClass/DemEventOBDReadinessGroup))]) != 0 )" 
                               true="Events having identical OBD DTC value shall not be assigned to different event readiness groups."/>
                        <a:tst 
                               expr="node:refexists(DemDTCClassRef) and node:exists(node:ref(DemDTCClassRef)/DemObdDTC) and                                      ( count(../eb-list::*[node:refexists(DemDTCClassRef) and node:exists(node:ref(DemDTCClassRef)/DemObdDTC) and                                        (node:ref(DemDTCClassRef)/DemObdDTC = node:ref(node:current()/DemDTCClassRef)/DemObdDTC) and                                        node:exists(DemEventClass/DemEventDestination) and node:exists(node:current()/DemEventClass/DemEventDestination) and                                        (node:value(DemEventClass/DemEventDestination) != node:value(node:current()/DemEventClass/DemEventDestination))]) != 0 )" 
                               true="Events having identical OBD DTC value shall not be assigned to different event memories."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and (node:exists(./DemDTCClassRef)) and                                      ((node:exists(node:ref(DemDTCClassRef)/DemObdDTC))) and (not(node:exists(node:ref(DemDTCClassRef)/DemJ1939DTCValue))) and                                      (not((./DemEventClass/DemIndicatorAttribute/eb-list::*/DemIndicatorRef) = as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))" 
                               true="OBD DTC might not be visible through J1939."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                         node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)  =&apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                      (not(node:exists(DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(DemEvtCmbCommonParamMaster))) and                                      (node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC) or node:exists(util:distinct(node:refs(DemDTCClassRef))/DemDtcValue3Byte)) and                                      (count(util:distinct(node:refs(util:distinct(node:refs(DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) = 0)" 
                               true="The OBD event does not reference extended data record number 0x93, therefore MAR data won&apos;t be available."/>
                        <a:tst 
                               expr="(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                        (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation))) and                                      (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemDtcValue3Byte))) and                                      (count(util:distinct(node:refs(util:distinct(node:refs(DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) &gt; 0)" 
                               true="Non OBD-relevant event is referencing extended data record number 0x93. Memory is reserved, but no MAR data is tracked unless the event becomes OBD relevant (e.g. via calibration)."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                       (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation))) and                                      node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemDtcValue3Byte)) and                                      not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC))" 
                               true="If OBD variant selection is enabled and an events refer MIL, then it has to specify either DemObdDTC or/and DemDtcValue3Byte. The OBD relevance of an event depends on active OBD variant and availability of parameters DemObdDTC and DemDtcValue3Byte."/>
                        <a:tst 
                               expr="(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                      (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)) or                                       (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                       (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)))) and                                      node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC)) or                                       not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemUdsDTC)))" 
                               true="If OBD variant selection is enabled and an event refers MIL, then it has to specify either DemObdDTC and DemUdsDtc. The OBD relevance of an event is determined based on DemObdDTC. However, when the active OBD Variant is DEM_OBD_VARIANT_OBDONUDS such an event will only be reported if it is configured with a DemUdsDtc."/>
                        <a:tst 
                               expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                      (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                      (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)) or                                       (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                       (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)))) and                                      (not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC)) or                                       not(node:exists(util:distinct(node:refs(DemDTCClassRef))/DemUdsDTC)))" 
                               true="If OBD support is activated and an event refers to the MIL, then it has to specify DemObdDTC and DemUdsDTC."/>
                        <a:tst 
                               expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                                       node:existsAndTrue(DemEventClass/DemAgingAllowed) and                                      (node:exists(util:distinct(node:refs(DemDTCClassRef))/DemObdDTC)) and                                      (node:refexists(DemExtendedDataClassRef)) and                                      (count(util:distinct(util:distinct(node:refs(node:refs(DemExtendedDataClassRef)/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*)[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC5&apos;]) &gt; 0) and                                      (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0) and                                      (count(DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef!=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) &gt; 0)" 
                               true="If the event refers the MIL and other indicators too, a too slow healing of the non-MIL indicators can delay the aging of a possible event entry inadmissibly. Please ensure that non-MIL indicators do not heal slower than MIL indicators under any circumstances."/>
                      </a:da>
                      <v:var name="DemEventId" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Unique identifier of a diagnostic event. This parameter should
                              not be changeable by the user, because the ID should be generated by
                              Dem itself to prevent gaps and multiple use of an ID.&lt;/p&gt;

                              &lt;p&gt;The event IDs shall be sequentially ordered beginning with 1
                              and no gaps in between.&lt;/p&gt;

                              &lt;p&gt;The Handle-ID wizard can be used to set this value automatically.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Identifier"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" 
                             value="f322bd5b-7974-4530-a49a-36aec423dcb3"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(node:pos(..) + 1)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=8190"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst false="The Event ID must be unique." 
                                    expr="text:uniq(../../eb-list::*/DemEventId, .)"/>
                            <mt:tst 
                                    true="The Event IDs must be one-based and consecutive." 
                                    expr=". &gt; count(../../eb-list::*)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DemEventKind" type="ENUMERATION">
                        <a:a name="COLUMN_TITLE" value="Kind"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter is used to distinguish between
                              SW-C, BSW and SEV events.&lt;/p&gt;

                              &lt;p&gt;SW-C events are reported by
                              &lt;code&gt;Dem_SetEventStatus&lt;/code&gt;
                              API, BSW events are reported by
                              &lt;code&gt;Dem_ReportErrorStatus&lt;/code&gt; API
                              and SEV events are reported by
                              &lt;code&gt;Dem_SetEventFailedWithSyncFreezeFrame&lt;/code&gt; API.&lt;/p&gt;

                              &lt;p&gt;Range&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DEM_EVENT_KIND_BSW&lt;/code&gt;: The event is assigned to a BSW module.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_EVENT_KIND_SWC&lt;/code&gt;: The event is assigned to a SW-C.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_EVENT_KIND_SEV&lt;/code&gt;: The event is reported by Intrusion Detection System Manager (IdsM).&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Kind"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="e4b5da61-77ca-4837-9865-8ed5f83aa45a"/>
                        <a:da name="DEFAULT" value="DEM_EVENT_KIND_SWC"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        node:exists(../DemEvtCmbCommonParamMaster)" 
                                 true="Events of kind DEM_EVENT_KIND_SEV must not be part of an event combination."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                         node:exists(../DemDTCClassRef) and                                         (node:exists(as:ref(../DemDTCClassRef)/DemObdDTC) or                                          node:exists(as:ref(../DemDTCClassRef)/DemDtcValue3Byte) or                                          node:exists(as:ref(../DemDTCClassRef)/DemJ1939DTCValue) )" 
                                 true="Events of kind DEM_EVENT_KIND_SEV must have only an UDS DTC."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        node:exists(../DemEventClass/DemIndicatorAttribute/eb-list::*)" 
                                 true="Events of kind DEM_EVENT_KIND_SEV must not have an DemIndicatorAttribute."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        (node:exists(../DemEventClass/DemEventDestination) and                                         node:value(../DemEventClass/DemEventDestination) = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)" 
                                 true="Events of kind DEM_EVENT_KIND_SEV must not be placed in primary memory."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) )" 
                                 true="Events of kind DEM_EVENT_KIND_SEV cannot be configured, when DemFreezeFrameCapture or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        ( node:exists(../DemCallbackEventStatusChanged/eb-list::*))" 
                                 true="EventStatusChanged callback must not be configured for events of kind DEM_EVENT_KIND_SEV."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        node:refexists(../DemFreezeFrameClassRef) and                                        ( (count(as:ref(../DemFreezeFrameClassRef)/DemDidClassRef/eb-list::*) &gt; 1) or                                          (count(as:ref(as:ref(../DemFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*) &gt; 1) )" 
                                 true="Freeze frame classes referenced by events of kind DEM_EVENT_KIND_SEV may contain maximum 1 DID with maximum 1 Data element."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        node:refexists(../DemFreezeFrameClassRef) and                                        ( (node:name(as:ref(as:ref(as:ref(../DemFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)) != &apos;DemExternalCSDataElementClass&apos;) or                                          (node:existsAndTrue(as:ref(as:ref(as:ref(../DemFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementUsePort)) )" 
                                 true="A freeze frame class referenced by an event of kind DEM_EVENT_KIND_SEV must reference only DID classes with DemDataElementClass referencing a DemExternalCSDataElementClass that has DemDataElementUsePort set to false."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_EVENT_KIND_SEV&apos;) and                                        (node:existsAndTrue(../DemEventClass/DemAgingAllowed))" 
                                 true="Events of kind DEM_EVENT_KIND_SEV must not have aging configured."/>
                        </a:da>
                        <a:da name="RANGE">
                          <a:v>DEM_EVENT_KIND_BSW</a:v>
                          <a:v>DEM_EVENT_KIND_SWC</a:v>
                          <a:v>DEM_EVENT_KIND_SEV</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DemMaxNumberFreezeFrameRecords" 
                             type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="Freeze Frame Records"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines the maximum number of the respective freeze frame records
                              that can be stored for this event. Therefore, all these freeze
                              frame records have the same freeze frame class.&lt;/p&gt;

                              &lt;p&gt;The freeze frame record update mechanism depends on this parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;If &lt;code&gt;DemMaxNumberFreezeFrameRecords&lt;/code&gt; is 1,
                                    then the first entry (which is the only entry) will not be
                                    updated when the event re-occurs.&lt;/li&gt;
                                &lt;li&gt;If &lt;code&gt;DemMaxNumberFreezeFrameRecords&lt;/code&gt; (N) is greater
                                    than 1, then the last (Nth) entry is updated on the re-occurrence of
                                    the event, and the previous (1 to N-1) entries will remain unchanged
                                    when all the available freeze frame record slots for this event
                                    are occupied.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Freeze Frame Records&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemFreezeFrameClassRef&lt;/code&gt; or
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef&quot;&gt;DemCommonFFDataClassRef&lt;/a&gt;: must be specified.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTypeOfFreezeFrameRecordNumeration&quot;&gt;DemTypeOfFreezeFrameRecordNumeration&lt;/a&gt;:
                                  must be set to &lt;code&gt;DEM_FF_RECNUM_CALCULATED&lt;/code&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                &lt;code&gt;DemMaxNumberFreezeFrameRecords&lt;/code&gt; is not editable and derives its configuration value
                                from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled. In this case
                                if the reference contains an invalid value, consequently it cannot be corrected , thus the
                                warning &quot;value does not refer to nodes&quot; will be displayed. However, since this invalid value
                                is not used for the generation of the module, this warning can be safely ignored.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Freeze Frame Records"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="fb168276-d07c-40df-8f4e-7038206fb34f"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(node:exists(../DemFreezeFrameClassRef) or (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)))                                 and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTypeOfFreezeFrameRecordNumeration = &apos;DEM_FF_RECNUM_CALCULATED&apos;)                                 and (not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)))"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath 
                                    true="DemMaxNumberFreezeFrameRecords must be less than or equal to 239. When OBDonUDS freeze frame is enabled, the record number 0xF0 (240) is reserved for the last OBD freeze frame occurrence of given event." 
                                    expr="node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport) and                                        ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                          (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                          (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                        (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                        (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTypeOfFreezeFrameRecordNumeration = &apos;DEM_FF_RECNUM_CALCULATED&apos;) and                                        (. &gt; 239)"/>
                        </a:da>
                      </v:var>
                      <v:ref name="DemOBDGroupingAssociativeEventsRef" 
                             type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines a reference which points to a representative
                                event of one group of associate events. The &quot;referenced event&quot; must
                                refer to itself.&lt;/p&gt;
                              &lt;p&gt;Note: One event is only allowed to be referenced to only one group
                                of associate events.&lt;/p&gt;
                              &lt;p&gt;All events assigned to a MIL group must use the MIL indicator.&lt;/p&gt;
                              &lt;p&gt;Each event assigned to a MIL group must use the same operation cycle configured
                                in &lt;code&gt;DemOperationCycleRef&lt;/code&gt; for all of the following specific operation cycle
                                references:
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEventFailureCycleRef&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemIndicatorFailureCycleRef&lt;/code&gt; corresponding to the MIL indicator.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemIndicatorHealingCycleRef&lt;/code&gt; corresponding to the MIL indicator.&lt;/li&gt;
                                &lt;/ul&gt;
                                This condition can be ensured either by configuring these parameters individually
                                or by enabling the common operation cycle support
                                (&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport&quot;&gt;(DemCommonOperationCycleSupport&lt;/a&gt;)).
                              &lt;/p&gt;
                              &lt;p&gt;Each event assigned to a MIL group must have the &lt;code&gt;DemIndicatorFailureCycleCounterThreshold&lt;/code&gt;
                                configured for the MIL indicator equal to the &lt;code&gt;DemEventFailureCycleCounterThreshold&lt;/code&gt;.
                                This condition is automatically fulfilled if &lt;code&gt;DemIndicatorFailureCycleSource&lt;/code&gt; is
                                configured to &lt;code&gt;DEM_FAILURE_CYCLE_EVENT&lt;/code&gt;.
                              &lt;/p&gt;
                              &lt;p&gt;All events assigned to the same MIL group must share the same operation cycle
                                (&lt;code&gt;DemOperationCycleRef&lt;/code&gt;) and must have the same value configured for
                                the event failure threshold (&lt;code&gt;DemEventFailureCycleCounterThreshold&lt;/code&gt;).
                              &lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                               To enable support for &lt;em&gt;MIL group representative&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;:
                                  must be set to &lt;code&gt;DEM_OBD_MASTER_ECU&lt;/code&gt; or &lt;code&gt;DEM_OBD_PRIMARY_ECU&lt;/code&gt;
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="MIL group representative"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="5e069fbe-4b92-4fc7-869e-e2da8996229b"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst 
                                 expr="( (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) or                                          ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind != &apos;DEM_OBD_MASTER_ECU&apos;) and                                            (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind != &apos;DEM_OBD_PRIMARY_ECU&apos;) ) )" 
                                 true="This parameter requires DemOBDSupport to be enabled and DemOBDSupportKind to be configured to DEM_OBD_MASTER_ECU or DEM_OBD_PRIMARY_ECU."/>
                          <a:tst 
                                 expr="(node:refvalid(.)) and                                        ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) )" 
                                 true="MIL grouping is not supported when DemFreezeFrameCapture and/or DemExtendedDataCapture are configured to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="node:exists(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef])" 
                                 false="The current event is assigned to a MIL group, therefore it must reference the MIL indicator."/>
                          <a:tst 
                                 expr="(node:refvalid(.)) and                                        ( (not(node:refvalid(node:ref(.)/DemOBDGroupingAssociativeEventsRef))) or                                          (as:name(node:ref(.))!=as:name(node:ref(node:ref(.)/DemOBDGroupingAssociativeEventsRef))) )" 
                                 true="The referenced event is not the representative of the MIL group, i.e., it does not reference itself via DemOBDGroupingAssociativeEventsRef."/>
                          <a:tst 
                                 expr="(node:refvalid(.)) and                                        (as:name(as:ref(../DemEventClass/DemOperationCycleRef))!=as:name(as:ref(node:ref(.)/DemEventClass/DemOperationCycleRef)))" 
                                 true="A MIL group event must configure the same DemOperationCycleRef as the MIL group representative event."/>
                          <a:tst 
                                 expr="(node:refvalid(.)) and                                        (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                        ( ( (node:exists(../DemEventClass/DemEventFailureCycleRef)) and                                            (as:name(as:ref(../DemEventClass/DemOperationCycleRef))!=as:name(as:ref(../DemEventClass/DemEventFailureCycleRef))) ) or                                          ( (node:existsAndFalse(../DemEvtCmbCommonParamMaster)) and                                            ( (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleRef)) and                                              (as:name(as:ref(../DemEventClass/DemOperationCycleRef))!=as:name(as:ref(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleRef))) ) ) )" 
                                 true="Event Failure Cycle must not be different from the Operation Cycle for the MIL group events."/>
                          <a:tst 
                                 expr="( (node:exists(../DemEventClass/DemEventFailureCycleCounterThreshold) and                                          (node:value(../DemEventClass/DemEventFailureCycleCounterThreshold) &lt; 2)) ) or                                        ( (not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and                                          (not(node:exists(../DemEventClass/DemEventFailureCycleCounterThreshold))) ) or                                        ( node:existsAndFalse(../DemEvtCmbCommonParamMaster) and                                          ( (not(node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                              (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold))) or                                            ( (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:value(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)=1) ) ) )" 
                                 true="MIL group events must have DemEventFailureCycleCounterThreshold configured with a value greater than 1."/>
                          <a:tst 
                                 expr="(node:refvalid(.) and (as:name(node:ref(.))!=as:name(..))) and                                        ( ( ( (not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and                                              (not(node:exists(node:ref(.)/DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(node:ref(.)/DemEvtCmbCommonParamMaster)))) and                                            ( (node:exists(../DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:exists(node:ref(.)/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:value(../DemEventClass/DemEventFailureCycleCounterThreshold)!=                                                 node:value(node:ref(.)/DemEventClass/DemEventFailureCycleCounterThreshold)) ) ) or                                          ( ( (node:existsAndFalse(../DemEvtCmbCommonParamMaster)) and                                              (not(node:exists(node:ref(.)/DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(node:ref(.)/DemEvtCmbCommonParamMaster)))) and                                            ( (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:exists(node:ref(.)/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:value(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                  (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)!=                                                  node:value(node:ref(.)/DemEventClass/DemEventFailureCycleCounterThreshold)) ) ) or                                          ( ( (not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and                                              (node:existsAndFalse(node:ref(.)/DemEvtCmbCommonParamMaster)) ) and                                            ( (node:exists(../DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                 (DemDTCClassRef = node:ref(node:current())/DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:value(../DemEventClass/DemEventFailureCycleCounterThreshold)!=                                                 node:value(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                  (DemDTCClassRef = node:ref(node:current())/DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) ) ) or                                          ( ( (node:existsAndFalse(../DemEvtCmbCommonParamMaster)) and                                              (node:existsAndFalse(node:ref(.)/DemEvtCmbCommonParamMaster)) ) and                                            ( (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:ref(node:current())/DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                              (node:value(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)!=                                               node:value(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                                (DemDTCClassRef = node:ref(node:current())/DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) ) ) )" 
                                 true="A MIL group event must have the same DemEventFailureCycleCounterThreshold value as the MIL group representative event."/>
                          <a:tst 
                                 expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                        (node:exists(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleSource)) and                                        (node:value(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleSource) = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos;) and                                        (as:name(as:ref(../DemEventClass/DemOperationCycleRef))!=as:name(as:ref(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleRef)))" 
                                 true="MIL Indicator Failure Cycle must be the same as the Operation Cycle for the MIL group events."/>
                          <a:tst 
                                 expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                        (node:exists(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorHealingCycleRef)) and                                        (as:name(as:ref(../DemEventClass/DemOperationCycleRef))!=as:name(as:ref(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorHealingCycleRef)))" 
                                 true="MIL Indicator Healing Cycle must be the same as the Operation Cycle for the MIL group events."/>
                          <a:tst 
                                 expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                        (node:exists(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=                                          as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleSource)) and                                        (node:value(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=                                          as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleSource) = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos;) and                                        ( ( (not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)) ) and                                            (node:exists(../DemEventClass/DemEventFailureCycleCounterThreshold)) and                                            (node:value(../DemEventClass/DemEventFailureCycleCounterThreshold)!=node:value(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=                                              as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleCounterThreshold)) ) or                                          ( (node:existsAndFalse(../DemEvtCmbCommonParamMaster)) and                                            (node:exists(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                              (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)) and                                            (node:value(../../eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                              (DemDTCClassRef = node:current()/../DemDTCClassRef)]/DemEventClass/DemEventFailureCycleCounterThreshold)!=                                             node:value(../DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=                                               as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]/DemIndicatorFailureCycleCounterThreshold)) ) )" 
                                 true="MIL Indicator Failure Cycle Threshold must be equal to Event Failure Cycle Threshold for the MIL group events."/>
                          <a:tst 
                                 expr="(node:exists(../DemEvtCmbCommonParamMaster)) and                                       (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport) and                                        (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)))" 
                                 true="A combined event must not belong to MIL group when the OBD variant is configured as OBDonUDS (DEM_OBD_VARIANT_OBDONUDS) or is selectable during runtime (DemCalloutObdVariantFnc)."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                        <a:da name="WARNING" type="XPath" 
                              expr="(node:refvalid(.)) and                                        (as:name(node:ref(.))=as:name(..)) and                                        (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemOBDGroupingAssociativeEventsRef = node:current()]) = 1)" 
                              true="Suboptimal configuration: This MIL group representative is not referenced by any other event via DemOBDGroupingAssociativeEventsRef."/>
                      </v:ref>
                      <v:var name="DemEvtCmbCommonParamMaster" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              Define the &quot;master configuration&quot; event for combined DTCs, which is one selected event to configure the following common configuration parameters:
                              &lt;ul&gt;
                                &lt;li&gt;DemEventDestination&lt;/li&gt;
                                &lt;li&gt;DemEventPriority&lt;/li&gt;
                                &lt;li&gt;DemFreezeFrameRecNumClassRef&lt;/li&gt;
                                &lt;li&gt;DemFFPrestorageSupported&lt;/li&gt;
                                &lt;li&gt;DemFreezeFrameClassRef&lt;/li&gt;
                                &lt;li&gt;DemDevFreezeFrameAClassRef&lt;/li&gt;
                                &lt;li&gt;DemDevFreezeFrameBClassRef&lt;/li&gt;
                                &lt;li&gt;DemExtendedDataClassRef&lt;/li&gt;
                                &lt;li&gt;DemAgingAllowed&lt;/li&gt;
                                &lt;li&gt;DemAgingCycleCounterThreshold&lt;/li&gt;
                                &lt;li&gt;DemAgingCycleRef&lt;/li&gt;
                                &lt;li&gt;DemEventFailureCycleCounterThreshold&lt;/li&gt;
                                &lt;li&gt;DemEventFailureCycleRef&lt;/li&gt;
                                &lt;li&gt;DemCallbackClearEventAllowed&lt;/li&gt;
                                &lt;li&gt;DemCallbackClearEventAllowedFnc&lt;/li&gt;
                                &lt;li&gt;DemEventSignificance&lt;/li&gt;
                                &lt;li&gt;DemMinRatioEvent&lt;/li&gt;
                                &lt;li&gt;DemEventOBDReadinessGroup&lt;/li&gt;
                                &lt;li&gt;DemOperationCycleRef, if the event stores the data element DEM_FAILED_CYCLES&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: This event is used as master for the combined DTC.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: This event is not used as master for the combined DTC.&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Combined DTC Master Configuration Event&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemDTCClassRef&lt;/code&gt;: DTC Class must be specified and several events shall be mapped to one DTC Class.&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;DEM_EVCOMB_TYPE1&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Combined DTC Master Configuration Event"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="799b7e53-de79-4eef-a486-28ada38bdd10"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="node:refexists(../DemDTCClassRef) and                                     (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_TYPE1&apos;) and                                     (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemDTCClassRef = node:current()/../DemDTCClassRef]) &gt; 1)"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[(node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                       (DemDTCClassRef = node:current()/../DemDTCClassRef)]) = 1" 
                              false="Exactly one combined event shall be the master for common parameters."/>
                      </v:var>
                      <v:var name="DemStatusBitStorageTestFailedPerEvent" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;When enabled, this parameter will overwrite the value of general configuration parameter
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStatusBitStorageTestFailed&quot;&gt;DemStatusBitStorageTestFailed&lt;/a&gt;
                              for this event.&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: permanent storage activated&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: permanent storage deactivated&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Status Bit Storage Test Failed"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="UUID" 
                             value="70e0d188-9de2-11eb-a8b3-0242ac130003"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="(node:exists(.)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStatusBitStorageTestFailed)) and (node:existsAndTrue(.)) and                                        (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemNvRamBlockId/eb-list::*[as:name(.) != &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;]) = 0)" 
                                 true="If the configuration parameter Status Bit Storage Test Failed is set on true then also the NvM block reference DEM_NVM_BLOCK_ID_DEFAULT must be configured."/>
                          <a:tst 
                                 expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingRequiresTestedCycleSetOperationCycleState))                                        and                                        (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStatusBitStorageTestFailed))                                        and                                        (node:existsAndFalse(.))                                        and                                        (                                          (                                            not(node:exists(../DemEvtCmbCommonParamMaster))                                            and                                            (                                              (node:existsAndTrue(../DemEventClass/DemAgingAllowed))                                              and                                              (                                                not(node:exists(../DemEventClass/DemAgingCycleRef))                                                or                                                (../DemEventClass/DemOperationCycleRef = ../DemEventClass/DemAgingCycleRef)                                              )                                            )                                          )                                          or                                          (                                            (node:existsAndTrue(../DemEvtCmbCommonParamMaster))                                            and                                            (                                              (node:existsAndTrue(../DemEventClass/DemAgingAllowed))                                              and                                              (                                                not(node:exists(../DemEventClass/DemAgingCycleRef))                                                or                                                (../DemEventClass/DemOperationCycleRef = ../DemEventClass/DemAgingCycleRef)                                              )                                            )                                          )                                          or                                          (                                             (node:existsAndFalse(../DemEvtCmbCommonParamMaster))                                             and                                             as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*                                              [ (node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                               (DemDTCClassRef = node:current()/../DemDTCClassRef)                                              ]/eb-list::*                                              [                                                (node:existsAndTrue(DemAgingAllowed)) and                                                (                                                  not(node:exists(./DemAgingCycleRef))                                                  or                                                  (./DemAgingCycleRef = ./DemOperationCycleRef)                                                )                                              ]                                          )                                        )                                       " 
                                 true="If DemAgingRequiresTestedCycleSetOperationCycleState and DemStatusBitStorageTestFailedPerEvent are disabled, the aging will start with the first Dem_SetOperationCycleState() after the ECU reset, even though the event was not reported as passed."/>
                          <a:tst 
                                 expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingRequiresTestedCycleSetAgingCycleState))                                        and                                        (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStatusBitStorageTestFailed))                                        and                                        (node:existsAndFalse(.))                                        and                                        (                                          (                                            not(node:exists(../DemEvtCmbCommonParamMaster))                                            and                                            (                                              (node:existsAndTrue(../DemEventClass/DemAgingAllowed))                                              and                                              (                                                not(node:exists(../DemEventClass/DemAgingCycleRef))                                                or                                                (../DemEventClass/DemOperationCycleRef != ../DemEventClass/DemAgingCycleRef)                                              )                                            )                                          )                                          or                                          (                                            (node:existsAndTrue(../DemEvtCmbCommonParamMaster))                                            and                                            (                                              (node:existsAndTrue(../DemEventClass/DemAgingAllowed))                                              and                                              (                                                not(node:exists(../DemEventClass/DemAgingCycleRef))                                                or                                                (../DemEventClass/DemOperationCycleRef != ../DemEventClass/DemAgingCycleRef)                                              )                                            )                                          )                                          or                                          (                                             (node:existsAndFalse(../DemEvtCmbCommonParamMaster))                                             and                                             as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*                                              [ (node:existsAndTrue(DemEvtCmbCommonParamMaster)) and                                               (DemDTCClassRef = node:current()/../DemDTCClassRef)                                              ]/eb-list::*                                              [                                                (node:existsAndTrue(DemAgingAllowed)) and                                                (                                                  not(node:exists(./DemAgingCycleRef))                                                  or                                                  (./DemAgingCycleRef != ./DemOperationCycleRef)                                                )                                              ]                                          )                                        )                                       " 
                                 true="If DemAgingRequiresTestedCycleSetAgingCycleState and DemStatusBitStorageTestFailedPerEvent are disabled, the aging will start with the first Dem_SetAgingCycleState() after the ECU reset, even though the event was not reported as passed."/>
                        </a:da>
                      </v:var>
                      <v:ref name="DemDTCClassRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines the DTC configuration
                              associated with the diagnostic event.&lt;/p&gt;

                              &lt;p&gt;It is allowed to have events without a DTC
                              (e.g. for ECU-internal events triggering safety
                              reactions without being reported via diagnostic
                              communication). The same DemDTCClass can be
                              used from several events, to combine these.&lt;/p&gt;

                              &lt;p&gt;If this parameter is disabled, the parameter
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemStoreInternalEvents&quot;&gt;DemStoreInternalEvents&lt;/a&gt;
                              defines how internal events are stored.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DTC Class"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="e2a999d3-8b63-4587-b4bf-72968aa0c2b7"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and not(text:uniq(../../eb-list::*/DemDTCClassRef, .))" 
                                 true="Event Combination is disabled. A DTC must not be assigned to several events."/>
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemDTCClass"/>
                      </v:ref>
                      <v:ref name="DemExtendedDataClassRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This reference defines the link to an extended data class sampler.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt; to enable support
                                for &lt;em&gt;Extended Data Class&lt;/em&gt;. Otherwise &lt;code&gt;DemExtendedDataClassRef&lt;/code&gt; is not
                                editable and derives its configuration value from the associated event with
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled. In this case if the reference contains
                                an invalid value, consequently it cannot be corrected , thus the warning &quot;value does not refer
                                to nodes&quot; will be displayed. However, since this invalid value is not used for the generation of
                                the module, this warning can be safely ignored.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemEventSignificance&lt;/code&gt;: must be configured, if the internal data element
                                  &lt;code&gt;DemDataElementClassRef&lt;/code&gt; is configured with &lt;code&gt;DEM_SIGNIFICANCE&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Extended Data Class"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="ff61f7b5-81a5-4378-b138-9abf66bac549"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and not(node:refvalid(.))" 
                                 true="Invalid reference."/>
                          <a:tst 
                                 expr="( not(node:exists(../DemEventClass/DemEventSignificance)) and node:exists(.) and (node:refexists(.)) and (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(.))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_SIGNIFICANCE&apos;]) &gt; 0) and ( not(node:exists(DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(DemEvtCmbCommonParamMaster)) ) )" 
                                 true="If the internal data element is configured DEM_SIGNIFICANCE, Event Significance must be configured too."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemExtendedDataClass"/>
                      </v:ref>
                      <v:ref name="DemFreezeFrameClassRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;These references define the links to
                              a freeze frame class sampler.&lt;/p&gt;

                              &lt;p&gt;The number of linked classes complies with the
                              possible captured freeze frames, which are also
                              reported from UDS service 0x19.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Freeze Frame Class&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                &lt;code&gt;DemFreezeFrameClassRef&lt;/code&gt; is not editable and derives its configuration
                                value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                In this case if the reference contains an invalid value, consequently it cannot be corrected,
                                thus the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                invalid value is not used for the generation of the module, this warning can be safely ignored.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Freeze Frame Class"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="998bb631-31f9-4584-83dd-22acbd8ea1c7"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="((not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and not(node:refvalid(.)))" 
                                 true="Invalid reference."/>
                          <a:tst 
                                 expr="((node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)) and                                      (node:refexists(.)) and ((count(as:ref(.)/DemDidClassRef/eb-list::*)) + (count(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)/DemDidClassRef/eb-list::*))&gt;255))" 
                                 true="Total number of DIDs contained in the FF class referred by DemFreezeFrameClassRef and DemCommonFFDataClassRef exceeds 255.(DIDs in Regular FF + DIDs in Common FF) should not exceed 255."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameClass"/>
                        <a:da name="WARNING" type="XPath" 
                              expr="(not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and                                        (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)) and                                        (as:name(as:ref(.)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)))" 
                              true="Referenced Freeze Frame Class shall not be the same as the common part of Freeze Frame Class."/>
                      </v:ref>
                      <v:ref name="DemJ1939FreezeFrameClassRef" 
                             type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;These references define the links to
                              a J1939 freeze frame class sampler.&lt;/p&gt;
                              &lt;p&gt;It shall have the following SPNs configured in the given order:&lt;/p&gt;
                            &lt;ul&gt;
                                &lt;li&gt;SPN 899&lt;/li&gt;
                                &lt;li&gt;SPN 102&lt;/li&gt;
                                &lt;li&gt;SPN 190&lt;/li&gt;
                                &lt;li&gt;SPN 92&lt;/li&gt;
                                &lt;li&gt;SPN 110&lt;/li&gt;
                                &lt;li&gt;SPN 84&lt;/li&gt;
                                &lt;li&gt;Manufacture-specific information&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;J1939 Freeze Frame Class&lt;/em&gt;,&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939FreezeFrameSupport&quot;&gt;DemJ1939FreezeFrameSupport&lt;/a&gt;: must be
                                set to &lt;code&gt;true&lt;/code&gt;.
                              &lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not editable and derives
                                its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="J1939 Freeze Frame Class"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                        <a:a name="UUID" 
                             value="7008bb87-5278-4c0e-bccf-7968c9a9658a"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939FreezeFrameSupport)) and (not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath>
                            <mt:tst true="Invalid reference." 
                                    expr="(not(node:refvalid(.)))"/>
                            <mt:tst 
                                    true="Event shall reference a valid DTC class with a configured J1939 DTC." 
                                    expr="( (node:refvalid(.)) and                                   ( (not(node:refvalid(../DemDTCClassRef))) or (node:empty(as:ref(../DemDTCClassRef)/DemJ1939DTCValue))))"/>
                            <mt:tst 
                                    true="DemJ1939FreezeFrameClassRef shall have at least the SPNs 899, 102, 190, 92, 110 and 84 configured in the given order." 
                                    expr=" (node:refvalid(.))                                        and                                        ( (count(as:ref(.)/DemSPNClassRef/eb-list::*) &lt; 6)              or                                          (as:ref(as:ref(.)/DemSPNClassRef/eb-list::*[1])/DemSPNId !=899)  or                                          (as:ref(as:ref(.)/DemSPNClassRef/eb-list::*[2])/DemSPNId!=102)   or                                          (as:ref(as:ref(.)/DemSPNClassRef/eb-list::*[3])/DemSPNId!=190)   or                                          (as:ref(as:ref(.)/DemSPNClassRef/eb-list::*[4])/DemSPNId!=92)    or                                          (as:ref(as:ref(.)/DemSPNClassRef/eb-list::*[5])/DemSPNId!=110)   or                                          (as:ref(as:ref(.)/DemSPNClassRef/eb-list::*[6])/DemSPNId!=84)                                        )"/>
                          </mt:xpath>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemJ1939FreezeFrameClass"/>
                      </v:ref>
                      <v:ref name="DemFreezeFrameRecNumClassRef" 
                             type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines the list of dedicated freeze frame record numbers
                              associated with the diagnostic event. These record numbers are assigned
                              to the freeze frame records (instead of calculated record numbers).&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Freeze Frame Record Number Class&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemFreezeFrameClassRef&lt;/code&gt;/&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef&quot;&gt;DemCommonFFDataClassRef&lt;/a&gt;:&lt;br/&gt;
                                  &lt;code&gt;DemFreezeFrameClassRef&lt;/code&gt;: must be specified&lt;br/&gt;or&lt;br/&gt;
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef&quot;&gt;DemCommonFFDataClassRef&lt;/a&gt;: must be specified.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTypeOfFreezeFrameRecordNumeration&quot;&gt;DemTypeOfFreezeFrameRecordNumeration&lt;/a&gt;:
                                  must be set to &lt;code&gt;DEM_FF_RECNUM_CONFIGURED&lt;/code&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                  &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter
                                  (&lt;code&gt;DemFreezeFrameRecNumClassRef&lt;/code&gt;) is not editable and derives its configuration value from the associated event with
                                  &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled. In that case, a warning may be generated mentioning &quot;value does not refer to
                                  nodes&quot;. This warning can be ignored accordingly.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Freeze Frame Record Number Class"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="fb160327-404a-480b-9adc-f711629b589f"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(node:exists(../DemFreezeFrameClassRef) or (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)))                                     and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTypeOfFreezeFrameRecordNumeration = &apos;DEM_FF_RECNUM_CONFIGURED&apos;) and                                     ( not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)) )"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster))) and not(node:refvalid(.))" 
                              true="A valid freeze frame record number class has to be referred, because configured record numeration is used."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameRecNumClass"/>
                      </v:ref>
                      <v:ref name="DemDevFreezeFrameAClassRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Parameter used for pointing out the data for development
                                 freeze frame A. If this parameter is not enabled, there
                                 will be no development freeze frame A saved for this event.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Development freeze frames A must not include
                                 data elements with parameter DemDataElementCaptureTrigger
                                 configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemDTCClassRef&lt;/code&gt;: Each event is mapped to a unique DTC Class to enable support for
                                  &lt;em&gt;Development Freeze Frame A Class&lt;/em&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt; to enable support for &lt;em&gt;Development Freeze Frame A Class&lt;/em&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemEventDestination&lt;/code&gt;: &lt;em&gt;Development Freeze Frame A Class&lt;/em&gt; can only be
                                  assigned to events with event destination &lt;code&gt;DEM_DTC_ORIGIN_PRIMARY_MEMORY&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Development Freeze Frame A Class"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="UUID" 
                             value="998bb631-31f9-4584-83dd-22acbd8ea1c8"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemDTCClassRef=node:current()/../DemDTCClassRef]) &lt; 2) and (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and not(node:refvalid(.))" 
                                 true="Invalid reference."/>
                          <a:tst 
                                 expr="node:exists(../DemEventClass/DemEventDestination) and (../DemEventClass/DemEventDestination != &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)" 
                                 true="Development freeze frames A can only be assigned to events with event destination DEM_DTC_ORIGIN_PRIMARY_MEMORY."/>
                          <a:tst 
                                 expr="((node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef)) and                                      (node:refexists(.)) and ((count(as:ref(.)/DemDidClassRef/eb-list::*)) + (count(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef)/DemDidClassRef/eb-list::*))&gt;255))" 
                                 true="Total number of DIDs contained in the FF class referred by DemDevFreezeFrameAClassRef and DemCommonFFDataDevAClassRef exceeds 255.(DIDs in Development FF A + DIDs in Common Development FF A) should not exceed 255."/>
                          <a:tst 
                                 expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(.)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                                 true="Development freeze frames A must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameClass"/>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and                                        (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef)) and                                        (as:name(as:ref(.)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef)))" 
                                 true="Referenced Freeze Frame A Class shall not be the same as the common part of Freeze Frame A Class."/>
                          <a:tst 
                                 expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and                                        (node:refexists(../DemDevFreezeFrameBClassRef)) and                                        (as:name(as:ref(.)) = as:name(as:ref(../DemDevFreezeFrameBClassRef)))" 
                                 true="Referenced Freeze Frame A Class shall not be the same as referenced Freeze Frame B Class."/>
                          <a:tst 
                                 expr="(node:refexists(../DemFreezeFrameClassRef)) and                                        (as:name(as:ref(.)) = as:name(as:ref(../DemFreezeFrameClassRef)))" 
                                 true="Referenced Freeze Frame A Class shall not be the same as referenced regular Freeze Frame Class."/>
                        </a:da>
                      </v:ref>
                      <v:var name="DemDevFreezeFrameARecNum" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The record number for development freeze frame A for this event.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Development Freeze Frame A Record Number&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt;.
                                &lt;/li&gt;
                               &lt;li&gt;&lt;code&gt;DemDevFreezeFrameAClassRef&lt;/code&gt; or
                                 &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef&quot;&gt;DemCommonFFDataDevAClassRef&lt;/a&gt;
                                 must be specified.
                               &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Development Freeze Frame A Record Number"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aead1748-b908-4f8a-9fbe-478559d0df4e"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and                                     ((node:exists(../DemDevFreezeFrameAClassRef)) or (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef))))"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=254"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The configured record number of Development Freeze Frame A needs to be unique." 
                                    expr="( node:exists(../DemDevFreezeFrameBRecNum) and (../DemDevFreezeFrameBRecNum = .) ) or                                           ( node:refexists(../DemFreezeFrameRecNumClassRef) and (count(as:ref(../DemFreezeFrameRecNumClassRef)/DemFreezeFrameRecordNumber/eb-list::*[as:name(.) = node:current()]) &gt; 0) ) or                                           ( not(node:exists(../DemFreezeFrameRecNumClassRef)) and node:exists(../DemFreezeFrameClassRef) and (../DemMaxNumberFreezeFrameRecords &gt;= .) ) or                                           ((node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef))                                            and (../DemMaxNumberFreezeFrameRecords &gt;= .) )"/>
                            <mt:tst 
                                    true="DemDevFreezeFrameARecNum must not carry record number equal to 0xF0. When OBDonUDS freeze frame is enabled, the record number 0xF0 (240) is reserved for the last OBD freeze frame occurrence of the event." 
                                    expr="(. = 240) and                                           (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                           ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                             (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                             (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                           (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                           (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:ref name="DemDevFreezeFrameBClassRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Parameter used for pointing out the data for development
                                 freeze frame B. If this parameter is not enabled, there
                                 will be no development freeze frame B saved for this event.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Development freeze frames B must not include
                                 data elements with parameter DemDataElementCaptureTrigger
                                 configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemDTCClassRef&lt;/code&gt;: Each event is mapped to a unique DTC Class
                                  to enable support for &lt;em&gt;Development Freeze Frame B Class&lt;/em&gt;.&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt; to enable support for &lt;em&gt;Development Freeze Frame B Class&lt;/em&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemEventDestination&lt;/code&gt;: &lt;em&gt;Development Freeze Frame B Class&lt;/em&gt; can only be
                                  assigned to events with event destination &lt;code&gt;DEM_DTC_ORIGIN_PRIMARY_MEMORY&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Development Freeze Frame B Class"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="UUID" 
                             value="998bb631-31f9-4584-83dd-22acbd8ea1c9"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemDTCClassRef=node:current()/../DemDTCClassRef]) &lt; 2) and (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and not(node:refvalid(.))" 
                                 true="Invalid reference."/>
                          <a:tst 
                                 expr="node:exists(../DemEventClass/DemEventDestination) and (../DemEventClass/DemEventDestination != &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)" 
                                 true="Development freeze frames B can only be assigned to events with event destination DEM_DTC_ORIGIN_PRIMARY_MEMORY."/>
                          <a:tst 
                                 expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(.)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                                 true="Development freeze frames B must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameClass"/>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and                                        (node:refexists(../DemDevFreezeFrameAClassRef)) and                                        (as:name(as:ref(.)) = as:name(as:ref(../DemDevFreezeFrameAClassRef)))" 
                                 true="Referenced Freeze Frame B Class shall not be the same as referenced Freeze Frame A Class."/>
                          <a:tst 
                                 expr="(node:refexists(../DemFreezeFrameClassRef)) and                                        (as:name(as:ref(.)) = as:name(as:ref(../DemFreezeFrameClassRef)))" 
                                 true="Referenced Freeze Frame B Class shall not be the same as referenced regular Freeze Frame Class."/>
                        </a:da>
                      </v:ref>
                      <v:var name="DemDevFreezeFrameBRecNum" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The record number for development freeze frame B for this event.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Development Freeze Frame B Record Number&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;true&lt;/code&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemDevFreezeFrameBClassRef&lt;/code&gt; must be specified.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Development Freeze Frame B Record Number"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aead1748-b908-4f8a-9fbe-478559d0df4f"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport)) and                                     node:exists(../DemDevFreezeFrameBClassRef)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=254"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The configured record number of Development Freeze Frame B needs to be unique." 
                                    expr="( node:exists(../DemDevFreezeFrameARecNum) and (../DemDevFreezeFrameARecNum = .) ) or                                           ( node:refexists(../DemFreezeFrameRecNumClassRef) and (count(as:ref(../DemFreezeFrameRecNumClassRef)/DemFreezeFrameRecordNumber/eb-list::*[as:name(.) = node:current()]) &gt; 0) ) or                                           ( not(node:exists(../DemFreezeFrameRecNumClassRef)) and node:exists(../DemFreezeFrameClassRef) and (../DemMaxNumberFreezeFrameRecords &gt;= .) )"/>
                            <mt:tst 
                                    true="DemDevFreezeFrameBRecNum must not carry record number equal to 0xF0. When OBDonUDS freeze frame is enabled, the record number 0xF0 (240) is reserved for the last OBD freeze frame occurrence of the event." 
                                    expr="(. = 240) and                                           (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                           ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                             (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                             (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                           (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                           (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:ctr name="DemCallbackClearEventAllowed" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The presence of this container indicates that the Dem has access
                              to a &quot;ClearEventAllowed&quot; callback, which the Dem will call
                              to realize the suppression handling of the DTC-deletion in Dem_ClearDTC.&lt;/p&gt;

                              &lt;p&gt;In case there is a &lt;code&gt;DemCallbackClearEventAllowedFnc&lt;/code&gt;,
                              this parameter defines the name of the function that the Dem will
                              call.&lt;/p&gt;

                              &lt;p&gt;In case there is no &lt;code&gt;DemCallbackClearEventAllowedFnc&lt;/code&gt;,
                              the Dem will have an R-Port requiring the interface
                              &lt;code&gt;CallbackClearEventAllowed&lt;/code&gt; whose name is generated by
                              using the unique callback-prefix followed by the event name.&lt;/p&gt;

                              &lt;p&gt;In the case that this is configured for OBD events that reference the MIL and
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling&quot;&gt;DemOBDCentralizedPID21Handling&lt;/a&gt;
                              is disabled, the information related to PID $21 will be reset, and the Distance Traveled while MIL is activated will
                              start counting from value 0.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Clear Event Allowed Callback Function&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                &lt;code&gt;DemCallbackClearEventAllowed&lt;/code&gt; is not editable and derives its configuration
                                value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                In this case if the reference contains an invalid value, consequently it cannot be corrected,
                                thus the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                invalid value is not used for the generation of the module, this warning can be safely ignored.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="2e99306c-3a91-4239-8c9a-677c063dbd78"/>
                        <a:da name="EDITABLE" type="XPath" 
                              expr="(not(node:exists(../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../DemEvtCmbCommonParamMaster)))"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:exists(DemCallbackClearEventAllowedFnc) or node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                              false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;ClearEventAllowed Callback C-Function&apos;."/>
                        <a:da name="TITLE" 
                              value="Clear Event Allowed Callback Function"/>
                        <v:var name="DemCallbackClearEventAllowedFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../DemCallbackClearEventAllowed&quot;&gt;
                                parent container&lt;/a&gt;.&lt;/p&gt;
                                &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                                &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemClearEventAllowed&amp;lt;ForCondition&amp;gt;(boolean* Allowed)&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                                &lt;ol&gt;
                                  &lt;li&gt;Activate parent container &lt;a href=&quot;path:../../DemCallbackClearEventAllowed&quot;&gt;DemCallbackClearEventAllowed&lt;/a&gt; and
                                  this parameter&lt;/li&gt;
                                  &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_DemClearEventAllowed_0&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;Configure the related C header file inclusion using the parameter
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                                &lt;/ol&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;ClearEventAllowed Callback C-Function&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                  &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                  &lt;code&gt;DemCallbackClearEventAllowedFnc&lt;/code&gt; is not editable and derives its configuration
                                  value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  In this case if the reference contains an invalid value, consequently it cannot be corrected,
                                  thus the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                  invalid value is not used for the generation of the module, this warning can be safely ignored.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="ClearEventAllowed Callback C-Function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="91d1c202-2625-4e99-af99-11610637ec2b"/>
                          <a:da name="DEFAULT" 
                                value="Module_DemClearEventAllowed"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)))"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                false="Invalid name. (no prefixed C function name)"/>
                        </v:var>
                        <v:var name="DemClearEventAllowedBehavior" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the resulting UDS status byte for the related event, which
                                   must not be cleared according to the ClearEventAllowed callback.&lt;/p&gt;
                                &lt;p&gt;Range
                                  &lt;ul&gt;
                                    &lt;li&gt;DEM_NO_STATUS_BYTE_CHANGE: The event UDS status byte remains unchanged.&lt;/li&gt;
                                    &lt;li&gt;DEM_ONLY_THIS_CYCLE_AND_READINESS: The failure bits &lt;em&gt;(TestFailedThisOperationCycle &amp; TestFailedSinceLastClear)&lt;/em&gt;
                                    are set to 0 and the readiness bits &lt;em&gt;(TestNotCompletedSinceLastClear &amp; TestNotCompletedThisOperationCycle)&lt;/em&gt;
                                    are set to 1 in the event UDS status byte. All other bits in the event UDS status byte remain unchanged.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="ClearEventAllowed Behavior"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="5bc7da56-53d9-11e6-beb8-9e71128cae77"/>
                          <a:da name="DEFAULT" value="DEM_NO_STATUS_BYTE_CHANGE"/>
                          <a:da name="RANGE">
                            <a:v>DEM_NO_STATUS_BYTE_CHANGE</a:v>
                            <a:v>DEM_ONLY_THIS_CYCLE_AND_READINESS</a:v>
                          </a:da>
                        </v:var>
                      </v:ctr>
                      <v:ctr name="DemCallbackEventDataChanged" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The presence of this container indicates that the Dem has access
                              to an &quot;EventDataChanged&quot; callback, which the Dem will call
                              if an event is stored in its event memory and if an existing event
                              memory entry is updated.&lt;/p&gt;

                              &lt;p&gt;In case there is a &lt;code&gt;DemCallbackEventDataChangedFnc&lt;/code&gt;,
                              this parameter defines the name of the function that the Dem will
                              call if the event memory entry corresponding to this specific event
                              is updated.&lt;/p&gt;

                              &lt;p&gt;In case there is no &lt;code&gt;DemCallbackEventDataChangedFnc&lt;/code&gt;,
                              the Dem will have an R-Port requiring the interface
                              &lt;code&gt;CallbackEventDataChanged&lt;/code&gt; whose name is generated by
                              using the unique callback-prefix followed by the event name.
                              This port will be triggered whenever the event memory entry
                              corresponding to this specific event is updated.&lt;/p&gt;

                              &lt;p&gt;Dem will also have one global R-port &lt;code&gt;GeneralCBDataEvt&lt;/code&gt;
                              requiring the interface &lt;code&gt;GeneralCallbackEventDataChanged&lt;/code&gt;,
                              if it has at least one R-port requiring the interface
                              &lt;code&gt;CallbackEventDataChanged&lt;/code&gt;. This port will be triggered
                              whenever the event memory entry corresponding to any event
                              is updated.&lt;/p&gt;

                              &lt;p&gt;If one of these R-ports is not needed, it could be connected
                              to a dummy P-port, without affecting the functionality.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="df3f2966-dcbf-4bce-9917-4975cc549201"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:exists(DemCallbackEventDataChangedFnc) or node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                              false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;EventDataChanged Callback C-Function&apos;."/>
                        <a:da name="TITLE" 
                              value="Event Data Changed Callback Function"/>
                        <v:var name="DemCallbackEventDataChangedFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../DemCallbackEventDataChanged&quot;&gt;
                                parent container&lt;/a&gt;.&lt;/p&gt;
                                &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                                &lt;code&gt;void &amp;lt;Mod&amp;gt;_DemTriggerOnEventData(EventIdType EventId)&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                                &lt;ol&gt;
                                  &lt;li&gt;Activate parent container &lt;a href=&quot;path:../../DemCallbackEventDataChanged&quot;&gt;DemCallbackEventDataChanged&lt;/a&gt; and this
                                  parameter&lt;/li&gt;
                                  &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_DemTriggerOnEventData&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;Configure the related C header file inclusion using the parameter
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                                &lt;/ol&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="EventDataChanged Callback C-Function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="1fe5a51c-cab9-4021-875e-40de66a787b1"/>
                          <a:da name="DEFAULT" 
                                value="Module_DemTriggerOnEventData"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                false="Invalid name. (no prefixed C function name)"/>
                        </v:var>
                      </v:ctr>
                      <v:ctr name="DemCallbackEventSyncStorageProcessed" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The presence of this container indicates that the Dem will call
                              the configured callback after an event status reported with
                              &lt;code&gt;Dem_SetEventFailedWithSyncFreezeFrame&lt;/code&gt; is finished and
                              the Dem is ready to process a next call for this event.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="d90fee34-c9d7-11ec-9d64-0242ac120002"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(../DemEventKind != &apos;DEM_EVENT_KIND_SEV&apos;)" 
                              true="Event Sync Storage Processed Callback Function can only be enabled for events of kind DEM_EVENT_KIND_SEV."/>
                        <a:da name="TITLE" 
                              value="Event Sync Storage Processed Callback Function"/>
                        <v:var name="DemCallbackEventSyncStorageProcessedFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../DemCallbackEventSyncStorageProcessed&quot;&gt;
                                parent container&lt;/a&gt;.&lt;/p&gt;
                                &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                                &lt;code&gt;Std_ReturnType &amp;lt;CallbackName&amp;gt;(void)&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                                &lt;ol&gt;
                                  &lt;li&gt;Activate parent container &lt;a href=&quot;path:../../DemCallbackEventSyncStorageProcessed&quot;&gt;DemCallbackEventSyncStorageProcessed&lt;/a&gt;&lt;/li&gt;
                                  &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;IdsM_Dem_CallbackEventSyncStorageProcessed&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;Configure the related C header file inclusion using the parameter
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                                &lt;/ol&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="EventSyncStorageProcessed Callback C-Function"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="1444b16a-c9d8-11ec-9d64-0242ac120002"/>
                          <a:da name="DEFAULT" 
                                value="Module_DemEventSyncStorageProcessed"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                false="Invalid name. (no valid C function name)"/>
                        </v:var>
                      </v:ctr>
                      <v:lst name="DemCallbackEventStatusChanged" type="MAP">
                        <a:a name="COLUMNS" 
                             value="DemCallbackEventStatusChangedFnc"/>
                        <a:a name="LABEL" 
                             value="EventStatusChanged Callback List"/>
                        <a:a name="ROWS" value="6"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <v:ctr name="DemCallbackEventStatusChanged" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;The presence of this container indicates, that the Dem has
                                access to an &quot;EventStatusChanged&quot; callback, which the
                                Dem will call to notify other components about the change in the
                                status of an event.
                                See also &lt;code&gt;DemCallbackEventStatusChangedOpCycStartSupport&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;In case there is a
                                &lt;code&gt;DemCallbackEvenStatusChangedFnc&lt;/code&gt;,
                                this parameter defines the name of the function that the Dem will
                                call to notify about the change in the status of this specific
                                event.&lt;/p&gt;

                                &lt;p&gt;In case there is no
                                &lt;code&gt;DemCallbackEvenStatusChangedFnc&lt;/code&gt;,
                                the Dem will have an R-Port requiring the interface
                                &lt;code&gt;CallbackEventStatusChanged&lt;/code&gt;, whose name is generated
                                by using the unique callback-prefix followed by the event
                                name. This port will be triggered whenever the status of this
                                specific event is changed.&lt;/p&gt;

                                &lt;p&gt;Dem will also have one global R-port
                                &lt;code&gt;GeneralCBStatusEvt&lt;/code&gt; requiring the interface
                                &lt;code&gt;GeneralCallbackEventStatusChange&lt;/code&gt;, if it has at least
                                one R-port requiring the interface
                                &lt;code&gt;CallbackEventStatusChanged&lt;/code&gt;. This port will be
                                triggered whenever the status of any event is changed.&lt;/p&gt;

                                &lt;p&gt;If one of these R-ports is not needed, it could be connected
                                to a dummy P-port, without affecting the functionality.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="aa026768-1065-41ee-aa36-15c435e1e72f"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:exists(DemCallbackEventStatusChangedFnc) or node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                                false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;EventStatusChanged Callback C-Function&apos;."/>
                          <a:da name="TITLE" value="EventStatusChanged Callback"/>
                          <v:var name="DemCallbackEventStatusChangedFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="COLUMN_TITLE" value="C-Function Name"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../../DemCallbackEventStatusChanged&quot;&gt;
                                  parent container&lt;/a&gt;.&lt;/p&gt;
                                  &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                                  &lt;code&gt;void &amp;lt;Mod&amp;gt;_DemTriggerOnEventStatus(Dem_EventIdType EventId,
                                  Dem_EventStatusExtendedType EventStatusOld, Dem_EventStatusExtendedType EventStatusNew)&lt;/code&gt;&lt;/p&gt;
                                  &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                                  &lt;ol&gt;
                                    &lt;li&gt;Add callback function in the callback list
                                    &lt;a href=&quot;path:../../../DemCallbackEventStatusChanged&quot;&gt;DemCallbackEventStatusChanged&lt;/a&gt;&lt;/li&gt;
                                    &lt;li&gt;Activate this parameter&lt;/li&gt;
                                    &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_DemTriggerOnEventStatus&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;Configure the related C header file inclusion using the parameter
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                                  &lt;/ol&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="EventStatusChanged Callback C-Function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="659d46be-1bb3-4a14-a873-2eac9c3012f3"/>
                            <a:da name="DEFAULT" 
                                  value="Module_DemTriggerOnEventStatus"/>
                            <a:da name="ENABLE" value="true"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="text:uniq(../../eb-list::*/DemCallbackEventStatusChangedFnc, .)" 
                                     false="The EventStatusChanged callback function names must be unique per event."/>
                              <a:tst 
                                     expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                     false="Invalid name. (no prefixed C function name)"/>
                            </a:da>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                      <v:ctr name="DemCallbackInitMForE" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The presence of this container indicates, that the Dem has
                              access to an &quot;InitMonitorForEvent&quot; callback, which the
                              Dem will call to initialize a monitor.&lt;/p&gt;

                              &lt;p&gt;In case the container has a
                              &lt;code&gt;DemCallbackInitMForEFnc&lt;/code&gt;,
                              this parameter defines the name of the function that the Dem will
                              call.&lt;/p&gt;

                              &lt;p&gt;In case there is no &lt;code&gt;DemCallbackInitMForEFnc&lt;/code&gt;, the
                              Dem will have an R-Port requiring the interface
                              &lt;code&gt;CallbackInitMonitorForEvent&lt;/code&gt;, whose name is generated
                              by using the unique callback-prefix followed by the event name.&lt;/p&gt;

                              &lt;p&gt;In case &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCallbackInitMForEReenabledSupport&quot;&gt;DemCallbackInitMForEReenabledSupport&lt;/a&gt; parameter
                              is set to &quot;true&quot;, the callback function InitMonitorForEvent will be
                              triggered with &lt;code&gt;InitMonitorReason DEM_INIT_MONITOR_REENABLED&lt;/code&gt;
                              when one of the following conditions is satisfied:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Enable condition group status of the event is changed to fulfilled.&lt;/li&gt;
                                &lt;li&gt;ControlDTCSetting of the event is changed to enabled.&lt;/li&gt;
                                &lt;li&gt;Event availability is changed to available.&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Note: If the ControlDTCSetting status is changed to enabled, then the
                              callback function is triggered from the context of Dem_MainFunction(). Thus,
                              run-time of the callback function will have a direct impact on the processing
                              time inside Dem_MainFunction().&lt;/p&gt;

                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="InitMonitorForEvent Callback Function"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="774dfdc6-9a5d-4b3e-83ec-e3f00d48484b"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:exists(DemCallbackInitMForEFnc) or node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                              false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;InitMonitorForEvent Callback C-Function&apos;."/>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="../DemEventKind = &apos;DEM_EVENT_KIND_BSW&apos; and not(node:exists(DemCallbackInitMForEFnc))" 
                                 true="The monitor connected to this event is located below the RTE. A c-callback function should be used. Switch on &apos;InitMonitorForEvent Callback C-Function&apos;."/>
                          <a:tst 
                                 expr="../DemEventKind = &apos;DEM_EVENT_KIND_SWC&apos; and node:exists(DemCallbackInitMForEFnc) and node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                                 true="The monitor connected to this event is located above the RTE. A R-Port should be used. Switch off &apos;InitMonitorForEvent Callback C-Function&apos;."/>
                        </a:da>
                        <v:var name="DemCallbackInitMForEFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../DemCallbackInitMForE&quot;&gt;
                                parent container&lt;/a&gt;.&lt;/p&gt;
                                &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                                &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemInitMonitorFor&amp;lt;EventName&amp;gt;(Dem_InitMonitorReasonType InitMonitorReason)&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                                &lt;ol&gt;
                                  &lt;li&gt;Activate parent container &lt;a href=&quot;path:../../DemCallbackInitMForE&quot;&gt;DemCallbackInitMForE&lt;/a&gt; and this
                                  parameter&lt;/li&gt;
                                  &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_DemInitMonitor1&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;Configure the related C header file inclusion using the parameter
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                                &lt;/ol&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="InitMonitorForEvent Callback C-Function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="6f9b6648-1ba0-42b1-b5be-3f52f1d7ca58"/>
                          <a:da name="DEFAULT" 
                                value="Module_DemCallbackInitMForEvent"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="text:uniq(../../../eb-list::*/DemCallbackInitMForE/DemCallbackInitMForEFnc, .)" 
                                   false="The InitMonitor callback function names must be unique (each event has its own monitor path)."/>
                            <a:tst 
                                   expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                   false="Invalid name. (no prefixed C function name)"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                      <v:ctr name="DemEventClass" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              This container contains the configuration (parameters) for
                              EventClass.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Class"/>
                        <a:a name="TAB" value="Event Class"/>
                        <a:a name="UUID" 
                             value="13b5b6c9-7aa9-4932-a3b8-a88d0a7e52eb"/>
                        <v:var name="DemAgingAllowed" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                Switch to allow aging/unlearning of the event or not.
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: aging allowed&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: aging not allowed&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;See also &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingRequiresTestedCycleSetOperationCycleState&quot;&gt;Dem_SetOperationCycleState requires tested cycles&lt;/a&gt;
                                   and &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingRequiresTestedCycleSetAgingCycleState&quot;&gt;Dem_SetAgingCycleState requires tested cycles&lt;/a&gt;
                                   option for selecting the desired aging behavior.&lt;/p&gt;

                                &lt;p&gt;See also &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingBasedOnHealingCompletionSupport&quot;&gt;aging based on healing completion&lt;/a&gt;
                                  option for selecting the desired aging behavior.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Aging Allowed&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not enabled and derives
                                    its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Aging Allowed"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="e6b94a86-7dfd-4f89-b8dd-1bae1c9e8dd9"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)))"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="((node:existsAndTrue(.)) and                                           (as:modconf(&apos;Dem&apos;)/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                                           ((node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemObdDTC)) or                                           (node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemDtcValue3Byte)))) and                                           (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC5&apos;]) &lt; 1)" 
                                true="If aging is enabled for an emission related event, the internal data element DEM_OCC5 must also be configured for this event."/>
                        </v:var>
                        <v:var name="DemAgingCycleCounterThreshold" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Number of aging cycles needed to unlearn/delete the event.&lt;/p&gt;
                                &lt;p&gt;When &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt; and/or &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt; are set to DEM_TRIGGER_ON_FDC_THRESHOLD, this threshold is checked against OCC2 counter.&lt;/p&gt;
                                &lt;p&gt;If the value is set to 0 the event cannot be aged using OCC2. This is the case for emission related events which are aging using the OCC5 counter, see &lt;a href=&quot;path:../DemOBDAgingCycleCounterThreshold&quot;&gt;DemOBDAgingCycleCounterThreshold&lt;/a&gt;.&lt;/p&gt;

                                &lt;p&gt;See also &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingRequiresTestedCycleSetOperationCycleState&quot;&gt;Dem_SetOperationCycleState requires tested cycles&lt;/a&gt;
                                   and &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingRequiresTestedCycleSetAgingCycleState&quot;&gt;Dem_SetAgingCycleState requires tested cycles&lt;/a&gt;
                                   option for selecting the desired aging behavior.&lt;/p&gt;

                                &lt;p&gt;See also &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingBasedOnHealingCompletionSupport&quot;&gt;aging based on healing completion&lt;/a&gt;
                                   option for selecting the desired aging behavior.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Aging Cycle Counter Threshold&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                  &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                  &lt;code&gt;DemAgingCycleCounterThreshold&lt;/code&gt; is not editable and derives its configuration
                                  value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  In this case if the reference contains an invalid value, consequently it cannot be corrected,
                                  thus the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                  invalid value is not used for the generation of the module, this warning can be safely ignored.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemAgingAllowed&lt;/code&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Aging Cycle Counter Threshold"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="aead1748-b908-4f8a-9fbe-478559d0df4d"/>
                          <a:da name="DEFAULT" value="40"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(node:existsAndTrue(../DemAgingAllowed))"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="DemOBDAgingCycleCounterThreshold" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                Number of aging cycles needed to unlearn/delete an OBD event. This threshold is checked against OCC5 counter.
                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;OBD Aging Cycle Counter Threshold&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="OBD Aging Cycle Counter Threshold"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="TAB" value="OBD"/>
                          <a:a name="UUID" 
                               value="d3d962b0-0de1-11e5-b939-0800200c9a66"/>
                          <a:da name="DEFAULT" value="40"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="node:existsAndTrue(../DemAgingAllowed)"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:var name="DemConsiderPtoStatus" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;This parameter is &lt;code&gt;TRUE&lt;/code&gt;, when the event is
                                affected by the Dem PTO handling.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Consider PTO Status"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="TAB" value="OBD"/>
                          <a:a name="UUID" 
                               value="cf7f3706-1da2-444c-a011-78f2fab16c10"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="EDITABLE" value="false"/>
                        </v:var>
                        <v:var name="DemMinRatioEvent" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Selects if the event using this class is subject of minimum ratio requirements as
                                   specified in Amend section 1968.2, title 13, California Code of Regulations. This
                                   information is used to select which conditions to check when performing clear of
                                   permanent fault codes.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Minimum Ratio Event&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not enabled and derives
                                    its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Minimum Ratio Event"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="TAB" value="OBD"/>
                          <a:a name="UUID" 
                               value="cf7f3706-1da2-444c-a011-78f2fab16123"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)))"/>
                        </v:var>
                        <v:var name="DemEventDestination" type="ENUMERATION">
                          <a:a name="COLUMN_TITLE" value="Destination"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;The event destination assigns events to none, one or
                                  multiple origins.&lt;/p&gt;

                                  &lt;p&gt;If no event destination is assigned to a specific event, the
                                  event is handled internally and is not visible externally to
                                  the Dcm (&lt;em&gt;currently not supported&lt;/em&gt;).&lt;/p&gt;

                                  &lt;p&gt;If more than one event destination is assigned to a specific
                                  event, the event can be present in the corresponding origins
                                  (&lt;em&gt;currently not supported&lt;/em&gt;).&lt;/p&gt;

                                  &lt;p&gt;Range&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;DEM_DTC_ORIGIN_PRIMARY_MEMORY&lt;/code&gt;: Event information located in the primary memory.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;DEM_DTC_ORIGIN_SECONDARY_MEMORY&lt;/code&gt;: Event information located in the secondary memory.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;DEM_DTC_ORIGIN_MIRROR_MEMORY&lt;/code&gt;: Event information located in the mirror memory.&lt;/li&gt;
                                  &lt;/ul&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                  ,&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                      &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt; to enable
                                      support for &lt;em&gt;Event Destination&lt;/em&gt;. Otherwise this parameter is not enabled and
                                      derives its configuration value from the associated event with
                                      &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                    &lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;DemObdDTC&lt;/code&gt;/&lt;code&gt;DemDtcValue3Byte&lt;/code&gt;: OBD-relevant events can only
                                      be configured with event destination &lt;code&gt;DEM_DTC_ORIGIN_PRIMARY_MEMORY&lt;/code&gt;.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Event Destination"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="abad67f8-828d-451c-acac-8f033545f136"/>
                          <a:da name="DEFAULT" 
                                value="DEM_DTC_ORIGIN_PRIMARY_MEMORY"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)))"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and (boolean(count(../DemIndicatorAttribute/eb-list::*[as:ref(DemIndicatorRef)/DemIndicatorID = as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)/DemIndicatorID]))) and (. != &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)" 
                                   true="If Event is referring to the MIL, then event destination must be set to primary memory."/>
                            <a:tst 
                                   expr="(. != &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;) and                                            node:refexists(../../DemDTCClassRef) and                                            (node:exists(node:ref(../../DemDTCClassRef)/DemObdDTC) or                                             node:exists(node:ref(../../DemDTCClassRef)/DemDtcValue3Byte))" 
                                   true="OBD-relevant events can only be configured with event destination DEM_DTC_ORIGIN_PRIMARY_MEMORY."/>
                          </a:da>
                          <a:da name="RANGE">
                            <a:v>DEM_DTC_ORIGIN_PRIMARY_MEMORY</a:v>
                            <a:v>DEM_DTC_ORIGIN_SECONDARY_MEMORY</a:v>
                            <a:v>DEM_DTC_ORIGIN_MIRROR_MEMORY</a:v>
                          </a:da>
                          <a:da name="WARNING" type="XPath" 
                                expr="((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPrimary = 0) and (. = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)) or                                            ((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntrySecondary = 0) and (. = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;)) or                                            ((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryMirror = 0) and (. = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;))" 
                                true="The event destination of this event is not enabled."/>
                        </v:var>
                        <v:var name="DemEventFailureCycleCounterThreshold" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the number of failure cycles for the event based fault
                                confirmation.&lt;/p&gt;

                                &lt;p&gt;In case the failure cycle equals the operations cycle of the event, this means:
                                  If the failure cycle counter threshold is configured to
                                  value N and in the Nth consecutive
                                  operation cycle with at least one FAILED qualification,
                                  the ConfirmedDTC status bit shall be set with the FAILED qualification.
                                &lt;/p&gt;
                                &lt;p&gt;In case the failure cycle is different to the operations cycle of the event, this means:
                                  If the failure cycle counter threshold is configured to value N and
                                  the failure cycle is started N times with the event being qualified as FAILED
                                  in its current operation cycle (i.e. TFTOC is set),
                                  the ConfirmedDTC status bit shall be set.
                                &lt;/p&gt;
                                &lt;p&gt;Operation Cycles without any qualification will not influence
                                this behavior.&lt;/p&gt;
                                &lt;p&gt;An Operation Cycle with only PASSED qualification(s) will reset
                                the Event Failure Cycle Counter.&lt;/p&gt;

                                &lt;p&gt;The special value &lt;code&gt;0&lt;/code&gt; is used to identify so-called Zero-trip events.
                                  These are events which confirm immediately when qualified as DEM_EVENT_STATUS_FAILED,
                                  even when they are assigned to the OBD driving cycle, independent of qualification of
                                  the driving cycle
                                  (see &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDDelayedDCYConfirmedAndMIL&quot;&gt;DemOBDDelayedDCYConfirmedAndMIL&lt;/a&gt;).
                                  Consequently, the value &lt;code&gt;0&lt;/code&gt; can only be configured if the event&apos;s
                                  operation cycle is configured to the OBD driving cycle.
                                &lt;/p&gt;

                                &lt;p&gt;If the parameter is disabled, then fault confirmation is switched
                                off. Such an event is confirmed immediately when qualified as DEM_EVENT_STATUS_FAILED,
                                similar to that of a Zero-trip event.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Event Failure Cycle Counter Threshold&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                  &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                  &lt;code&gt;DemEventFailureCycleCounterThreshold&lt;/code&gt; is not editable and derives its configuration
                                  value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  In this case if the reference contains an invalid value, consequently it cannot be corrected,
                                  thus the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                  invalid value is not used for the generation of the module, this warning can be safely ignored.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Event Failure Cycle Counter Threshold"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="9335c7cb-92f0-4e5a-9aeb-56feca6e5d38"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=254"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      true="Event Failure Cycle must be configured for fault confirmation as Event Failure Cycle Counter Threshold is configured for this event." 
                                      expr="(not(node:exists(../DemEventFailureCycleRef)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)))"/>
                              <mt:tst 
                                      true="Operation cycle must be configured to DEM_OPCYC_OBD_DCY to have DemEventFailureCycleCounterThreshold value 0." 
                                      expr="(. = 0) and (node:ref(../DemOperationCycleRef))/DemOperationCycleType != &apos;DEM_OPCYC_OBD_DCY&apos;"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var 
                               name="DemEventConfirmationThresholdCounterAdaptable" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Indicates whether the events confirmation Cycle threshold
                                   (&lt;a href=&quot;path:../DemEventFailureCycleCounterThreshold&quot;
                                    &gt;DemEventFailureCycleCounterThreshold&lt;/a&gt;)
                                   can be adapted by Dem_SetEventConfirmationThresholdCounter.&lt;/p&gt;

                                &lt;p&gt;Note: Enabling DemEventConfirmationThresholdCounterAdaptable for at least
                                  one event activates the entire feature, which includes the corresponding
                                  interface and API as well as all associated data structures.
                                  This results in a corresponding consumption of resources.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Failure Confirmation Threshold adaptable&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEventFailureCycleCounterThreshold&lt;/code&gt;: The Failure Confirmation Threshold
                                    shall only be adaptable, if a Threshold is configured.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemOBDGroupingAssociativeEventsRef&lt;/code&gt;: The Failure Confirmation Threshold
                                    must not be adaptable for events that belong to a MIL Group.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not enabled and derives
                                    its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Failure Confirmation Threshold adaptable"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ad7c94d4-b65b-4cee-8e38-ea1e4e5a92e4"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))) and                                       node:exists(../DemEventFailureCycleCounterThreshold) and                                       not(node:exists(../../DemOBDGroupingAssociativeEventsRef))"/>
                        </v:var>
                        <v:var name="DemEventOBDReadinessGroup" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;This parameter specifies the Event OBD Readiness Group for PID
                                $01, PID $41 and PID $F501 computation.&lt;/p&gt;

                                &lt;p&gt;This parameter is only applicable for emission-related
                                ECUs.&lt;/p&gt;

                                &lt;p&gt;PID $F501 is only applicable for OBDonUDS as per SAE J1979-2.&lt;/p&gt;

                                &lt;p&gt;If calibration support is enabled, the number of events per readiness
                                group is limited by parameter &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumEventsPerReadinessGroup&quot;&gt;DemMaxNumEventsPerReadinessGroup&lt;/a&gt;
                                or &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;.&lt;/p&gt;

                                &lt;p&gt;If &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt; is enabled,
                                at least one event must be configured with readiness group &lt;code&gt;DEM_OBD_RDY_GPF&lt;/code&gt; in order to
                                calibrate &lt;code&gt;DEM_OBD_RDY_GPF&lt;/code&gt; in &lt;code&gt;Dem_OBDReadinessGroup&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;Dem calculates the readiness for each readiness group separately:
                                  &lt;ul&gt;
                                    &lt;li&gt;The calculated readiness status of readiness groups EGR and VVT are not combined
                                        into a single EGR and/or VVT readiness group for PID $01/PID $41/Readiness1.
                                        Events assigned to VVT are not considered for PID $01/PID $41/Readiness1. If related VVT events
                                        need to be considered for PID $01/PID $41/Readiness1, they must be assigned to readiness group EGR.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                  Similarly, for J1939 Readiness1:
                                  &lt;ul&gt;
                                    &lt;li&gt;The calculated result of readiness groups NOXCAT and NOXADSORB are not combined into a single
                                        NOx converting catalyst and/or NOx adsorber readiness. If related NOXADSORB events need to
                                        be considered for Readiness1, they must be assigned to readiness group NOXCAT.
                                    &lt;/li&gt;
                                    &lt;li&gt;The calculated result of readiness groups O2SENS and EGSENS are not combined into a single
                                         EGSENS readiness group. If related O2SENS events need to be considered for Readiness1,
                                         they must be assigned to readiness group EGSENS.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/p&gt;

                                &lt;p&gt;Range&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_AC&lt;/code&gt;: A/C system component - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_BOOSTPR&lt;/code&gt;: Boost Pressure System - compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_CAT&lt;/code&gt;: Catalyst - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_CMPRCMPT&lt;/code&gt;: Comprehensive component - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_CSER&lt;/code&gt;: Cold Start Emission Reduction Strategy Monitoring - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_DOR&lt;/code&gt;: Direct Ozone Reduction (DOR) System Monitoring - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_ECS&lt;/code&gt;: Engine Cooling System Monitoring - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_EGR&lt;/code&gt;: EGR system - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_EGSENS&lt;/code&gt;: Exhaust Gas Sensor - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_EVAP&lt;/code&gt;: Evaporative system - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_FLSYS&lt;/code&gt;: Fuel system - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_FLSYS_NONCONT&lt;/code&gt;: Non Continuous Fuel system - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_GPF&lt;/code&gt;: Gasoline Particulate Filter - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_HCCAT&lt;/code&gt;: Non-Methane HC Catalyst - compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_HTCAT&lt;/code&gt;: Heated catalyst - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_MISF&lt;/code&gt;: Misfire - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_NONE&lt;/code&gt;: None - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_NOXADSORB&lt;/code&gt;: NOx Adsorber Monitoring - compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_NOXCAT&lt;/code&gt;: NOx Catalyst - compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_O2SENS&lt;/code&gt;: Oxygen sensor - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_O2SENSHT&lt;/code&gt;: Oxygen sensor heater - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_OTHER&lt;/code&gt;: Other Emission Control or Source System Monitoring - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_PCV&lt;/code&gt;: Positive/Crankcase Ventilation (PCV) System Monitoring - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_PMFLT&lt;/code&gt;: Particulate Matter (PM) Filter - spark, compr.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_SECAIR&lt;/code&gt;: Secondary air system - spark.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_OBD_RDY_VVT&lt;/code&gt;: Variable Valve Timing, Lift, and/or Control (VVT) System Monitoring - spark, compr.&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt; to enable support for &lt;em&gt;Event OBD
                                    Readiness Group&lt;/em&gt;. Otherwise this parameter is not editable and derives its configuration value from the
                                    associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumEventsPerReadinessGroup&quot;&gt;DemMaxNumEventsPerReadinessGroup&lt;/a&gt;:
                                    If calibration support is enabled, the number of events per readiness group is limited by parameter
                                    &lt;code&gt;DemMaxNumEventsPerReadinessGroup&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemObdDTC&lt;/code&gt;/&lt;code&gt;DemDtcValue3Byte&lt;/code&gt;/&lt;code&gt;DemJ1939DTCValue&lt;/code&gt;: Any event assigned
                                    with a valid &lt;code&gt;DemEventOBDReadinessGroup&lt;/code&gt; shall either have DTC &lt;code&gt;DemObdDTC&lt;/code&gt; or
                                    &lt;code&gt;DemDtcValue3Byte&lt;/code&gt; or &lt;code&gt;DemJ1939DTCValue&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;: based on the
                                    &lt;em&gt;OBD Engine Type&lt;/em&gt; (compr/spark), an appropriate readiness group must be configured.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;: based on the
                                    &lt;em&gt;DemObdVariant&lt;/em&gt;, an appropriate readiness group must be configured.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Event OBD Readiness Group"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="TAB" value="OBD"/>
                          <a:a name="UUID" 
                               value="a387c0b1-9b21-47ee-a48f-d47705f28206"/>
                          <a:da name="DEFAULT" value="DEM_OBD_RDY_NONE"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(. != &apos;DEM_OBD_RDY_NONE&apos;) and                                          not(((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) or                                              (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                              (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;))) and                                              node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation)) and                                          (not(node:exists(../../DemDTCClassRef)) or                                             (not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemObdDTC)) and                                             ((node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) or                                                 (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support) and                                                  not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemJ1939DTCValue))))))" 
                                   true="Any event assigned to a ReadinessGroup shall have a DemObdDTC or DemJ1939DTCValue (if J1939 Support is enabled)."/>
                            <a:tst 
                                   expr="(. != &apos;DEM_OBD_RDY_NONE&apos;) and                                          not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                          (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                          node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                          (not(node:exists(../../DemDTCClassRef)) or                                              (not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemDtcValue3Byte)) and                                              ((node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) or                                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support) and                                                not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemJ1939DTCValue))))))" 
                                   true="Any event assigned to a ReadinessGroup shall have a DemDtcValue3Byte or DemJ1939DTCValue (if J1939 Support is enabled)."/>
                            <a:tst 
                                   expr="(. != &apos;DEM_OBD_RDY_NONE&apos;) and                                          node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) and                                          node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemSupportedObdUdsDtcSeparation) and                                          (not(node:exists(../../DemDTCClassRef)) or                                              (not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemObdDTC)) and                                               not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemDtcValue3Byte)) and                                              ((node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) or                                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support) and                                                 not(node:exists(util:distinct(node:refs(../../DemDTCClassRef))/DemJ1939DTCValue))))))" 
                                   true="Any event assigned to a ReadinessGroup shall have a DemObdDTC or DemDtcValue3Byte or DemJ1939DTCValue (if J1939 Support is enabled)."/>
                            <a:tst 
                                   expr="(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumEventsPerReadinessGroup)) and                                          (. != &apos;DEM_OBD_RDY_NONE&apos;) and                                          (count(../../../eb-list::*[DemEventClass/DemEventOBDReadinessGroup = node:current()]) &gt; node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumEventsPerReadinessGroup))" 
                                   true="The maximum number of events per readiness group is exceeded for this group."/>
                            <a:tst 
                                   expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_COMPRESSION&apos;) and                                          ((. = &apos;DEM_OBD_RDY_AC&apos;) or (. = &apos;DEM_OBD_RDY_CAT&apos;) or (. = &apos;DEM_OBD_RDY_EVAP&apos;)                                          or (. = &apos;DEM_OBD_RDY_GPF&apos;) or (. = &apos;DEM_OBD_RDY_HTCAT&apos;) or (. = &apos;DEM_OBD_RDY_O2SENS&apos;)                                          or (. = &apos;DEM_OBD_RDY_O2SENSHT&apos;) or (. = &apos;DEM_OBD_RDY_SECAIR&apos;))" 
                                   true="DemEventOBDReadinessGroup value only valid for DemOBDEngineType DEM_IGNITION_SPARK"/>
                            <a:tst 
                                   expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_SPARK&apos;) and                                          ((. = &apos;DEM_OBD_RDY_BOOSTPR&apos;) or (. = &apos;DEM_OBD_RDY_HCCAT&apos;) or (. = &apos;DEM_OBD_RDY_NOXADSORB&apos;) or                                           (. = &apos;DEM_OBD_RDY_NOXCAT&apos;))" 
                                   true="DemEventOBDReadinessGroup value only valid for DemOBDEngineType DEM_IGNITION_COMPRESSION"/>
                            <a:tst 
                                   expr="(not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc))) and                                          (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBD_CLASSIC&apos;) and                                          ((. = &apos;DEM_OBD_RDY_PCV&apos;) or (. = &apos;DEM_OBD_RDY_ECS&apos;) or (. = &apos;DEM_OBD_RDY_VVT&apos;)                                          or (. = &apos;DEM_OBD_RDY_DOR&apos;) or (. = &apos;DEM_OBD_RDY_OTHER&apos;))" 
                                   true="DemEventOBDReadinessGroup value is only valid if DemObdVariant set to DEM_OBD_VARIANT_OBDONUDS or DemObdVariant is selectable via DemCalloutObdVariantFnc"/>
                            <a:tst 
                                   expr="node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support) and (node:value(.) = &apos;DEM_OBD_RDY_AC&apos;)" 
                                   true="DemEventOBDReadinessGroup value is only valid if DemJ1939Support is enabled"/>
                          </a:da>
                          <a:da name="RANGE">
                            <a:v>DEM_OBD_RDY_AC</a:v>
                            <a:v>DEM_OBD_RDY_BOOSTPR</a:v>
                            <a:v>DEM_OBD_RDY_CAT</a:v>
                            <a:v>DEM_OBD_RDY_CMPRCMPT</a:v>
                            <a:v>DEM_OBD_RDY_CSER</a:v>
                            <a:v>DEM_OBD_RDY_DOR</a:v>
                            <a:v>DEM_OBD_RDY_ECS</a:v>
                            <a:v>DEM_OBD_RDY_EGR</a:v>
                            <a:v>DEM_OBD_RDY_EGSENS</a:v>
                            <a:v>DEM_OBD_RDY_EVAP</a:v>
                            <a:v>DEM_OBD_RDY_FLSYS</a:v>
                            <a:v>DEM_OBD_RDY_FLSYS_NONCONT</a:v>
                            <a:v>DEM_OBD_RDY_GPF</a:v>
                            <a:v>DEM_OBD_RDY_HCCAT</a:v>
                            <a:v>DEM_OBD_RDY_HTCAT</a:v>
                            <a:v>DEM_OBD_RDY_MISF</a:v>
                            <a:v>DEM_OBD_RDY_NONE</a:v>
                            <a:v>DEM_OBD_RDY_NOXADSORB</a:v>
                            <a:v>DEM_OBD_RDY_NOXCAT</a:v>
                            <a:v>DEM_OBD_RDY_O2SENS</a:v>
                            <a:v>DEM_OBD_RDY_O2SENSHT</a:v>
                            <a:v>DEM_OBD_RDY_OTHER</a:v>
                            <a:v>DEM_OBD_RDY_PCV</a:v>
                            <a:v>DEM_OBD_RDY_PMFLT</a:v>
                            <a:v>DEM_OBD_RDY_SECAIR</a:v>
                            <a:v>DEM_OBD_RDY_VVT</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="DemEventPriority" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Priority of the event, in view of full event buffer.&lt;/p&gt;

                                &lt;p&gt;The event priority is defined as a ranking of DTCs
                                based upon level of importance. The value 1 represents
                                the highest priority and each value sequentially larger
                                results into a lower importance.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Event Priority&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;:
                                    must be set to &lt;code&gt;true&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not enabled and derives
                                    its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Event Priority"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="53d28608-3cf0-49cf-bc46-e8bdb3c478f3"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport)) and (not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)))"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:var name="DemEventSignificance" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Significance of the event, which indicates additional
                                information concerning fault classification and resolution.&lt;/p&gt;

                                &lt;p&gt;It can be mapped as Dem-internal data element. It shall be
                                configured, if it is a part of event related data.&lt;/p&gt;

                                &lt;p&gt;Range&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_EVENT_SIGNIFICANCE_FAULT&lt;/code&gt;: failure, which affects the component/ECU itself.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DEM_EVENT_SIGNIFICANCE_OCCURRENCE&lt;/code&gt;: issue, which indicates additional information
                                      concerning insufficient system behavior.&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Event Significance&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not editable and derives
                                    its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Event Significance"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="7a0c536d-6275-4df8-b86d-c2a997cf68b1"/>
                          <a:da name="DEFAULT" 
                                value="DEM_EVENT_SIGNIFICANCE_FAULT"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)))"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>DEM_EVENT_SIGNIFICANCE_FAULT</a:v>
                            <a:v>DEM_EVENT_SIGNIFICANCE_OCCURRENCE</a:v>
                          </a:da>
                          <a:da name="WARNING" type="XPath">
                            <a:tst 
                                   expr="( node:exists(.) and node:exists(../../DemExtendedDataClassRef) and (node:refexists(../../DemExtendedDataClassRef)) and (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_SIGNIFICANCE&apos;]) = 0) and (not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))) )" 
                                   true="Suboptimal configuration, if Event Significance is configured, the internal data element DEM_SIGNIFICANCE must be configured too."/>
                            <a:tst 
                                   expr="( node:exists(.) and not(node:exists(../../DemExtendedDataClassRef)) and ( not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))) )" 
                                   true="Suboptimal configuration, if Event Significance is configured, an internal data element DEM_SIGNIFICANCE must be configured and assiged to the event as DemExtendedDataClassRef."/>
                          </a:da>
                        </v:var>
                        <v:var name="DemFFPrestorageSupported" type="BOOLEAN">
                          <a:a name="COLUMN_TITLE" 
                               value="Freeze Frame Prestorage"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;If this parameter is set to &lt;code&gt;true&lt;/code&gt;, then the
                                Prestorage of FreezeFrames is supported by the assigned
                                event.&lt;/p&gt;
                                &lt;p&gt;Currently combined events do not support Freeze Frame Prestorage.&lt;/p&gt;
                                &lt;p&gt;This parameter is useful to calculate the buffer size.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                  To enable support for &lt;em&gt;Freeze Frame Prestorage Support&lt;/em&gt;,&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;DemFreezeFrameClassRef&lt;/code&gt;: must be specified.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;DemDTCClassRef&lt;/code&gt;: the same DemDTCClass cannot be used from several events.&lt;/li&gt;
                                  &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Freeze Frame Prestorage Support"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="c4b9e0d3-5245-4f28-887b-97dd3360d6ec"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="node:existsAndTrue(.) and                                        count(../../DemFreezeFrameClassRef) = 0" 
                                   true="To enable freeze frame prestorage for this event, the event must reference to a freeze frame class."/>
                            <a:tst 
                                   expr="(node:existsAndTrue(.)) and                                         (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemDTCClassRef = node:current()/../../DemDTCClassRef]) &gt; 1)" 
                                   true="Freeze Frame Prestorage Support can not be enabled if event is combined."/>
                          </a:da>
                        </v:var>
                        <v:ref name="DemAgingCycleRef" type="CHOICE-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the cycle which is triggering the aging of the event.
                                This can either be the same as the operation cycle of the event, or
                                a separate aging cycle reported via API &lt;code&gt;Dem_SetAgingCycleState&lt;/code&gt;.
                                If external aging is configured (refer to DemAgingCycleCounterProcessing),
                                this parameter is not used.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise
                                &lt;code&gt;DemAgingCycleRef&lt;/code&gt; is not editable and derives its configuration
                                value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                In this case if the reference contains an invalid value, consequently it cannot be corrected,
                                thus the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                invalid value is not used for the generation of the module, this warning can be safely ignored.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport&quot;&gt;DemCommonOperationCycleSupport&lt;/a&gt;:
                                  must be set to &lt;code&gt;false&lt;/code&gt; to enable support for &lt;em&gt;Aging Cycle&lt;/em&gt;.
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DemAgingAllowed&lt;/code&gt;: must be set to &lt;code&gt;true&lt;/code&gt; to allow aging of an event.&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;/&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;:
                                  Aging through aging cycles is not allowed when &lt;code&gt;DemFreezeFrameCapture&lt;/code&gt; and/or &lt;code&gt;DemExtendedDataCapture&lt;/code&gt; are set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Aging Cycle"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="0f0049a8-3df9-450c-8d8c-4644d2de53cf"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))) and                                       (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(node:existsAndFalse(../DemAgingAllowed)) and                                          (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                   true="Aging is not allowed for this event."/>
                            <a:tst 
                                   expr="not(node:refvalid(.)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                   true="Invalid reference."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (. != ../DemOperationCycleRef) and count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[as:name(.) = as:name(as:ref(node:current()))]) &gt; 0" 
                                   true="If the aging cycle differs from the operation cycle, referenced by Operation cycle reference (DemOperationCycleRef), it must be a valid aging cycle that is configured in Aging Cycle List (DemAgingCycle)."/>
                            <a:tst 
                                   expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos; or as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAgingCycle/eb-list::*[as:name(.) = as:name(as:ref(node:current()))]) &gt; 0" 
                                   true="Aging through aging cycles is not allowed when DemFreezeFrameCapture and/or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          </a:da>
                          <a:da name="REF">
                            <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemAgingCycle</a:v>
                            <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemOperationCycle</a:v>
                          </a:da>
                        </v:ref>
                        <v:ref name="DemEnableConditionGroupRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                References an enable condition group.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable Condition Group"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="98ab6aa5-4410-482a-972a-54071a26fdd5"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemEnableConditionGroup"/>
                        </v:ref>
                        <v:var name="DemEventAvailable" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;This parameter configures, whether the related event is available or not regarding to event processing.&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;TRUE: the related event will be completely processed as usual&lt;/li&gt;
                                  &lt;li&gt;FALSE: the related event is treated as if it does not exist&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;Note: If &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;
                                is  enabled,
                                &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCOfDisabledEvents&quot;&gt;DemClearDTCOfDisabledEvents&lt;/a&gt;
                                can be enabled to allow ClearDTC() request for &lt;code&gt;DEM_DTC_GROUP_ALL_DTCS&lt;/code&gt; to delete even
                                disabled events e.g. when DemEventAvailable was calibrated to &apos;false&apos; when an event entry already exists.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Event Available&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;: must be set to
                                    &lt;code&gt;DEM_DISPLACEMENT_FULL&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAvailabilitySupport&quot;&gt;DemAvailabilitySupport&lt;/a&gt;: irrespective of
                                  &lt;code&gt;DemCalibrationSupport&lt;/code&gt; and &lt;code&gt;DemEventCombinationSupport&lt;/code&gt;, &lt;code&gt;DemEventAvailable&lt;/code&gt; is editable
                                  when &lt;code&gt;DemAvailabilitySupport&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Event Available"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="a1a9b222-d626-4ff0-92c8-fd06d788f59c"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;)) or                                   (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAvailabilitySupport = &apos;DEM_EVENT_AVAILABILITY&apos;)"/>
                        </v:var>
                        <v:ref name="DemEventFailureCycleRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                
                                &lt;p&gt;Failure cycle for the event based fault confirmation.&lt;/p&gt;
                                &lt;p&gt;START report of this failure cycle triggers an update of the failure counter,
                                if the event has been qualified as failed at least once during
                                it&apos;s event operation cycle.&lt;/p&gt;
                                &lt;p&gt;This reference promotes an operation cycle to a failure cycle.&lt;/p&gt;
                                &lt;p&gt;If an Event Failure Cycle is configured, also an Event Failure Cycle Counter Threshold (DemEventFailureCycleCounterThreshold) must be configured.&lt;/p&gt;

                                &lt;p&gt;If the operation cycle (&lt;a href=&quot;path:../DemOperationCycleRef&quot;&gt;DemOperationCycleRef&lt;/a&gt;) is of type DEM_OPCYC_OBD_DCY,
                                   the event failure cycle must be the same.&lt;/p&gt;

                                &lt;p&gt;If the event is combined and OBDonUDS is enabled then DemEventFailureCycleRef should be disabled or configured to the same reference as DemOperationCycleRef parameter.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                To enable support for &lt;em&gt;Event Failure Cycle&lt;/em&gt;,&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;: If the event is used for event combination,
                                    &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;. Otherwise this parameter is not editable and
                                    derives its configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport&quot;&gt;DemCommonOperationCycleSupport&lt;/a&gt;: must be set
                                    to &lt;code&gt;false&lt;/code&gt;.
                                  &lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;If the event is used for event combination, and &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.
                                   while this event stores the data element DEM_FAILED_CYCLES as part of the referenced Extended Data Class (&lt;a href=&quot;path:../../DemExtendedDataClassRef&quot;&gt;DemExtendedDataClassRef&lt;/a&gt;)
                                   the event failure cycle must be the same as the operation cycle (&lt;a href=&quot;path:../DemOperationCycleRef&quot;&gt;DemOperationCycleRef&lt;/a&gt;).&lt;/p&gt;

                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Event Failure Cycle "/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="b0114697-9a4c-4933-a2c8-9dbaefebdcb6"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster))) and                                       (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="not(node:exists(../DemEventFailureCycleCounterThreshold)) and                                          (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                   true="Event Failure Cycle Counter Threshold must be configured for fault confirmation as Event Failure Cycle is configured for this event."/>
                            <a:tst 
                                   expr="not(node:refvalid(.)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                   true="Invalid reference."/>
                            <a:tst 
                                   expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                          (node:refvalid(.)) and (. != ../DemOperationCycleRef) and ((node:ref(../DemOperationCycleRef))/DemOperationCycleType=&apos;DEM_OPCYC_OBD_DCY&apos;)" 
                                   true="If the operation cycle (DemOperationCycle) is of type DEM_OPCYC_OBD_DCY, the event failure cycle must be the same."/>
                            <a:tst 
                                   expr="(node:refvalid(.)) and                                          (. != ../DemOperationCycleRef) and                                          (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)) and                                          (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                          (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[(DemDTCClassRef = node:current()/../../DemDTCClassRef) and (node:existsAndTrue(DemEvtCmbCommonParamMaster))]/DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_FAILED_CYCLES&apos;]) &gt; 0)" 
                                   true="DemEventFailureCycleRef must be the same as DemOperationCycleRef if the event stores DEM_FAILED_CYCLES."/>
                            <a:tst 
                                   expr="(node:existsAndTrue(../../DemEvtCmbCommonParamMaster)) and                                          (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                           (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                          (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                          (node:refvalid(.)) and (. != ../DemOperationCycleRef)" 
                                   true="For combined events DemEventFailureCycleRef should be disabled or configured to the same reference as DemOperationCycleRef when the OBD variant is configured as OBDonUDS (DEM_OBD_VARIANT_OBDONUDS) or is selectable during runtime (DemCalloutObdVariantFnc)."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemOperationCycle"/>
                        </v:ref>
                        <v:ref name="DemOperationCycleRef" type="REFERENCE">
                          <a:a name="COLUMN_TITLE" value="Operation Cycle"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Kind of operation cycle for the event (e.g. power cycle, driving
                                cycle, ...).&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt;:
                                  If the event is used for event combination
                                  and the event stores the data element DEM_FAILED_CYCLES as part of the referenced Extended Data Class (&lt;a href=&quot;path:../../DemExtendedDataClassRef&quot;&gt;DemExtendedDataClassRef&lt;/a&gt;),
                                  then &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt; to enable
                                  support for &lt;em&gt;Operation Cycle&lt;/em&gt;. Otherwise this parameter is not editable and derives its
                                  configuration value from the associated event with &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                &lt;/li&gt;
                                &lt;li&gt;
                                  If the event is used for event combination and
                                  OBDonUDS is supported (&lt;code&gt;DemObdVariant&lt;/code&gt; = &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                  &lt;code&gt;DemCalloutObdVariantFnc&lt;/code&gt; is configured),then &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.
                                  Otherwise this parameter is not editable and derives its configuration value from the associated event with
                                  &lt;code&gt;DemEvtCmbCommonParamMaster&lt;/code&gt; enabled.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Note: If the reference already contains an invalid value, when the parameter is not editable,
                                the warning &quot;value does not refer to nodes&quot; will be displayed. However, since this
                                invalid value is not used for the generation of the module, this warning can be safely ignored.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Operation Cycle Reference"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="7d42b712-5d00-4d4d-8401-a5e57380bcce"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="not(node:exists(../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../DemEvtCmbCommonParamMaster)) or                                       ( (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[(DemDTCClassRef = node:current()/../../DemDTCClassRef) and (node:existsAndTrue(DemEvtCmbCommonParamMaster))]/DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_FAILED_CYCLES&apos;]) = 0) and                                         ( not( (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                                (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) ) ) ) )"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemOperationCycle"/>
                        </v:ref>
                        <v:ref name="DemStorageConditionGroupRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;References a storage condition group.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Storage Condition Group"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="1159dc02-d520-4e74-8a16-fdef828787b3"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemStorageConditionGroup"/>
                        </v:ref>
                        <v:chc name="DemDebounceAlgorithmClass" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                Debounce algorithm class: counter-based, time-based, or monitor
                                internal.
                                Additionally the implementation-specific Debounce algorithm class
                                &apos;frequency based&apos; is provided.
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceCounterBasedSupport&quot;&gt;DemDebounceCounterBasedSupport&lt;/a&gt;: must be set to true
                                    when &lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt; is set to &lt;code&gt;DemDebounceCounterBased&lt;/code&gt; to support Counter based Debouncing.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceTimeBasedSupport&quot;&gt;DemDebounceTimeBasedSupport&lt;/a&gt;: must be set to true when
                                    &lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt; is set to &lt;code&gt;DemDebounceTimeBase&lt;/code&gt; to support Time based Debouncing.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceFrequencyBasedSupport&quot;&gt;DemDebounceFrequencyBasedSupport&lt;/a&gt;: must be set to true when
                                    &lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt; is set to &lt;code&gt;DemDebounceFrequencyBased&lt;/code&gt; to support Frequency based Debouncing.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="Debounce Algorithm Class"/>
                          <a:a name="TAB" value="Debouncing"/>
                          <a:a name="UUID" 
                               value="8c7b7090-cdfd-465c-860a-cd957bf59228"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="node:value(.) = &apos;DemDebounceCounterBased&apos; and node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceCounterBasedSupport)" 
                                   true="DemGeneral/DemDebounceCounterBasedSupport is set to false, hence the Counter based Debouncing cannot be supported."/>
                            <a:tst 
                                   expr="node:value(.) = &apos;DemDebounceTimeBase&apos; and node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceTimeBasedSupport)" 
                                   true="DemGeneral/DemDebounceTimeBasedSupport is set to false, hence the Time based Debouncing cannot be supported."/>
                            <a:tst 
                                   expr="node:value(.) = &apos;DemDebounceFrequencyBased&apos; and node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceFrequencyBasedSupport)" 
                                   true="DemGeneral/DemDebounceFrequencyBasedSupport is set to false, hence the Frequency based Debouncing cannot be supported."/>
                            <a:tst 
                                   expr="node:value(.) = &apos;DemDebounceMonitorInternal&apos; and not(node:exists(./DemDebounceMonitorInternal/DemCallbackGetFDC)) and                               ((count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemDTCClassRef = node:current()/../../DemDTCClassRef]) &gt; 1) and                               (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[(DemDTCClassRef = node:current()/../../DemDTCClassRef) and                               (node:existsAndTrue(DemEvtCmbCommonParamMaster))]/DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_CURRENT_FDC&apos;]) &gt; 0))" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_CURRENT_FDC&apos;, so either Dem-internal debouncing has to be used or callback function for getting FDC value has to be defined or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) = &apos;DemDebounceMonitorInternal&apos; and not(node:exists(./DemDebounceMonitorInternal/DemCallbackGetFDC)) and                               ((not(count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[DemDTCClassRef = node:current()/../../DemDTCClassRef]) &gt; 1)) and (count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_CURRENT_FDC&apos;]) &gt; 0))" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_CURRENT_FDC&apos;, so either Dem-internal debouncing has to be used or callback function for getting FDC value has to be defined or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_SI30&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_SI30&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_FDC12&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_FDC12&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC1&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC1&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC2&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC2&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC3&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC3&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC4&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC4&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC5&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC5&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC6&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC6&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                            <a:tst 
                                   expr="node:value(.) != &apos;DemDebounceCounterBased&apos; and node:value(.) != &apos;DemDebounceMonitorInternal&apos; and count(util:distinct(node:refs(util:distinct(node:refs(util:distinct(node:refs(../../DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*))/eb-list::*[. = &apos;DEM_OCC7&apos;]) &gt; 0" 
                                   true="The extended data class of this event contains the internal data element &apos;DEM_OCC7&apos;, so either Counter based or Monitor internal Debouncing has to be used, or a different extended data class has to be used for this event."/>
                          </a:da>
                          <v:ctr name="DemDebounceMonitorInternal" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container contains the configuration (parameters) for
                                  monitor internal debouncing.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="a0c7a653-aed1-45ee-9733-e81e086264fe"/>
                            <a:da name="TITLE" 
                                  value="Internal Monitor Debounce Parameters"/>
                            <v:ctr name="DemCallbackGetFDC" type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;The presence of this container indicates, that the Dem has
                                    access to a &quot;GetFaultDetectionCounter&quot; callback,
                                    which the Dem will call to obtain the value of the fault
                                    detection counter.&lt;/p&gt;

                                    &lt;p&gt;In case the container has a
                                    &lt;code&gt;DemCallbackGetFDCFnc&lt;/code&gt;, this parameter
                                    defines the name of the function that the Dem will
                                    call. If this callback function returns E_NOT_OK,
                                    meaning the fetched FDC may be invalid, the FDC will
                                    be considered to have the value equal to 0.&lt;/p&gt;

                                    &lt;p&gt;In case there is no &lt;code&gt;DemCallbackGetFDCFnc&lt;/code&gt;,
                                    the Dem will have a R-Port requiring the interface
                                    &lt;code&gt;CallbackGetFaultDetectionCounter&lt;/code&gt;, whose name is
                                    generated by using the unique callback-prefix followed by the
                                    event name.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Fault Detection Counter Callback Function"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="UUID" 
                                   value="bda3f031-46a7-48d0-9867-023fc5f8752b"/>
                              <a:da name="ENABLE" value="true"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:exists(DemCallbackGetFDCFnc) or node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                                    false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;GetFaultDetectionCounter Callback C-Function&apos;."/>
                              <a:da name="WARNING" type="XPath">
                                <a:tst 
                                       expr="../../../DemEventKind = &apos;DEM_EVENT_KIND_BSW&apos; and not(node:exists(DemCallbackGetFDCFnc))" 
                                       true="The monitor connected to this event is located below the RTE. A c-callback function should be used. Switch on &apos;GetFaultDetectionCounter Callback C-Function&apos;."/>
                                <a:tst 
                                       expr="../../../DemEventKind = &apos;DEM_EVENT_KIND_SWC&apos; and node:exists(DemCallbackGetFDCFnc) and node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                                       true="The monitor connected to this event is located above the RTE. A R-Port should be used. Switch off &apos;GetFaultDetectionCounter Callback C-Function&apos;."/>
                              </a:da>
                              <v:var name="DemCallbackGetFDCFnc" 
                                     type="FUNCTION-NAME">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../DemCallbackGetFDC&quot;&gt;
                                      parent container&lt;/a&gt;.&lt;/p&gt;
                                      &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                                      &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemGetFaultDetectionCounter&amp;lt;ForEvent&amp;gt;(sint8* FaultDetectionCounter)&lt;/code&gt;&lt;/p&gt;
                                      &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                                      &lt;ol&gt;
                                        &lt;li&gt;Activate parent container &lt;a href=&quot;path:../../DemCallbackGetFDC&quot;&gt;DemCallbackGetFDC&lt;/a&gt; and this
                                        parameter&lt;/li&gt;
                                        &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_DemGetFaultDetectionCounterForEvent&lt;/code&gt;&lt;/li&gt;
                                        &lt;li&gt;Configure the related C header file inclusion using the parameter
                                        &lt;a href=&quot;path:.as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                                      &lt;/ol&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="GetFaultDetectionCounter Callback C-Function"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="4f6aca4d-00c2-431d-b688-c6011089c7ac"/>
                                <a:da name="DEFAULT" 
                                      value="Module_DemGetFaultDetectionCounterForEvent"/>
                                <a:da name="ENABLE" value="true"/>
                                <a:da name="INVALID" type="XPath">
                                  <a:tst 
                                         expr="text:uniq(../../../../../eb-list::*/DemEventClass/DemDebounceAlgorithmClass[node:value(.) = &apos;DemDebounceMonitorInternal&apos;]/DemCallbackGetFDC/DemCallbackGetFDCFnc, .)" 
                                         false="The &apos;Get Fault Detection Counter&apos; callback function names must be unique (each event has its own monitor path)."/>
                                  <a:tst 
                                         expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                         false="Invalid name. (no prefixed C function name)"/>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:ctr>
                          <v:ctr name="DemDebounceCounterBased" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container contains the configuration (parameters) for
                                  counter-based debouncing.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="3f524dc8-38ba-4ee5-922f-4e71c2e5fd7d"/>
                            <a:da name="TITLE" 
                                  value="Counter-based Debounce Parameters"/>
                            <v:var name="DemDebounceBehavior" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter defines how the event debounce algorithm will behave, if a related enable
                                    condition is not fulfilled or ControlDTCSetting of the related event is disabled.
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_FREEZE&lt;/code&gt;: The event debounce counter will be frozen with the current
                                      value and will not change while a related enable condition is not fulfilled or ControlDTCSetting
                                      of the related event is disabled. After all related enable conditions are fulfilled and ControlDTCSetting
                                      of the related event is enabled again, the event qualification will continue with the next report of the
                                      event (i.e. SetEventStatus).&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_RESET&lt;/code&gt;: The event debounce counter will be reset to initial value if a related enable
                                      condition is not fulfilled or ControlDTCSetting of the related event is disabled. The qualification of the
                                      event will be restarted with the next valid event report.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Event Debounce Algorithm Behavior"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="e0dea1bf-6ab7-49b0-abe3-eb4c29c36f30"/>
                              <a:da name="DEFAULT" value="DEM_DEBOUNCE_FREEZE"/>
                              <a:da name="RANGE">
                                <a:v>DEM_DEBOUNCE_FREEZE</a:v>
                                <a:v>DEM_DEBOUNCE_RESET</a:v>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterDecrementStepSize" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Defines the step size for decrement of the internal
                                    fault detection counter (&lt;code&gt;PREPASSED&lt;/code&gt;).
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Counter Decrement"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="5a9a7ceb-a2e6-48be-8aa2-5459822d1840"/>
                              <a:da name="DEFAULT" value="1"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=32768"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterFailedThreshold" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the value of the internal fault detection counter,
                                    which indicates the failed status.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Counter Failed Threshold"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="c6fcd04d-5f33-4a39-9fa8-3743cc03f6b8"/>
                              <a:da name="DEFAULT" value="127"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=32767"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                            <v:var 
                                   name="DemDebounceCounterUnconfirmedThreshold" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the value of the internal fault detection counter, which
                                    indicates the &quot;unconfirmedDTC&quot; status.&lt;/p&gt;

                                    &lt;p&gt;When the fault detection counter reaches the unconfirmedDTC threshold,
                                    freeze frame and/or extended data is sampled (asynchronously).&lt;/p&gt;

                                    &lt;p&gt;In case unconfirmedDTC threshold is set to be same as failed threshold,
                                    the unconfirmedDTC threshold is deactivated for this event.&lt;/p&gt;

                                    &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                    To enable support for &lt;em&gt;Counter Unconfirmed Threshold&lt;/em&gt;,&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;/&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;:&lt;br/&gt;
                                        &lt;code&gt;DemFreezeFrameCapture&lt;/code&gt; and/or &lt;code&gt;DemExtendedDataCapture&lt;/code&gt; must be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Counter Unconfirmed Threshold"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="f82477f0-de6c-11e2-a28f-0800200c9a66"/>
                              <a:da name="DEFAULT" value="127"/>
                              <a:da name="EDITABLE" type="XPath" 
                                    expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=32767"/>
                                  <mt:tst expr="&gt;=1"/>
                                </mt:range>
                                <mt:xpath 
                                          true="The &apos;Counter Unconfirmed Threshold&apos; must not be greater than the &apos;Counter Failed Threshold&apos;." 
                                          expr="((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)) and (. &gt; ../DemDebounceCounterFailedThreshold)"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterIncrementStepSize" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Defines the step size for increment of the internal
                                    fault detection counter (&lt;code&gt;PREFAILED&lt;/code&gt;).
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Counter Increment"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="7b81c208-a78e-4429-9fa0-2e7f5ab87ebb"/>
                              <a:da name="DEFAULT" value="1"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=32767"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterJumpDown" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Switch for the activation of Jump-Down.

                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Jump-Down activated&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Jump-Down deactivated&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Jump-Down"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="77a2ecc0-9059-4f18-b247-30372b3f9746"/>
                              <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            <v:var name="DemDebounceCounterJumpDownValue" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Jump-Down value of the internal fault detection counter.&lt;/p&gt;
                                    &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                    To enable support for &lt;em&gt;Jump-Down Value&lt;/em&gt;,&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DemDebounceCounterJumpDown&lt;/code&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Jump-Down Value"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="d84c1888-3fc5-40ea-893e-a37cf9a077e7"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" type="XPath" 
                                    expr="node:existsAndTrue(../DemDebounceCounterJumpDown)"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=32767"/>
                                  <mt:tst expr="&gt;=-32768"/>
                                </mt:range>
                                <mt:xpath 
                                          true="Setting for &apos;Jump-Down Value&apos; is outside the range of [(Counter Passed Threshold + Counter Decrement) .. (Counter Failed Threshold - 1)] configured in &apos;Counter Passed/Failed Threshold&apos;." 
                                          expr="(node:existsAndTrue(../DemDebounceCounterJumpDown)) and ((. &lt; (../DemDebounceCounterPassedThreshold + ../DemDebounceCounterDecrementStepSize)) or (. &gt;= ../DemDebounceCounterFailedThreshold))"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterJumpUp" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Switch for the activation of Jump-Up.

                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Jump-Up activated&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Jump-Up deactivated&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Jump-Up"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="9a2e7df8-bacf-4705-b1cf-4640584ea9c8"/>
                              <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            <v:var name="DemDebounceCounterJumpUpValue" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Jump-Up value of the internal fault detection counter.&lt;/p&gt;
                                    &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                    To enable support for &lt;em&gt;Jump-Up Value&lt;/em&gt;,&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;
                                        &lt;code&gt;DemDebounceCounterJumpUp&lt;/code&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Jump-Up Value"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="8dc200e4-2d91-42d2-8e13-2db58502ec59"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" type="XPath" 
                                    expr="node:existsAndTrue(../DemDebounceCounterJumpUp)"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=32767"/>
                                  <mt:tst expr="&gt;=-32768"/>
                                </mt:range>
                                <mt:xpath 
                                          true="Setting for &apos;Jump-Up Value&apos; is outside the range of [(Counter Passed Threshold + 1) .. (Counter Failed Threshold - Counter Increment)] configured in &apos;Counter Passed/Failed Threshold&apos;." 
                                          expr="(node:existsAndTrue(../DemDebounceCounterJumpUp)) and ((. &gt; (../DemDebounceCounterFailedThreshold - ../DemDebounceCounterIncrementStepSize)) or (. &lt;= ../DemDebounceCounterPassedThreshold))"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterPassedThreshold" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the value of the internal fault detection counter,
                                    which indicates the passed status.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Counter Passed Threshold"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="4a66f007-be08-418c-b91f-071d44c51603"/>
                              <a:da name="DEFAULT" value="-128"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=-1"/>
                                <a:tst expr="&gt;=-32768"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceCounterStorage" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Switch to store the debounce counter value non-volatile or not.
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: debounce counter value shall be stored non-volatile&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: debounce counter value is volatile&lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycleStatusStorage&quot;&gt;DemOperationCycleStatusStorage&lt;/a&gt; must be enabled in
                                     order to use this feature.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Debounce Counter Nv Storage"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="a1657552-cbaa-47d1-b514-585766d4e0d9"/>
                              <a:da name="DEFAULT" value="false"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:existsAndTrue(.) and node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycleStatusStorage)" 
                                    true="DemOperationCycleStatusStorage is disabled, hence Debounce Counter Nv Storage is not possible."/>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="DemDebounceTimeBase" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container contains the configuration (parameters) for time
                                  based debouncing.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="b6dbd1e5-8459-4068-b0d1-2b6f88e90de4"/>
                            <a:da name="TITLE" 
                                  value="Time-based Debounce Parameters"/>
                            <v:var name="DemDebounceBehavior" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter defines how the event debounce algorithm will behave,
                                    if a related enable condition is not fulfilled or ControlDTCSetting of the
                                    related event is disabled.
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_FREEZE&lt;/code&gt;: The event debounce timer will be frozen with the
                                      current value and will not change while a related enable condition is not fulfilled or
                                      ControlDTCSetting of the related event is disabled. After all related enable conditions are fulfilled and
                                      ControlDTCSetting of the related event is enabled again, the event qualification will continue with
                                      the next report of the event (i.e. SetEventStatus).&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_RESET&lt;/code&gt;: The event debounce timer will be reset to initial value if a related enable
                                      condition is not fulfilled or ControlDTCSetting of the related event is disabled. The qualification
                                      of the event will be restarted with the next valid event report.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_CONTINUE&lt;/code&gt;: The event time-based debouncing algorithm will continue on the next
                                      Dem_MainFunction() call if a related enable condition is not fulfilled or ControlDTCSetting of the related
                                      event is disabled.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Event Debounce Algorithm Behavior"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="75f12cfa-6aff-4de7-8419-24bc87985896"/>
                              <a:da name="DEFAULT" value="DEM_DEBOUNCE_CONTINUE"/>
                              <a:da name="RANGE">
                                <a:v>DEM_DEBOUNCE_CONTINUE</a:v>
                                <a:v>DEM_DEBOUNCE_FREEZE</a:v>
                                <a:v>DEM_DEBOUNCE_RESET</a:v>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceTimeFailedThreshold" 
                                   type="FLOAT">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the time out duration for &quot;Event Failed&quot;
                                    qualification.&lt;/p&gt;

                                    &lt;p&gt;The AUTOSAR configuration standard is to use SI units, so
                                    this parameter is defined as float value in seconds.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Event Failed Timeout (s)"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="9f5fd20d-9f4b-4b42-b636-fe81046385fd"/>
                              <a:da name="DEFAULT" value="0.01"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=3600"/>
                                <a:tst expr="&gt;=0.001"/>
                              </a:da>
                              <a:da name="TOOLTIP" type="XPath" 
                                    expr="concat(&apos;Time window for event qualification: current setting will result in &apos;,                                          num:i(ceiling((. * 1000) div (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)) * (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)),                                          &apos; ms timeout&apos;)"/>
                              <a:da name="WARNING" type="XPath">
                                <a:tst 
                                       expr=". &lt; as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime" 
                                       true="Setting for DemDebounceTimeFailedThreshold is smaller than the DEM task time configured in DemGeneral/DemTaskTime. The DEM task time will be used instead."/>
                                <a:tst 
                                       expr="(. &gt; as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime)                                              and (((. * 1000) mod (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)) != 0)" 
                                       true="Setting for DemDebounceTimeFailedThreshold is not an integer multiple of the DEM task time configured in DemGeneral/DemTaskTime. The next higher integer multiple of the DEM task time will be used instead."/>
                              </a:da>
                            </v:var>
                            <v:var name="DemDebounceTimePassedThreshold" 
                                   type="FLOAT">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the time out duration for &quot;Event Passed&quot;
                                    qualification.&lt;/p&gt;

                                    &lt;p&gt;The AUTOSAR configuration standard is to use SI units, so
                                    this parameter is defined as float value in seconds.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Event Passed Timeout (s)"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="884956c5-f9f2-4340-8869-305a54975c17"/>
                              <a:da name="DEFAULT" value="0.01"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=3600"/>
                                <a:tst expr="&gt;=0.001"/>
                              </a:da>
                              <a:da name="TOOLTIP" type="XPath" 
                                    expr="concat(&apos;Timeout for &quot;Event Passed&quot; qualification: current setting will result in &apos;,                                          num:i(ceiling((. * 1000) div (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)) * (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)),                                          &apos; ms timeout&apos;)"/>
                              <a:da name="WARNING" type="XPath">
                                <a:tst 
                                       expr=". &lt; as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime" 
                                       true="Setting for DemTimePassedThreshold is smaller than the DEM task time configured in DemGeneral/DemTaskTime. The DEM task time will be used instead."/>
                                <a:tst 
                                       expr="(. &gt; as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime)                                              and (((. * 1000) mod (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)) != 0)" 
                                       true="Setting for DemTimePassedThreshold is not an integer multiple of the DEM task time configured in DemGeneral/DemTaskTime. The next higher integer multiple of the DEM task time will be used instead."/>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="DemDebounceFrequencyBased" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    This container contains the
                                    configuration (parameters) for
                                    &lt;code&gt;DemDebounceFrequencyBased&lt;/code&gt;.
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="be385479-ae09-40b2-bada-fef1a9ddd750"/>
                            <a:da name="TITLE" 
                                  value="Frequency-based Debounce Parameters"/>
                            <v:var name="DemDebounceBehavior" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter defines how the event debounce algorithm will behave, if a related enable
                                    condition is not fulfilled or ControlDTCSetting of the related event is disabled.
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_FREEZE&lt;/code&gt;: The event debounce timer frequency will be frozen with the current
                                      value and will not change while a related enable condition is not fulfilled or ControlDTCSetting
                                      of the related event is disabled. After all related enable conditions are fulfilled and ControlDTCSetting
                                      of the related event is enabled again, the event qualification will continue with the next report of the
                                      event (i.e. SetEventStatus).&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_RESET&lt;/code&gt;: The event debounce timer frequency will be reset to initial value if a related enable
                                      condition is not fulfilled or ControlDTCSetting of the related event is disabled. The qualification of the
                                      event will be restarted with the next valid event report.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_DEBOUNCE_CONTINUE&lt;/code&gt;: The event frequency-based debouncing algorithm will continue on the next
                                      Dem_MainFunction() call if a related enable condition is not fulfilled or ControlDTCSetting of the related
                                      event is disabled.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Event Debounce Algorithm Behavior"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="e0dea1bf-6ab7-49b0-abe3-eb4c29c36f30"/>
                              <a:da name="DEFAULT" value="DEM_DEBOUNCE_CONTINUE"/>
                              <a:da name="RANGE">
                                <a:v>DEM_DEBOUNCE_CONTINUE</a:v>
                                <a:v>DEM_DEBOUNCE_FREEZE</a:v>
                                <a:v>DEM_DEBOUNCE_RESET</a:v>
                              </a:da>
                            </v:var>
                            <v:var name="DemDurationOfTimeWindow" type="FLOAT">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines duration of the Time Window.&lt;/p&gt;

                                      &lt;p&gt;The AUTOSAR configuration standard is to
                                      use SI units, so this parameter is defined as
                                      float value in seconds.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Time Window (s)"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="b10200a9-ef99-43e8-8c28-0f4295a8374e"/>
                              <a:da name="DEFAULT" value="0.01"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=3600"/>
                                <a:tst expr="&gt;=0"/>
                              </a:da>
                              <a:da name="TOOLTIP" type="XPath" 
                                    expr="concat(&apos;Time window for event qualification: current setting will result in &apos;,                                          num:i(ceiling((. * 1000) div (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)) * (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)),                                          &apos; ms timeout&apos;)"/>
                              <a:da name="WARNING" type="XPath">
                                <a:tst 
                                       expr=". != 0 and (. &lt; as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime)" 
                                       true="Setting for DemDurationOfTimeWindow is smaller than the DEM task time configured in DemGeneral/DemTaskTime. The DEM task time will be used instead."/>
                                <a:tst 
                                       expr="(. &gt; as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime)                                              and (((. * 1000) mod (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTaskTime * 1000)) != 0)" 
                                       true="Setting for DemDurationOfTimeWindow is not an integer multiple of the DEM task time configured in DemGeneral/DemTaskTime. The next higher integer multiple of the DEM task time will be used instead."/>
                              </a:da>
                            </v:var>
                            <v:var name="DemThresholdForEventTestedFailed" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      Defines the threshold for
                                      &lt;code&gt;FAILED&lt;/code&gt;-detection.
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Event Failed Threshold"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="b88c1d70-d632-4be5-bb62-421c3907e5fb"/>
                              <a:da name="DEFAULT" value="10"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=65535"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                            <v:var name="DemThresholdForEventTestedPassed" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      Defines the threshold for
                                      &lt;code&gt;PASSED&lt;/code&gt;-detection.
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Event Passed Threshold"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="26a156ef-1fbc-48fb-85c3-a4f694de1ddf"/>
                              <a:da name="DEFAULT" value="10"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=65535"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                          </v:ctr>
                        </v:chc>
                        <v:lst name="DemIndicatorAttribute" type="MAP">
                          <a:a name="COLUMNS">
                            <a:v>DemIndicatorBehaviour</a:v>
                            <a:v>DemIndicatorRef</a:v>
                          </a:a>
                          <a:a name="LABEL" value="Indicator Attribute List"/>
                          <a:da name="MAX" value="255"/>
                          <v:ctr name="DemIndicatorAttribute" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container contains the event specific configuration of
                                  Indicators.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="REQUIRES-INDEX" value="false"/>
                            <a:a name="UUID" 
                                 value="983ee0e0-2d7b-46f8-b634-02bc7dc9476f"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="( (node:value(./DemIndicatorBehaviour) = &apos;DEM_INDICATOR_SLOW_FLASH&apos;)                                             or                                            (node:value(./DemIndicatorBehaviour) = &apos;DEM_INDICATOR_FAST_FLASH&apos;)                                          )                                          and                                          ( not(node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))                                            or                                            not(as:name(as:ref(./DemIndicatorRef)) =                                                as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)))                                          )                                          and                                          ( not(node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef))                                            or                                            not(as:name(as:ref(./DemIndicatorRef)) =                                                   as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef)))                                          )                                          and                                          ( not(node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef))                                            or                                            not(as:name(as:ref(./DemIndicatorRef)) =                                                   as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef)))                                          )                                          and                                          ( not(node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef))                                            or                                            not(as:name(as:ref(./DemIndicatorRef)) =                                                   as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef)))                                          )                                         " 
                                     true="Setting indicator behavior to fast flash or slow flash requires one of the next lamps as indicator reference: MIL, AWIL, PIL or RSIL."/>
                              <a:tst 
                                     expr="( (node:value(./DemIndicatorBehaviour) = &apos;DEM_INDICATOR_SLOW_FLASH&apos;)                                              or                                              (node:value(./DemIndicatorBehaviour) = &apos;DEM_INDICATOR_FAST_FLASH&apos;)                                            )                                            and                                            not(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))" 
                                     true="Setting indicator behavior to fast flash or slow flash requires J1939 support."/>
                              <a:tst 
                                     expr="( (node:value(./DemIndicatorBehaviour) = &apos;DEM_INDICATOR_BLINK_CONT&apos;)                                             or (node:value(./DemIndicatorBehaviour) = &apos;DEM_INDICATOR_BLINKING&apos;)                                           )                                           and                                           ( ( node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef)                                               and                                               as:name(as:ref(./DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef))                                             )                                             or                                             ( node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef)                                               and                                               as:name(as:ref(./DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef))                                             )                                             or                                             ( node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef)                                               and                                               as:name(as:ref(./DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef))                                             )                                           )" 
                                     true="The indicator can&apos;t be set to Blink Continuous or Blink if the referenced indicator is one of the following lamps: AWIL, PIL or RSIL."/>
                              <a:tst 
                                     expr="(node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                            (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_TYPE1&apos;) and                                            (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                              (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                            (node:existsAndFalse(../../../DemEvtCmbCommonParamMaster)) and                                            (as:name(as:ref(./DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)))" 
                                     true="The MIL indicator can only be configured for a combined event if its DemEvtCmbCommonParamMaster is enabled                                            and if the OBD variant is configured as OBDonUDS (DEM_OBD_VARIANT_OBDONUDS),                                            or is selectable during runtime (DemCalloutObdVariantFnc)."/>
                            </a:da>
                            <a:da name="TITLE" value="Indicator Attributes"/>
                            <v:var name="DemIndicatorBehaviour" 
                                   type="ENUMERATION">
                              <a:a name="COLUMN_TITLE" value="Behaviour"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Behaviour of the linked indicator.&lt;/p&gt;

                                    &lt;p&gt;Range&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_INDICATOR_BLINKING&lt;/code&gt;: The indicator blinks when the event has status FAILED.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_INDICATOR_BLINK_CONT&lt;/code&gt;: The indicator is active and blinks when the
                                          event has status FAILED.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_INDICATOR_CONTINUOUS&lt;/code&gt;: The indicator is active when the event has status FAILED.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_INDICATOR_SLOW_FLASH&lt;/code&gt;: Flash Indicator Lamp should be set to Fast Flash.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_INDICATOR_FAST_FLASH&lt;/code&gt;: Flash Indicator Lamp should be set to Slow Flash.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Indicator Behaviour"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="375138ec-909a-4a02-8df0-03d5c2bf5984"/>
                              <a:da name="DEFAULT" 
                                    value="DEM_INDICATOR_CONTINUOUS"/>
                              <a:da name="RANGE">
                                <a:v>DEM_INDICATOR_CONTINUOUS</a:v>
                                <a:v>DEM_INDICATOR_BLINKING</a:v>
                                <a:v>DEM_INDICATOR_BLINK_CONT</a:v>
                                <a:v>DEM_INDICATOR_SLOW_FLASH</a:v>
                                <a:v>DEM_INDICATOR_FAST_FLASH</a:v>
                              </a:da>
                            </v:var>
                            <v:var 
                                   name="DemIndicatorFailureCycleCounterThreshold" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the number of failure cycles for the
                                    &lt;code&gt;WarningIndicatorOnCriteria&lt;/code&gt;.
                                    &lt;/p&gt;
                                    &lt;p&gt;In case the indicator failure cycle equals the operations cycle of the event, this means:
                                      If the indicator failure cycle counter threshold is configured to
                                      value N and in the Nth consecutive operation cycle
                                      with at least one FAILED qualification, the WIR status bit shall be
                                      set and the indicator shall be switched on.
                                    &lt;/p&gt;
                                    &lt;p&gt;In case the indicator failure cycle is different to the operations cycle of the event, this means:
                                      If the indicator failure cycle counter threshold is configured to
                                      value N and
                                      the indicator failure cycle is started N times with the event being qualified as FAILED (i.e. TF is set),
                                      the WIR status bit shall be set and the indicator shall be switched on.
                                    &lt;/p&gt;
                                    &lt;p&gt;Operation Cycles without any qualification will not influence
                                    this behavior.&lt;/p&gt;
                                    &lt;p&gt;An Operation Cycle with only PASSED qualification(s) will reset
                                    the Indicator Failure Cycle Counter.&lt;/p&gt;
                                    &lt;p&gt;The value &lt;code&gt;0&lt;/code&gt; (zero) for the indicator failure cycle counter threshold
                                      is only allowed for the MIL of events assigned to the OBD driving cycle
                                      i.e., if &lt;code&gt;DemIndicatorRef&lt;/code&gt; equals &lt;code&gt;DemMILIndicatorRef&lt;/code&gt; and
                                      &lt;code&gt;DemOperationCycleRef&lt;/code&gt; refers to an operation cycle with &lt;code&gt;DemOperationCycleType&lt;/code&gt;
                                      equals &lt;code&gt;DEM_OPCYC_OBD_DCY&lt;/code&gt;.
                                    &lt;/p&gt;
                                    &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                    To enable support for &lt;em&gt;Indicator Failure Cycle Counter Threshold&lt;/em&gt;,&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;a href=&quot;path:../DemIndicatorFailureCycleSource&quot;&gt;DemIndicatorFailureCycleSource&lt;/a&gt;: must be set to &lt;code&gt;DEM_FAILURE_CYCLE_INDICATOR&lt;/code&gt;.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Indicator Failure Cycle Counter Threshold"/>
                              <a:a name="OPTIONAL" value="false"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="cc583b18-a27e-4050-9933-4da56dab176c"/>
                              <a:da name="DEFAULT" value="1"/>
                              <a:da name="ENABLE" type="XPath" 
                                    expr="(../DemIndicatorFailureCycleSource = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos;)"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath>
                                  <mt:tst 
                                          true="If OBDonUDS combination is enabled, the failure counter threshold of the MIL indicator assigned to an event combination must be equal with the event failure counter threshold." 
                                          expr="(node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                              (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                                (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                              (node:existsAndTrue(../../../../DemEvtCmbCommonParamMaster)) and                                              (as:name(as:ref(../DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))) and                                              (node:exists(../../../DemEventFailureCycleCounterThreshold) and (. != ../../../DemEventFailureCycleCounterThreshold))"/>
                                  <mt:tst 
                                          true="MIL referenced event must have operation cycle DEM_OPCYC_OBD_DCY to have DemIndicatorFailureCycleCounterThreshold value 0." 
                                          expr="(. = 0) and                                              node:refexists(../DemIndicatorRef) and as:name(as:ref(../DemIndicatorRef)) = &apos;DEM_INDICATOR_MIL&apos; and                                              (node:ref(../../../../DemEventClass/DemOperationCycleRef))/DemOperationCycleType != &apos;DEM_OPCYC_OBD_DCY&apos;"/>
                                </mt:xpath>
                              </a:da>
                            </v:var>
                            <v:var name="DemIndicatorFailureCycleSource" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    
                                    &lt;p&gt;This parameter defines, which failure
                                    cycle is used for the
                                    &lt;code&gt;WarningIndicatorOnCriteria&lt;/code&gt;
                                    handling.&lt;/p&gt;

                                    &lt;p&gt;Range&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_FAILURE_CYCLE_EVENT&lt;/code&gt;: The event based failure cycle &lt;a href=&quot;path:../../../DemEventFailureCycleRef&quot;&gt;DemEventFailureCycleRef&lt;/a&gt;
                                          configured in DemEventClass, is used. Therefore, the parameters &lt;a href=&quot;path:../DemIndicatorFailureCycleRef&quot;&gt;DemIndicatorFailureCycleRef&lt;/a&gt;
                                          and &lt;a href=&quot;path:../DemIndicatorFailureCycleCounterThreshold&quot;&gt;DemIndicatorFailureCycleCounterThreshold&lt;/a&gt; are not used for this indicator
                                          attribute of the event.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DEM_FAILURE_CYCLE_INDICATOR&lt;/code&gt;: An indicator based failure cycle is used,
                                          defined by &lt;a href=&quot;path:../DemIndicatorFailureCycleRef&quot;&gt;DemIndicatorFailureCycleRef&lt;/a&gt; and
                                          &lt;a href=&quot;path:../DemIndicatorFailureCycleCounterThreshold&quot;&gt;DemIndicatorFailureCycleCounterThreshold&lt;/a&gt;.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Indicator Failure Cycle Source "/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="08ea671b-2fd5-4fc3-b78a-7f80e3d2af3e"/>
                              <a:da name="DEFAULT" 
                                    value="DEM_FAILURE_CYCLE_EVENT"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(node:value(.) = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos;) and                                              not(node:exists(../DemIndicatorFailureCycleRef)) and                                              (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                       true="DemIndicatorFailureCycleRef is not configured"/>
                                <a:tst 
                                       expr="node:value(.) = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos; and not(node:exists(../DemIndicatorFailureCycleCounterThreshold))" 
                                       true="DemIndicatorFailureCycleCounterThreshold must be configured"/>
                                <a:tst 
                                       expr="(node:value(.) = &apos;DEM_FAILURE_CYCLE_EVENT&apos;) and                                               not(node:exists(../../../DemEventFailureCycleRef)) and                                               (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                               ( (not(node:exists(../../../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../../../DemEvtCmbCommonParamMaster))) )" 
                                       true="DemEventFailureCycleRef is not configured."/>
                                <a:tst 
                                       expr="(node:value(.) = &apos;DEM_FAILURE_CYCLE_EVENT&apos;) and                                              not(node:exists(../../../DemEventFailureCycleCounterThreshold)) and                                              ( (not(node:exists(../../../../DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(../../../../DemEvtCmbCommonParamMaster))) )" 
                                       true="DemEventFailureCycleCounterThreshold must be configured"/>
                                <a:tst 
                                       expr="(node:value(.) = &apos;DEM_FAILURE_CYCLE_EVENT&apos;) and                                               node:exists(../../../../DemEvtCmbCommonParamMaster) and                                               not(node:refexists(../../../../../eb-list::*[(DemDTCClassRef=node:current()/../../../../DemDTCClassRef) and (node:existsAndTrue(DemEvtCmbCommonParamMaster))]/DemEventClass/DemEventFailureCycleRef))" 
                                       true="DemEventFailureCycleRef must be configured for the event of this combination where DemEvtCmbCommonParamMaster is enabled"/>
                                <a:tst 
                                       expr="(node:value(.) = &apos;DEM_FAILURE_CYCLE_EVENT&apos;) and                                               node:exists(../../../../DemEvtCmbCommonParamMaster) and                                               node:empty(../../../../../eb-list::*[(DemDTCClassRef=node:current()/../../../../DemDTCClassRef) and (node:existsAndTrue(DemEvtCmbCommonParamMaster))]/DemEventClass/DemEventFailureCycleCounterThreshold)" 
                                       true="DemEventFailureCycleCounterThreshold must be configured for this combined event since its DemEvtCmbCommonParamMaster is enabled"/>
                              </a:da>
                              <a:da name="RANGE">
                                <a:v>DEM_FAILURE_CYCLE_EVENT</a:v>
                                <a:v>DEM_FAILURE_CYCLE_INDICATOR</a:v>
                              </a:da>
                              <a:da name="WARNING" type="XPath" 
                                    expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and (node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                   as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) = as:name(as:ref(../DemIndicatorRef)) and                                   node:value(.) != &apos;DEM_FAILURE_CYCLE_EVENT&apos;" 
                                    true="If referenced indicator is MIL-indicator, the DemIndicatorFailureCycleSource must be configured to DEM_FAILURE_CYCLE_EVENT."/>
                            </v:var>
                            <v:var 
                                   name="DemIndicatorHealingCycleCounterThreshold" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the number of healing cycles for the
                                    &lt;code&gt;WarningIndicatorOffCriteria&lt;/code&gt;.&lt;/p&gt;
                                    &lt;p&gt;If value 0 is selected, the behavior for healing is the same as for value 1.&lt;/p&gt;
                                    &lt;p&gt;The &lt;code&gt;WarningIndicatorOffCriteria&lt;/code&gt; processing is done
                                    at the beginning of the operation cycle to decrease run time of
                                    Dem_Shutdown() during ending of all operation cycles.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Indicator Healing Cycle Counter Threshold"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="048abaed-31a0-4428-af8f-852f9dc3e5f8"/>
                              <a:da name="DEFAULT" value="1"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          true="Healing cycle threshold has to be in range 1..255 when DemFreezeFrameCapture and/or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD to avoid OCC2 based healing in the same                                                 operation cycle after event is reported as failed or unconfirmed, but never passed." 
                                          expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos; or as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and . &lt;1"/>
                              </a:da>
                            </v:var>
                            <v:ref name="DemIndicatorFailureCycleRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    
                                    &lt;p&gt;Kind of failure cycle for the indicator
                                    controlled by the respective event used for
                                    the &lt;code&gt;WarningIndicatorOnCriteria&lt;/code&gt;.&lt;/p&gt;
                                    &lt;p&gt;If the operation cycle (&lt;a href=&quot;path:../../../DemOperationCycleRef&quot;&gt;DemOperationCycleRef&lt;/a&gt;)
                                      is of type DEM_OPCYC_OBD_DCY, the MIL indicator failure cycle must be the same.&lt;/p&gt;
                                    &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                    To enable support for &lt;em&gt;Indicator Failure Cycle&lt;/em&gt;,&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;
                                        &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport&quot;&gt;DemCommonOperationCycleSupport&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.
                                      &lt;/li&gt;
                                      &lt;li&gt;
                                        &lt;a href=&quot;path:../DemIndicatorFailureCycleSource&quot;&gt;DemIndicatorFailureCycleSource&lt;/a&gt;: must be set to &lt;code&gt;DEM_FAILURE_CYCLE_INDICATOR&lt;/code&gt;.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Indicator Failure Cycle "/>
                              <a:a name="OPTIONAL" value="false"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="b41a0458-0190-4295-8b9f-9779c5d7387a"/>
                              <a:da name="ENABLE" type="XPath" 
                                    expr="(../DemIndicatorFailureCycleSource = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos;) and                                     (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(../DemIndicatorFailureCycleSource = &apos;DEM_FAILURE_CYCLE_INDICATOR&apos;) and not(node:refvalid(.)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                       true="Invalid reference."/>
                                <a:tst 
                                       expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                              (node:refvalid(.)) and (. != ../../../DemOperationCycleRef) and ((node:ref(../../../DemOperationCycleRef))/DemOperationCycleType=&apos;DEM_OPCYC_OBD_DCY&apos;) and                                              (../DemIndicatorRef = (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))" 
                                       true="If the operation cycle (DemOperationCycle) is of type DEM_OPCYC_OBD_DCY, the MIL indicator failure cycle must be the same."/>
                                <a:tst 
                                       expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                              (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                              (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                                (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                              (node:existsAndTrue(../../../../DemEvtCmbCommonParamMaster)) and                                              (as:name(as:ref(../DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))) and                                              (node:refvalid(.)) and (. != ../../../DemOperationCycleRef)" 
                                       true="If OBDonUDS combination is enabled, the MIL indicator assigned to an event combination must have the same failure cycle as the event operation cycle."/>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemOperationCycle"/>
                            </v:ref>
                            <v:ref name="DemIndicatorHealingCycleRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    
                                    &lt;p&gt;Kind of healing cycle for the indicator
                                    controlled by the respective event used for
                                    the &lt;code&gt;WarningIndicatorOffCriteria&lt;/code&gt;.&lt;/p&gt;
                                    &lt;p&gt;If the operation cycle (&lt;a href=&quot;path:../../../DemOperationCycleRef&quot;&gt;DemOperationCycleRef&lt;/a&gt;) is of type DEM_OPCYC_OBD_DCY, the MIL indicator
                                       healing cycle must be the same.&lt;/p&gt;
                                    &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                                    To enable support for &lt;em&gt;Indicator Healing Cycle&lt;/em&gt;,&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;
                                        &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport&quot;&gt;DemCommonOperationCycleSupport&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Indicator Healing Cycle "/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="0356a836-9b7c-483e-8348-89295ab14cbb"/>
                              <a:da name="EDITABLE" type="XPath" 
                                    expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="not(node:refvalid(.)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                       true="Invalid reference."/>
                                <a:tst 
                                       expr="( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                                (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) ) and                                              (. != ../../../DemOperationCycleRef) and                                              (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport))" 
                                       true="Healing and operation cycles have to be the same when DemFreezeFrameCapture and/or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD since healing is based on OCC2 counter, which                                              is not updated when cycles are different."/>
                                <a:tst 
                                       expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                              (node:refvalid(.)) and (. != ../../../DemOperationCycleRef) and ((node:ref(../../../DemOperationCycleRef))/DemOperationCycleType=&apos;DEM_OPCYC_OBD_DCY&apos;) and                                              (../DemIndicatorRef = (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))" 
                                       true="If the operation cycle (DemOperationCycle) is of type DEM_OPCYC_OBD_DCY, the MIL indicator healing cycle must be the same."/>
                                <a:tst 
                                       expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonOperationCycleSupport)) and                                              (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and                                              (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                                (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                              (node:existsAndTrue(../../../../DemEvtCmbCommonParamMaster)) and                                              (as:name(as:ref(../DemIndicatorRef)) = as:name(as:ref(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef))) and                                              (node:refvalid(.)) and (. != ../../../DemOperationCycleRef)" 
                                       true="If OBDonUDS combination is enabled, the MIL indicator assigned to an event combination must have the same healing cycle as the event operation cycle."/>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemOperationCycle"/>
                            </v:ref>
                            <v:ref name="DemIndicatorRef" type="REFERENCE">
                              <a:a name="COLUMN_TITLE" value="Indicator"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Reference to the used indicator.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Indicator"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="1d9fcf5d-7ab8-46ac-a115-72496b52852c"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst expr="node:refvalid(.)" 
                                       false="Invalid reference."/>
                                <a:tst 
                                       expr="text:uniq(../../eb-list::*/DemIndicatorRef, .)" 
                                       false="The Indicator Reference must be unique."/>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemIndicator"/>
                            </v:ref>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:ctr>
                  </v:lst>
                  <v:lst name="DemPidClass" type="MAP">
                    <a:a name="COLUMNS" value="DemPidIdentifier"/>
                    <a:a name="LABEL" value="PID List"/>
                    <a:a name="ROWS" value="12"/>
                    <a:a name="TAB" value="Pid Class"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc))) and                                      (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                      (count(./eb-list::*) &gt; 0)" 
                             true="Configuration of PID classes is not allowed, when OBDVariant is set to DEM_OBD_VARIANT_OBDONUDS and DemCalloutObdVariantFnc is not configured."/>
                      <a:tst 
                             expr="(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) and                                      (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef))) and                                      (count(./eb-list::*) &gt; 0)" 
                             true="If DemCalloutObdVariantFnc and PIDs are configured for the classic OBD freeze frame, also DemUDSOBDFreezeFrameClassRef must be configured for the OBDonUDS freeze frame."/>
                    </a:da>
                    <a:da name="MAX" value="255"/>
                    <v:ctr name="DemPidClass" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This container contains the different PIDs for the global
                            OBD-relevant freeze frame class. It is assembled out of one or
                            several data elements.&lt;/p&gt;
                            &lt;p&gt;An OBD relevant event is an event with an OBD DTC either configured or calibrated.
                            In case no OBD DTC is configured, then no data is captured for such event.&lt;/p&gt;
                            &lt;p&gt;The selection of &lt;code&gt;DemFreezeFrameCapture&lt;/code&gt;
                            defines the behavior of OBD freeze frame collection and reporting mechanism.&lt;/p&gt;
                            &lt;p&gt;For selection DEM_TRIGGER_ON_FDC_THRESHOLD, a single OBD freeze frame is available for storing for
                            all OBD-relevant events. An OBD-relevant event is an event with an OBD DTC either configured or calibrated.
                            The OBD freeze frame data behavior when DemFreezeFrameCapture equals DEM_TRIGGER_ON_FDC_THRESHOLD:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;store is done on first error recognition, meaning when UDS DTC
                              status bit 2 (PendingDTC) transitions from 0 to 1.&lt;/li&gt;
                              &lt;li&gt;clear is done when UDS DTC status bit 2 (PendingDTC) transitions from 1 to 0 while UDS DTC
                              status bit 3 (ConfirmedDTC) is not set. e.g. during aging, clearing of emission data&lt;/li&gt;
                              &lt;li&gt;update data, if another OBD-relevant event higher in priority reports its first error, the
                              previous OBD event is replaced by the higher priority event and the data is overwritten with
                              data of the higher priority event&lt;/li&gt;
                              &lt;li&gt;report, if data is available, with services:
                              &lt;ul&gt;
                                &lt;li&gt;Service $02 and the UDS Service $19 05; Dem-Dcm API behavior via Dem_DcmGetDTCOfOBDFreezeFrame() / Dem_DcmReadDataOfOBDFreezeFrame()&lt;/li&gt;
                                &lt;li&gt;Service $19 04; Dem-Dcm API behavior via Dem_GetSizeOfFreezeFrameSelection() / Dem_GetNextFreezeFrameData()&lt;/li&gt;
                              &lt;/ul&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;For a selection different than DEM_TRIGGER_ON_FDC_THRESHOLD, OBD freeze frame is available per entry
                            of OBD relevant events.
                            The OBD freeze frame data behavior when DemFreezeFrameCapture is different than DEM_TRIGGER_ON_FDC_THRESHOLD:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;store is done on first error recognition, meaning when UDS DTC status bit
                              2 (PendingDTC) transitions from 0 to 1 on the event memory entry creation.&lt;/li&gt;
                              &lt;li&gt;clear is done when UDS DTC status bit 2 (PendingDTC) transitions from 1 to 0 while UDS DTC status bit 3
                              (ConfirmedDTC) is not set or when both of those bits transition from 1 to 0 (e.g. during aging, clearing of
                              emission data, on event memory entry displacement)&lt;/li&gt;
                              &lt;li&gt;update is not possible on OBD error reoccurrence, the event memory entry is not updated with new data&lt;/li&gt;
                              &lt;li&gt;report if data is available with the same services in the same format. The selection of the OBD freeze
                              frame data has the following criteria applied:
                              &lt;ul&gt;
                                &lt;li&gt;priority-based selection and occurrence-based selection meaning between the events which caused the OBD
                                freeze frame capturing the higher priority one which has the oldest entry creation time and is currently
                                confirmed will be selected for reporting via services $02 and $19.&lt;/li&gt;
                              &lt;/ul&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;For service $19 $04 the event which stores the most relevant OBD freeze frame will react with RecordNumer 0x00.&lt;/p&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;PID&lt;/em&gt;,&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt; must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBD_CLASSIC&lt;/code&gt; or
                                  &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;If &lt;em&gt;PIDs&lt;/em&gt; are configured for the classic OBD freeze frame and
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; is configured, i.e.
                              switching of the OBD variant is possible, also the OBDonUDS freeze frame must be configured
                             (see &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef&quot;&gt;DemUDSOBDFreezeFrameClassRef&lt;/a&gt;).&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="NAME_PATTERN" value="PID_?"/>
                      <a:a name="REQUIRES-INDEX" value="true"/>
                      <a:a name="UUID" 
                           value="a80aecf0-5fbc-4799-b866-0508194830da"/>
                      <a:da name="TITLE" value="PID"/>
                      <v:var name="DemPidIdentifier" type="INTEGER">
                        <a:a name="COLUMN_TITLE" value="PID"/>
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;em&gt;Identifier of the PID&lt;/em&gt;
                              &lt;p&gt;The PID Identifier 0xFF which is reserved by ISO (refer to J1979-DA:2014 TABLE B138) will be used as &quot;PID disabled&quot; calibration option.
                                 Therefore, PIDs with this identifier (0xFF) will not be reported via service 0x02, 0x19 and 0xAF.
                                 The configuration parameter DemPidIdentifier will be limited to [0x00..0xFE].&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="PID Identifier"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="36a6cdb5-0591-43c9-b285-69a153d5d1b4"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(node:pos(..))"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=254"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst false="The PID must be unique." 
                                    expr="text:uniq(../../eb-list::*/DemPidIdentifier, .)"/>
                            <mt:tst 
                                    true="The PID 0xFF is reserved as disabled value for calibration." 
                                    expr=". = 255"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:lst name="DemPidDataElement" type="MAP">
                        <a:a name="LABEL" value="Pid Data Element List"/>
                        <a:a name="TAB" value="Pid Data Element"/>
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="DemPidDataElement" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;This container contains the different data elements contained in
                                the specific PID.&lt;/p&gt;
                                &lt;p&gt;Note: The order of data elements per PID in this configuration parameter
                                  must accord to the order of data elements configured in DcmDspPidDataPos.
                                  Otherwise the API Dem_DcmReadDataOfOBDFreezeFrame() may return wrong data elements.&lt;/p&gt;
                                &lt;p&gt;Note: The API Dem_GetNextFreezeFrameData with record number 0 will return
                                  The PidDataElements Byte aligned without padding bits.
                                  The bit order inside the Pid may be different in service 0x19 0x04
                                  RecordNumber 0 (reportDTCSnapshotRecordByDTCNumber)
                                  than in Service 0x02 (Request powertrain freeze frame data),
                                  because the padding information is not available inside the Dem.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="REQUIRES-INDEX" value="true"/>
                          <a:a name="UUID" 
                               value="574bdb18-96be-41e5-a827-9a1870ccc779"/>
                          <a:da name="TITLE" value="Pid Data Element"/>
                          <v:ref name="DemPidDataElementClassRef" 
                                 type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;This reference contains the link to a data element
                                  class.
                                  Both DemExternalCSDataElementClass and DemExternalSRDataElementClass
                                  references are available, as internal data elements can not be
                                  referenced in the current implementation.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Pid Data Element Class"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="40c11a91-3e3b-4ab5-98ad-5c2cb469eb65"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference."/>
                              <a:tst 
                                     expr="(node:ref(.)/DemDataElementCaptureTrigger) = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;" 
                                     true="PID data elements must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                            </a:da>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                            </a:da>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                  <v:lst name="DemAdvDisplacementPassiveTableLine" type="MAP">
                    <a:a name="COLUMNS" value="DemReportedEventRef"/>
                    <a:a name="LABEL" value="Passive Table Lines"/>
                    <a:a name="TAB" value="Advanced Displacement Passive Table"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy = &apos;DEM_DISPLACEMENT_FULL&apos;) and                       (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport))"/>
                    <v:ctr name="DemAdvDisplacementPassiveTableLine" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Describes a line in the passive table used in the advanced displacement algorithm.&lt;/p&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;Passive Table&lt;/em&gt;,&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: must be set to
                                &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt; (because Si30 is available only in this mode).
                              &lt;/li&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy&quot;&gt;DemEventDisplacementStrategy&lt;/a&gt;:
                                 must be set to &lt;code&gt;DEM_DISPLACEMENT_FULL&lt;/code&gt;.
                              &lt;/li&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;: must
                              be set to &lt;code&gt;true&lt;/code&gt;.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="NAME_PATTERN" 
                           value="DemAdvDisplacementPassiveTableLine_?"/>
                      <a:a name="UUID" 
                           value="ab2d2300-fee7-11e4-b939-0800200c9a66"/>
                      <a:da name="TITLE" value="Passive Table"/>
                      <v:ref name="DemReportedEventRef" type="REFERENCE">
                        <a:a name="COLUMN_TITLE" 
                             value="Reported Event Reference"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;em&gt;Reference to the DemEventParameter corresponding to the event currently reported and trying to get an event memory entry. &lt;/em&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Reported Event Reference"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst 
                                 expr="text:uniq(../../eb-list::*/DemReportedEventRef, .)" 
                                 false="A reported event reference shall apear only once in a passive table."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                      </v:ref>
                      <v:lst name="DemPassiveEventRefs" type="MAP">
                        <a:a name="COLUMNS" value="DemPassiveEventRef"/>
                        <a:a name="LABEL" value="Passive Event Reference"/>
                        <a:a name="ROWS" value="12"/>
                        <a:a name="TAB" value="Passive Event Reference List"/>
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="DemPassiveEventRefs" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;em&gt;List of references to DemEventParameter corresponding to an event currently stored in
                                an event memory entry and subject for displacement.&lt;/em&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="REQUIRES-INDEX" value="false"/>
                          <a:a name="UUID" 
                               value="d990e650-fee7-11e4-b939-0800200c9a66"/>
                          <a:da name="TITLE" value="Passive Event Ref"/>
                          <v:ref name="DemPassiveEventRef" type="REFERENCE">
                            <a:a name="COLUMN_TITLE" 
                                 value="Passive Event Reference"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;em&gt;Reference to a DemEventParameter corresponding to the event currently stored in an
                                  event memory entry and subject for displacement. &lt;/em&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Passive Event Reference"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="f0ada5d0-fee7-11e4-b939-0800200c9a66"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="text:uniq(../../eb-list::*/DemPassiveEventRef, .)" 
                                     false="Suboptimal configuration, a passive event reference shall apear only once per passive table line."/>
                              <a:tst 
                                     expr="as:name(as:ref(../DemPassiveEventRef)) = as:name(as:ref(../../../DemReportedEventRef))" 
                                     true="Suboptimal configuration, an event configured as DemPassiveEventRef should not be configured as DemReportedEventRef."/>
                              <a:tst 
                                     expr="util:distinct(node:refs(../DemPassiveEventRef))/DemEventClass/DemEventPriority &lt; util:distinct(node:refs(../../../DemReportedEventRef))/DemEventClass/DemEventPriority" 
                                     true="Suboptimal configuration, the priority of a DemPassiveEventRef should not be greater than the proirity of a DemReportedEventRef."/>
                            </a:da>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                </v:ctr>
              </v:lst>
              <v:ctr name="DemGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      This container contains the
                      configuration (parameters) of the BSW Dem.
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="General Configuration"/>
                <a:a name="UUID" value="4039f00a-d0f6-4537-9863-58fd63c7a126"/>
                <a:da name="WARNING" type="XPath" 
                      expr="(not(node:exists(./DemImmediateNvStorageLimit))) and count(../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0" 
                      true="DemGeneral/DemImmediateNvStorageLimit is not enabled, but DemImmediateNvStorage is set."/>
                <v:lst name="DemClient" type="MAP">
                  <a:a name="COLUMNS" value="DemClientId"/>
                  <a:a name="LABEL" value="Client List"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="Clients"/>
                  <a:da name="MAX" value="254"/>
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="DemClient" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="This container contains possible clients that are using the Dem APIs."/>
                    <a:a name="NAME_PATTERN" value="CLIENT_?"/>
                    <a:a name="UUID" 
                         value="d19810cc-a46f-11e9-a2a3-2a2ae2dbcce4"/>
                    <a:da name="TITLE" value="Client"/>
                    <v:var name="DemClientId" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="ClientId"/>
                      <a:a name="DESC">
                        <a:v>Defines a unique identifier for a Dem client. This number is used by
                             this client in the ClientId parameter in all API with this parameter.</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Client Identifier"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="REQUIRES-INDEX" value="false"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="0be8c380-a46f-11e9-a2a3-2a2ae2dbcce4"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..))"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;254"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst false="The ClientId must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemClientId, .)"/>
                          <mt:tst 
                                  true="The ClientIds must be zero-based and consecutive." 
                                  expr=". &gt;= count(../../eb-list::*)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:ctr name="DemServiceAPI" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Container for configuration of the service API of Dem.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Service API Parameters&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Service API Parameters"/>
                  <a:a name="UUID" 
                       value="ECUC:aa906930-2cc0-11e2-81c1-0800200c9a66"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemRteUsage)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath 
                              true="Dem and Dcm must have the same AUTOSAR version as default service API, or Dcm could be set to AUTOSAR_42 and Dem to AUTOSAR_43 or AUTOSAR_2011." 
                              expr="not(count(as:modconf(&apos;Dcm&apos;)/eb-list::*) = 0)                                  and (as:modconf(&apos;Dcm&apos;)[1]/CommonPublishedInformation/VendorId = 1)                                  and (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI))                                  and (node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI))                                  and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI                                       != as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI)                                  and ( ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI                                           != &apos;AUTOSAR_43&apos;) and                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI                                           != &apos;AUTOSAR_2011&apos;) ) or                                        (as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI                                       != &apos;AUTOSAR_42&apos;))"/>
                  </a:da>
                  <v:var name="DemEnableASR40ServiceAPI" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                        
                        &lt;p&gt;If enabled, the AUTOSAR 4.0.3 service interface package ASR40 is provided
                        in addition to the configured default service interface package.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Enable AUTOSAR 4.0 service API&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to an AUTOSAR version &lt;code&gt;AUTOSAR_42&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Enable AUTOSAR 4.0 service API "/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:aa906932-2cc0-11e2-81c1-0800200c9a66"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:xpath>
                        <mt:tst 
                                true="DemEnableASR40ServiceAPI cannot be enabled if the DemDefaultASRServiceAPI is AUTOSAR_2011." 
                                expr="((node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;))"/>
                        <mt:tst 
                                true="DemEnableASR40ServiceAPI cannot be enabled if the DemDefaultASRServiceAPI is AUTOSAR_43." 
                                expr="((node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;))"/>
                      </mt:xpath>
                    </a:da>
                    <a:da name="WARNING" type="Multi">
                      <mt:xpath 
                                true="If the DemDefaultASRServiceAPI is AUTOSAR_40, enabling of the DemEnableASR40ServiceAPI is not required, as interfaces related to AUTOSAR4.0.3 are already available." 
                                expr="((node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_40&apos;))"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemEnableASR42ServiceAPI" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                        
                        &lt;p&gt;If enabled, the AUTOSAR 4.2.1 service interface package ASR42 is provided
                          in addition to the configured default service interface package.&lt;/p&gt;
                          &lt;p&gt;The CddIf service interface for ClearDTC is not included in the ASR42 package.&lt;/p&gt;
                          &lt;p&gt;The additional ASR42 APIs GetDebouncingOfEvent(), GetEventFreezeFrameDataEx()
                          and GetEventExtendedDataRecordEx() are available as stub only.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Enable AUTOSAR 4.2 service API&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to an AUTOSAR version &lt;code&gt;AUTOSAR_40&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Enable AUTOSAR 4.2 service API "/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:aa906934-2cc0-11e2-81c1-0800200c9a66"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:xpath>
                        <mt:tst 
                                true="DemEnableASR42ServiceAPI cannot be enabled if the DemDefaultASRServiceAPI is AUTOSAR_2011." 
                                expr="((node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;))"/>
                        <mt:tst 
                                true="DemEnableASR42ServiceAPI cannot be enabled if the DemDefaultASRServiceAPI is AUTOSAR_43." 
                                expr="((node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;))"/>
                      </mt:xpath>
                    </a:da>
                    <a:da name="WARNING" type="Multi">
                      <mt:xpath 
                                true="If the DemDefaultASRServiceAPI is AUTOSAR_42, enabling of the DemEnableASR42ServiceAPI is not required, as interfaces related to AUTOSAR4.2.1 are already available." 
                                expr="((node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;))"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemDefaultASRServiceAPI" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the AUTOSAR version used as base for creating the service API:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;b&gt;AUTOSAR_40&lt;/b&gt;: AUTOSAR 4.0.3 is used as base.&lt;br/&gt;
                                Please check the APIs compatibility in the table below.&lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;AUTOSAR_42&lt;/b&gt;: AUTOSAR 4.2.1 is used as base.&lt;br/&gt;
                                Please check the APIs compatibility in the table below.&lt;br/&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;AUTOSAR_43&lt;/b&gt;: AUTOSAR 4.3.1 is used as base.&lt;br/&gt;
                                Please check the APIs compatibility in the table below.&lt;br/&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;AUTOSAR_2011&lt;/b&gt;: AUTOSAR 20-11 is used as base.&lt;br/&gt;
                                Please check the APIs compatibility in the table below.&lt;br/&gt;
                              &lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;See the table below for additional info.&lt;/p&gt;
                            &lt;p&gt;Note: &lt;b&gt;API Availability&lt;/b&gt; column shows existence of operation with respect to
                            the AUTOSAR version selected by DemDefaultASRServiceAPI parameter.&lt;/p&gt;
                            &lt;p&gt;Note: The &lt;b&gt;AUTOSAR Prototype Compatibility&lt;/b&gt; column specifies the AUTOSAR version
                            to which the operation has a matching prototype.&lt;/p&gt;

                            &lt;p&gt;
                              &lt;table style=&quot;width:100%&quot; border=&quot;1&quot;&gt;
                                &lt;tr&gt; &lt;th&gt;&lt;b&gt;Client-Server&lt;br/&gt;Interface&lt;/b&gt;&lt;/th&gt;   &lt;th&gt;&lt;b&gt;Client-Server&lt;br/&gt;Operation&lt;/b&gt;&lt;/th&gt;   &lt;th colspan=&quot;4&quot;&gt;&lt;b&gt;AUTOSAR&lt;br/&gt;Prototype Compatibility&lt;/b&gt;&lt;/th&gt;        &lt;th colspan=&quot;4&quot;&gt;&lt;b&gt;API Availability&lt;/b&gt;&lt;/th&gt;                                         &lt;th&gt;&lt;b&gt;Comments&lt;/b&gt;&lt;/th&gt;&lt;/tr&gt;
                                &lt;tr&gt;&lt;th&gt;&lt;/th&gt;                                      &lt;th&gt;&lt;/th&gt;                                     &lt;th&gt;4.0&lt;/th&gt;&lt;th&gt;4.2&lt;/th&gt;&lt;th&gt;4.3&lt;/th&gt;&lt;th&gt;R20-11&lt;/th&gt;                    &lt;th&gt;AUTOSAR_40&lt;/th&gt; &lt;th&gt;AUTOSAR_42&lt;/th&gt; &lt;th&gt;AUTOSAR_43&lt;/th&gt; &lt;th&gt;AUTOSAR_2011&lt;/th&gt;    &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticMonitor&lt;/td&gt;                    &lt;td&gt;SetEventStatus&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticMonitor&lt;/td&gt;                    &lt;td&gt;ResetEventStatus&lt;/td&gt;                     &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticMonitor&lt;/td&gt;                    &lt;td&gt;ResetEventDebounceStatus&lt;/td&gt;             &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation available in autosar from AUTOSAR_42&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticMonitor&lt;/td&gt;                    &lt;td&gt;PrestoreFreezeFrame&lt;/td&gt;                  &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticMonitor&lt;/td&gt;                    &lt;td&gt;ClearPrestoredFreezeFrame&lt;/td&gt;            &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticMonitor&lt;/td&gt;                    &lt;td&gt;SetEventDisabled&lt;/td&gt;                     &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemOBDSupport = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventStatus&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventUdsStatus&lt;/td&gt;                    &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation available in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventFailed&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventTested&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetDTCOfEvent&lt;/td&gt;                        &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;With AUTOSAR_43, AUTOSAR_2011 the error code of DEM_E_NO_DTC_AVAILABLE is different compared to AUTOSAR_40, AUTOSAR_42&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetFaultDetectionCounter&lt;/td&gt;             &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;With AUTOSAR_43, AUTOSAR_2011 operation also returns DEM_E_NO_FDC_AVAILABLE.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventFreezeFrameData&lt;/td&gt;              &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Additional possible error values for AUTOSAR_42.&lt;br/&gt;Operation removed in autosar  from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventExtendedDataRecord&lt;/td&gt;           &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetDebouncingOfEvent&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Only Stub implementation. Operation available in autosar from AUTOSAR_42&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventExtendedDataRecordEx&lt;/td&gt;         &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;AUTOSAR_42: The functionality for the operation is not supported, and the corresponding API is implemented as a stub only.&lt;br/&gt;AUTOSAR_43 and AUTOSAR_2011: The functionality for the operation is supported, and the corresponding API is implemented.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DiagnosticInfo&lt;/td&gt;                       &lt;td&gt;GetEventFreezeFrameDataEx&lt;/td&gt;            &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;AUTOSAR_42: The functionality for the operation is not supported, and the corresponding API is implemented as a stub only.&lt;br/&gt;AUTOSAR_43 and AUTOSAR_2011: The functionality for the operation is supported, and the corresponding API is implemented.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventStatus&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Operation in AUTOSAR_42 is different than AUTOSAR_40 and it is removed from AUTOSAR_43&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventUdsStatus&lt;/td&gt;                    &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation available in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventFailed&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventTested&lt;/td&gt;                       &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetDTCOfEvent&lt;/td&gt;                        &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;With AUTOSAR_43, AUTOSAR_2011 the error code of DEM_E_NO_DTC_AVAILABLE is different compared to AUTOSAR_40, AUTOSAR_42&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetFaultDetectionCounter&lt;/td&gt;             &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;AUTOSAR_42: Operation deviates from the autosar by not supporting return value DEM_E_NO_FDC_AVAILABLE.&lt;br/&gt;AUTOSAR_43 and AUTOSAR_2011: Operation supports return value DEM_E_NO_FDC_AVAILABLE.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventFreezeFrameData&lt;/td&gt;              &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Additional possible error values for AUTOSAR_42.&lt;br/&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventExtendedDataRecord&lt;/td&gt;           &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_43.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetDebouncingOfEvent&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Only Stub implementation.&lt;br/&gt;Operation available in autosar from AUTOSAR_42.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventExtendedDataRecordEx&lt;/td&gt;         &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;AUTOSAR_42: The functionality for the operation is not supported, and the corresponding API is implemented as a stub only.&lt;br/&gt;AUTOSAR_43 and AUTOSAR_2011: The functionality for the operation is supported, and the corresponding API is implemented.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralDiagnosticInfo&lt;/td&gt;                &lt;td&gt;GetEventFreezeFrameDataEx&lt;/td&gt;            &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;AUTOSAR_42: The functionality for the operation is not supported, and the corresponding API is implemented as a stub only.&lt;br/&gt;AUTOSAR_43 and AUTOSAR_2011: The functionality for the operation is supported, and the corresponding API is implemented.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;OperationCycle&lt;/td&gt;                       &lt;td&gt;SetOperationCycleState&lt;/td&gt;               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemOperationCycleProcessing = &apos;DEM_PROCESS_OPCYC_STATE&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;OperationCycle&lt;/td&gt;                       &lt;td&gt;SetOperationCycleCntValue&lt;/td&gt;            &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemOperationCycleProcessing = &apos;DEM_PROCESS_OPCYC_COUNTER&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;OperationCycle&lt;/td&gt;                       &lt;td&gt;RestartOperationCycle&lt;/td&gt;                &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;OperationCycle&lt;/td&gt;                       &lt;td&gt;SetCycleQualified&lt;/td&gt;                    &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;AgingCycle&lt;/td&gt;                           &lt;td&gt;SetAgingCycleState&lt;/td&gt;                   &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;ExternalAgingCycle&lt;/td&gt;                   &lt;td&gt;SetAgingCycleCounterValue&lt;/td&gt;            &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;EnableCondition&lt;/td&gt;                      &lt;td&gt;SetEnableCondition&lt;/td&gt;                   &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;StorageCondition&lt;/td&gt;                     &lt;td&gt;SetStorageCondition&lt;/td&gt;                  &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;IndicatorStatus&lt;/td&gt;                      &lt;td&gt;GetIndicatorStatus&lt;/td&gt;                   &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;EvMemOverflowIndication&lt;/td&gt;              &lt;td&gt;GetEventMemoryOverflow&lt;/td&gt;               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;EvMemOverflowIndication&lt;/td&gt;              &lt;td&gt;GetNumberOfEventMemoryEntries&lt;/td&gt;        &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DTCSuppression&lt;/td&gt;                       &lt;td&gt;SetDTCSuppression&lt;/td&gt;                    &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemSuppressionSupport = &apos;DEM_DTC_SUPPRESSION&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;EventAvailable&lt;/td&gt;                       &lt;td&gt;SetEventAvailable&lt;/td&gt;                    &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemAvailabilitySupport = &apos;DEM_EVENT_AVAILABILITY&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;SetClearDTC&lt;/td&gt;                          &lt;td&gt;SetClearDTC&lt;/td&gt;                          &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation generated only if parameter DemOBDSupportKind = &apos;DEM_OBD_MASTER_ECU&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CddIf&lt;/td&gt;                                &lt;td&gt;ClearDTC&lt;/td&gt;                             &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;ClearDTC&lt;/td&gt;                             &lt;td&gt;ClearDTC&lt;/td&gt;                             &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;ClearDTC&lt;/td&gt;                             &lt;td&gt;SelectDTC&lt;/td&gt;                            &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;IUMPRNumerator&lt;/td&gt;                       &lt;td&gt;RepIUMPRFaultDetect&lt;/td&gt;                  &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Only Stub implementation.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;IUMPRDenominator&lt;/td&gt;                     &lt;td&gt;RepIUMPRDenLock&lt;/td&gt;                      &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Only Stub implementation.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;IUMPRDenominator&lt;/td&gt;                     &lt;td&gt;RepIUMPRDenRelease&lt;/td&gt;                   &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Only Stub implementation.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;PfcCycleQualified&lt;/td&gt;                    &lt;td&gt;SetPfcCycleQualified&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemOBDSupport = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;PfcCycleQualified&lt;/td&gt;                    &lt;td&gt;GetPfcCycleQualified&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemOBDSupport = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;ResetReadiness&lt;/td&gt;                       &lt;td&gt;ResetReadiness&lt;/td&gt;                       &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Non AUTOSAR. Generated if DemOBDSupport = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;PowerTakeOff&lt;/td&gt;                         &lt;td&gt;SetPtoStatus&lt;/td&gt;                         &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemOBDSupport = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackInitMonitorForEvent&lt;/td&gt;          &lt;td&gt;InitMonitorForEvent&lt;/td&gt;                  &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackInitMonitorForFunction&lt;/td&gt;       &lt;td&gt;InitMonitorForFunction&lt;/td&gt;               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Operation removed in autosar from AUTOSAR_42.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackEventStatusChange&lt;/td&gt;            &lt;td&gt;EventStatusChanged&lt;/td&gt;                   &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Selecting AUTOSAR_40, Prototype is AUTOSAR_40, otherwise AUTOSAR_42. Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackEventUdsStatusChanged&lt;/td&gt;        &lt;td&gt;CallbackEventUdsStatusChanged&lt;/td&gt;        &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralCallbackEventStatusChange&lt;/td&gt;     &lt;td&gt;EventStatusChanged&lt;/td&gt;                   &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Selecting AUTOSAR_40, Prototype is AUTOSAR_40, otherwise AUTOSAR_42. Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralCallbackEventUdsStatusChanged&lt;/td&gt; &lt;td&gt;GeneralCallbackEventUdsStatusChanged&lt;/td&gt; &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackDTCStatusChange&lt;/td&gt;              &lt;td&gt;DTCStatusChanged&lt;/td&gt;                     &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Selecting AUTOSAR R20-11, the generated R-Ports are provided according to AUTOSAR R20-11,&lt;br/&gt;the rest is provided according to AUTOSAR_40. Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;ClearDTCNotification&lt;/td&gt;                 &lt;td&gt;ClearDTCNotification&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Selecting AUTOSAR R20-11, the generated R-Ports are provided according to AUTOSAR R20-11.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackEventDataChanged&lt;/td&gt;             &lt;td&gt;EventDataChanged&lt;/td&gt;                     &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;No POSSIBLE-ERROR-REFS defined for versions &gt;= AUTOSAR_42. Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;GeneralCallbackEventDataChanged&lt;/td&gt;      &lt;td&gt;EventDataChanged&lt;/td&gt;                     &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;No POSSIBLE-ERROR-REFS defined for versions &gt;= AUTOSAR_42. Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackClearEventAllowed&lt;/td&gt;            &lt;td&gt;ClearEventAllowed&lt;/td&gt;                    &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CSDataServices_[SyncDataElement]&lt;/td&gt;     &lt;td&gt;ReadData&lt;/td&gt;                             &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                                             &lt;td&gt;Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;DataServices_[SyncDataElement]&lt;/td&gt;       &lt;td&gt;ReadData&lt;/td&gt;                             &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;CallbackGetFaultDetectCounter&lt;/td&gt;        &lt;td&gt;GetFaultDetectionCounter&lt;/td&gt;             &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Available only in the default service interface package.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;EventStatus&lt;/td&gt;                          &lt;td&gt;SetWIRStatus&lt;/td&gt;                         &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if parameter DemUserControlledWIRBitSupport = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;IUMPRDenominatorCondition&lt;/td&gt;            &lt;td&gt;SetIUMPRDenCondition&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if the OBDonUDS is supported (parameter DemObdVariant = DEM_OBD_VARIANT_OBDONUDS or parameter DemCalloutObdVariantFnc is configured.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;IUMPRDenominatorCondition&lt;/td&gt;            &lt;td&gt;GetIUMPRDenCondition&lt;/td&gt;                 &lt;td&gt;N&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Generated if the OBDonUDS is supported (parameter DemObdVariant = DEM_OBD_VARIANT_OBDONUDS or parameter DemCalloutObdVariantFnc is configured.&lt;/td&gt;&lt;/tr&gt;
                                &lt;tr&gt; &lt;td&gt;PerformanceCounters&lt;/td&gt;                  &lt;td&gt;ResetPerformanceCounters&lt;/td&gt;             &lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;                               &lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;&lt;td&gt;Y&lt;/td&gt;                                             &lt;td&gt;Non AUTOSAR. Generated if DemResetPerformanceCountersAPI = &apos;true&apos;.&lt;/td&gt;&lt;/tr&gt;
                               &lt;/table&gt;
                             &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Default AUTOSAR service API"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:aa906933-2cc0-11e2-81c1-0800200c9a66"/>
                    <a:da name="DEFAULT" value="AUTOSAR_40"/>
                    <a:da name="RANGE">
                      <a:v>AUTOSAR_40</a:v>
                      <a:v>AUTOSAR_42</a:v>
                      <a:v>AUTOSAR_43</a:v>
                      <a:v>AUTOSAR_2011</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemBSWDistribution" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                              &lt;p&gt;This container contains the configuration parameters controlling BSW distribution of the Dem module on multi-core platforms.&lt;/p&gt;
                              &lt;p&gt;The configuration container is editable only if &lt;a href=&quot;path:../../../../../Os/ELEMENTS/Os/OsOS/OsNumberOfCores&quot;&gt;OsNumberOfCores&lt;/a&gt; exists and is greater than 1.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;BSW Distribution Support&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  &lt;a href=&quot;path:../../../../../Os/ELEMENTS/Os/OsOS/OsNumberOfCores&quot;&gt;OsNumberOfCores&lt;/a&gt;: must be greater than 1.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="BSW Distribution"/>
                  <a:a name="UUID" value="1a4bd648-af7d-11e8-96f8-529269fb1459"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and (as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores &gt; 1)"/>
                  <a:da name="TITLE" value="BSW Distribution Support"/>
                  <v:var name="DemDistributedBSWEventReporting" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether support for
                            distributed BSW event reporting via &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt; from multiple cores is enabled or not.&lt;/p&gt;
                          &lt;p&gt;The Dem satellite instances will only collect the reports from their related cores and send these reports to the Dem master instance, which executes the actual event processing.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;TRUE: &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt; can be used from BSW modules that are integrated on cores with a Dem satellite instance. All other Dem APIs must only be called from modules of the Dem master instance core.&lt;/li&gt;
                            &lt;li&gt;FALSE: Any Dem API must only be called from modules of the core on which the Dem module is integrated.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Distributed BSW Event Reporting"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="1a4bd8e6-af7d-11e8-96f8-529269fb1459"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:xpath 
                                false="The Dem BSW distribution functionality is available for BSW events only." 
                                expr="(count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventKind = &apos;DEM_EVENT_KIND_BSW&apos;]) &gt; 0)"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemMasterCoreId" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the OsCoreID associated with the &lt;em&gt;Dem master/main instance.&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;On multi-core platforms with DemDistributedBSWEventReporting disabled there will only be the Dem master instance which must be integrated to the core which also integrates all other modules reporting BSW errors to the Dem.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Dem Master Core ID&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemDistributedBSWEventReporting&quot;&gt;DemDistributedBSWEventReporting&lt;/a&gt;: must be enabled and set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem Master Core ID"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="1a4bda3a-af7d-11e8-96f8-529269fb1459"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:existsAndTrue(../DemDistributedBSWEventReporting)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:xpath 
                                false="The Dem master instance core ID must be in the range of [0..(OsNumberOfCores - 1)]." 
                                expr="(. &gt;= 0) and (. &lt; as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores)"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemSRQueueLengthDistributedBSWEventReporting" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This parameter defines the Sender / Receiver queue length
                            for BSW event reports received on the Dem master instance core.
                            This queue is necessary in case multiple reports are triggered from the Dem satellite instances in order to buffer those on the Dem master instance and process them sequentially.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem SR Queue Length for BSW event reporting&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;a href=&quot;path:../DemDistributedBSWEventReporting&quot;&gt;DemDistributedBSWEventReporting&lt;/a&gt;: must be enabled and set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem SR Queue Length for BSW event reporting"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="1a4bdb7a-af7d-11e8-96f8-529269fb1459"/>
                    <a:da name="DEFAULT" value="20"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../DemDistributedBSWEventReporting))"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=65535"/>
                        <mt:tst expr="&gt;=1"/>
                      </mt:range>
                      <mt:xpath 
                                true="The DemSRQueueLengthDistributedBSWEventReporting must not be smaller than the sum of all DemSatelliteInstanceLocalBswEventBufferSize" 
                                expr="sum(../DemSatelliteInstanceConfig/eb-list::*/DemSatelliteInstanceLocalBswEventBufferSize) &gt; ."/>
                    </a:da>
                  </v:var>
                  <v:lst name="DemSatelliteInstanceConfig" type="MAP">
                    <a:a name="COLUMNS" value="DemSatelliteInstanceConfig"/>
                    <a:a name="LABEL" value="Dem Satellite Instance Config List"/>
                    <a:a name="ROWS" value="3"/>
                    <a:a name="TAB" value="BSW Distribution"/>
                    <a:da name="EDITABLE" type="XPath" 
                          expr="(node:existsAndTrue(../DemDistributedBSWEventReporting))"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="( count(eb-list::*) != (as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores - 1) ) and         (node:existsAndTrue(../DemDistributedBSWEventReporting))" 
                          true="There shall be (OsNumberOfCores - 1) Dem satellite core entries."/>
                    <v:ctr name="DemSatelliteInstanceConfig" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This container defines the Dem satellite cores and their specific data related to the pre-initialization phase of the Dem module.&lt;/p&gt;
                            &lt;p&gt;Each Os core (which is not selected as Dem master instance) shall configure a Dem satellite instance.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="1a4be08e-af7d-11e8-96f8-529269fb1459"/>
                      <a:da name="TITLE" value="Dem Satellite Instance Config"/>
                      <v:var name="DemSatelliteCoreId" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines the OsCoreID associated with the related Dem satellite instance.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Satellite Core Id&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  &lt;a href=&quot;path:../../../DemDistributedBSWEventReporting&quot;&gt;DemDistributedBSWEventReporting&lt;/a&gt;: must be enabled and set to &lt;code&gt;true&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Satellite Core Id"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="fea0c23a-bcbc-11e8-a355-529269fb1459"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(node:existsAndTrue(../../../DemDistributedBSWEventReporting))"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath>
                            <mt:tst 
                                    true="The Dem satellite instance core Id must not be equal to the  DemMasterCoreId." 
                                    expr=". = ../../../DemMasterCoreId"/>
                            <mt:tst 
                                    false="The Dem satellite instance core Id must be unique." 
                                    expr="text:uniq(../../eb-list::*/DemSatelliteCoreId, .)"/>
                            <mt:tst 
                                    false="The Dem satellite instance core Id must be in the range of [0..(OsNumberOfCores - 1)]." 
                                    expr="(. &gt;= 0) and (. &lt; as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DemSatelliteInstanceLocalBswEventBufferSize" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Maximum number of local event-queue for handling of BSW event reports for the dedicated Dem satellite instance.&lt;/p&gt;
                              &lt;p&gt;This local buffer on a Dem satellite instance is used for the multi-core functionality, to store Dem BSW events reported when the Dem
                                  is not yet fully initialized, i.e. pre-initialized.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Local BSW Event Queue Size&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  &lt;a href=&quot;path:../../../DemDistributedBSWEventReporting&quot;&gt;DemDistributedBSWEventReporting&lt;/a&gt;: must be enabled and set to &lt;code&gt;true&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Local BSW Event Queue Size"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="fea0c64a-bcbc-11e8-a355-529269fb1459"/>
                        <a:da name="DEFAULT" value="10"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(node:existsAndTrue(../../../DemDistributedBSWEventReporting))"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:lst>
                </v:ctr>
                <v:var name="DemAgingCycleCounterProcessing" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        
                        &lt;p&gt;This configuration switch defines,
                        whether the aging counter is calculated
                        Dem-internally or provided via
                        &lt;code&gt;Dem_SetAgingCycleCounterValue&lt;/code&gt;.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_PROCESS_AGINGCTR_EXTERN&lt;/code&gt;(not supported): based on API &lt;code&gt;Dem_SetAgingCycleCounterValue&lt;/code&gt;.
                          Not supported, because the corresponding feature was removed from AUTOSAR R4.2.2.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_PROCESS_AGINGCTR_INTERN&lt;/code&gt;: based on reported cycle states.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Aging Cycle Counter Processing "/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="98c56bda-f75a-4286-a580-a3d94daec564"/>
                  <a:da name="DEFAULT" value="DEM_PROCESS_AGINGCTR_INTERN"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:value(.) = &apos;DEM_PROCESS_AGINGCTR_EXTERN&apos;)" 
                        true="Aging counter provided via DEM_PROCESS_AGINGCTR_EXTERN is not supported by current implementation."/>
                  <a:da name="RANGE">
                    <a:v>DEM_PROCESS_AGINGCTR_EXTERN</a:v>
                    <a:v>DEM_PROCESS_AGINGCTR_INTERN</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemAgingRequiresTestedCycleSetOperationCycleState" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether the aging cycle counter
                           is processed for every call of aging cycle using the Dem_SetOperationCycleState()/Dem_RestartOperationCycle() API
                           or if only tested aging cycle are considered.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : The aging counter shall be updated only if the TNCTOC and TFTOC bits are cleared.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; : The aging counter shall be updated only if TFTOC and TF bits are not set.&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;Note: This configuration parameter is derived from the AUTOSAR parameter DemAgingRequieresTestedCycle.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Aging Requires Tested Cycle For Dem_SetOperationCycleState&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DemAgingAllowed&lt;/code&gt;: Aging is allowed for at least one event.&lt;/li&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: must not be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;: must not be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Aging Requires Tested Cycle For Dem_SetOperationCycleState"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="57a950e2-7638-4882-a826-91aa2f7e25f5"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:existsAndTrue(DemEventClass/DemAgingAllowed)]) &gt; 0 and                               as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos; and                               as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:existsAndFalse(.) and (node:existsAndFalse(../DemStatusBitStorageTestFailed))" 
                        true="If DemAgingRequiresTestedCycleSetOperationCycleState and DemStatusBitStorageTestFailed are disabled,                             the aging will start with the first of Dem_SetOperationCycleState() after the ECU reset, even though event                             was not reported as passed."/>
                </v:var>
                <v:var name="DemAgingRequiresTestedCycleSetAgingCycleState" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether the aging cycle counter
                           is processed for every call of aging cycle using the Dem_SetAgingCycleState() API
                           or if only tested aging cycle are considered.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : The aging counter shall be updated only if the TNCTOC and TFTOC bits are cleared.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; : The aging counter shall be updated only if TF bit is not set.&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;Note: This configuration parameter is derived from the AUTOSAR parameter DemAgingRequieresTestedCycle.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Aging Requires Tested Cycle For Dem_SetAgingCycleState&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DemAgingAllowed&lt;/code&gt;: Aging is allowed for at least one event.&lt;/li&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: must not be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;: must not be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Aging Requires Tested Cycle For Dem_SetAgingCycleState"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="83846f05-a174-48b5-b9df-23a932a760ee"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:existsAndTrue(DemEventClass/DemAgingAllowed)]) &gt; 0 and                               as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos; and                               as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:existsAndFalse(.) and (node:existsAndFalse(../DemStatusBitStorageTestFailed))" 
                        true="If DemAgingRequiresTestedCycleSetAgingCycleState and DemStatusBitStorageTestFailed are disabled,                             the aging will start with the first of Dem_SetAgingCycleState() after the ECU reset, even though event                             was not reported as passed."/>
                </v:var>
                <v:var name="DemAgingBasedOnHealingCompletionSupport" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      
                      &lt;p&gt;If enabled, aging processing shall not be started before healing is completed, in accordance with AUTOSAR R4.2.2.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; = The aging counter shall be updated only after healing is completed (R4.2.2).&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; = The aging counter shall be updated in parallel with healing (R4.0.3).&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;p&gt;&lt;em&gt;Feature enabled:&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;The aging counter initialization will not be impacted by this feature. The aging process will be delayed with the
                        time necessary for the Warning Indicator Requested healing.&lt;/p&gt;
                        &lt;p&gt;If an event refers to an &lt;a href=&quot;path:../DemExtendedDataClass&quot;&gt;Extended Data Class&lt;/a&gt; which is made of &lt;a href=&quot;path:../DemDataElementClass&quot;&gt;Data Element Class&lt;/a&gt; of type &lt;code&gt;DemInternalDataElementClass&lt;/code&gt; having assigned &lt;code&gt;DEM_AGINGCTR&lt;/code&gt;, the value won&apos;t start changing unless the WIR bit is healed.&lt;/p&gt;
                      &lt;p&gt;&lt;em&gt;Feature disabled:&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;The effect of the enabled feature is also achievable by extending the &lt;code&gt;Aging Cycle Counter Threshold&lt;/code&gt; of an event with its &lt;code&gt;Indicator Healing Cycle Counter Threshold&lt;/code&gt;. Take into account that &lt;code&gt;DEM_AGINGCTR&lt;/code&gt; will report a maximum value of 255, which can be different than 0 even if the WIR bit is not healed.&lt;/p&gt;
                      &lt;p&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;Aging based on healing completed is not allowed when &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt; and/or &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt; are set to DEM_TRIGGER_ON_FDC_THRESHOLD.&lt;/p&gt;
                      &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                      To enable support for &lt;em&gt;Aging Based on Healing Completed Support&lt;/em&gt;,&lt;/p&gt;
                      &lt;ul&gt;
                        &lt;li&gt;
                          &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: must not be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;: must not be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.
                        &lt;/li&gt;
                      &lt;/ul&gt;
                      &lt;p&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;Explicit configuration of &apos;Aging based on healing completed&apos; is not allowed when &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt; and/or &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt; are set to DEM_TRIGGER_ON_FDC_THRESHOLD.&lt;/p&gt;
                        &lt;p&gt;In this case, the behavior is hard-coded as follows&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;Non-OBD events age using OCC2, which is counted independent of the healing.&lt;/li&gt;
                          &lt;li&gt;OBD events age using also the OCC5, which is counted only when healing is complete.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Aging Based on Healing Completed Support "/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:d8219a72-cea7-41bc-869b-ea11129cf312"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and (../DemFreezeFrameCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)"/>
                </v:var>
                <v:var name="DemBswErrorBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Maximum number of elements in internal error-queue for
                        handling of BSW event reports.&lt;/p&gt;

                        &lt;p&gt;&lt;em&gt;Additional extensions of this version:&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;After Dem is initialized (&lt;code&gt;Dem_Init&lt;/code&gt;),
                        this queue is also used to hold SW-C event reports
                        to be entered into the event memory by the Dem main function.&lt;/p&gt;
                        &lt;p&gt;After Dem is shut down (&lt;code&gt;Dem_Shutdown&lt;/code&gt;),
                        this queue is still used to hold BSW event reports
                        to be processed by the Dem main function.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Error-Queue Buffer Size"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4842ed41-2993-49b6-a83f-2ed66a61c0d1"/>
                  <a:da name="DEFAULT" value="10"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxHandledPassedEventsPerScheduling" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        The maximum number of passed events in the error-queue processed per Dem_MainFunction call.
                        If this maximum is reached the Dem_MainFunction suspends the handling of the error-queue
                        and continues in the next call.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Schedule passed events max"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b1feccfc-938c-47eb-85eb-86547783e72a"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:value(.) &lt; node:value(../DemBswErrorBufferSize))" 
                        false="Suboptimal configuration: If (DemMaxHandledPassedEventsPerScheduling &gt;= DemBswErrorBufferSize) event burst reduction for passed events is without effect."/>
                </v:var>
                <v:var name="DemMaxHandledFailedEventsPerScheduling" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        The maximum number of failed/unconfirmed events in the error-queue processed per Dem_MainFunction call.
                        If this maximum is reached the Dem_MainFunction suspends the handling of the error-queue
                        and continues in the next call.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Schedule failed events max"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="cae20a55-2c6e-421e-a7da-bf745b378911"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:value(.) &lt; node:value(../DemBswErrorBufferSize))" 
                        false="Suboptimal configuration: If (DemMaxHandledFailedEventsPerScheduling &gt;= DemBswErrorBufferSize) event burst reduction for failed/unconfirmed events is without effect."/>
                </v:var>
                <v:var name="DemCallbackEventDataChangedASR403Behaviour" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether the &quot;EventDataChanged&quot;
                           callback triggering behavior will be done according to ASR4.0.3 or not.
                           Enables AUTOSAR 4.0.3 usage functionality.&lt;/p&gt;
                        &lt;p&gt;Note: This configuration switch has default value set to &quot;true&quot;, which will ensure backward
                           compatibility and trigger the callback according to ASR4.0.3.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: EventDataChanged callback will be triggered according to ASR4.0.3.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: EventDataChanged callback will be triggered according to ASR4.2.1. According to
                          ASR4.2.1 the number of triggering point for the callback are less than ASR4.0.3 (EB interpretation)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;EventDataChanged Callback Enable AUTOSAR 4.0.3 Behavior&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;code&gt;DemCallbackEventDataChanged&lt;/code&gt;: At least one event is configured with &quot;EventDataChanged&quot; callback.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="EventDataChanged Callback Enable AUTOSAR 4.0.3 Behavior"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9d5cd90c-6554-11e7-907b-a6006ad3dba0"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*[num:i(node:exists(DemCallbackEventDataChanged)) &gt; 0]) &gt; 0)"/>
                </v:var>
                <v:var name="DemCallbackEventStatusChangedOpCycStartSupport" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether the
                          &quot;EventStatusChanged/DTCStatusChanged&quot; callbacks are invoked
                          when the event&apos;s operation cycle is (re)started.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : The &lt;code&gt;Dem_SetOperationCycleState()&lt;/code&gt; with state &lt;code&gt;DEM_CYCLE_STATE_START&lt;/code&gt;
                            will trigger the status changed callbacks.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; : The &lt;code&gt;Dem_SetOperationCycleState()&lt;/code&gt; with state &lt;code&gt;DEM_CYCLE_STATE_START&lt;/code&gt;
                            will not trigger the status changed callbacks. This option offers the user the possibility to delete
                            the trigger point for &quot;EventStatusChanged/DTCStatusChanged&quot; callbacks reducing so
                            the execution time. Such an option is of interest, for projects where the application does not need to
                            know the evolution of the DTC status for events assigned to the power cycle.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Event Status Changed Callbacks for Start of the Operation Cycle Support&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemTriggerFiMReports&quot;&gt;DemTriggerFiMReports&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemTriggerDcmReports&quot;&gt;DemTriggerDcmReports&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCallbackDTCStatusChanged&quot;&gt;DemCallbackDTCStatusChanged&lt;/a&gt;: at least one &quot;DTCStatusChanged&quot;
                            callback is configured.
                          &lt;/li&gt;
                          &lt;li&gt;
                            &lt;code&gt;DemCallbackEventDataChanged&lt;/code&gt;: at least one event is configured with &quot;EventDataChanged&quot; callback.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Event Status Changed Callbacks for Start of the Operation Cycle Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ff1fae18-c903-4cdd-9fbd-607d1d3bc4fb"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemTriggerFiMReports)) or                               (node:existsAndTrue(../DemTriggerDcmReports)) or                               (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCallbackDTCStatusChanged/eb-list::*) &gt; 0) or                               (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemCallbackEventStatusChanged/eb-list::*) &gt; 0)"/>
                </v:var>
                <v:var name="DemCalloutDynamicDTCFnc" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;If this parameter is configured, the Dem gets the UDS DTC value from
                        the configured callout function dynamically instead of using the
                        configured UDS DTC value.&lt;/p&gt;
                        &lt;p&gt;The function must have a prototype compatible to:&lt;/p&gt;
                        &lt;p&gt;&lt;code&gt;extern uint32 Appl_GetDynamicDTC(Dem_EventIdType EventId, uint32 DTC);&lt;/code&gt;&lt;/p&gt;
                        &lt;p&gt;which is declared in &lt;code&gt;Dem_Cfg.h&lt;/code&gt;.&lt;/p&gt;
                        &lt;p&gt;The returned DTC value
                        &lt;ul&gt;
                          &lt;li&gt;shall not be equal to 0x000000&lt;/li&gt;
                          &lt;li&gt;shall be in the same group as the original DTC value&lt;/li&gt;
                          &lt;li&gt;shall be unique&lt;/li&gt;
                        &lt;/ul&gt;&lt;/p&gt;
                        &lt;p&gt;See also chapter &quot;Dem integration issues&quot; in the Diagnostic Stack user&apos;s guide.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="&apos;Get Dynamic DTC value&apos; Callout C-Function"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="Appl_GetDynamicDTC"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                        false="Invalid name. (no prefixed C function name)"/>
                </v:var>
                <v:var name="DemClearDTCBehavior" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the clearing process of diagnostic information for volatile
                        and non-volatile memory and the positive response handling for the Dcm
                        module.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_CLRRESP_NONVOLATILE_FINISH&lt;/code&gt;: Return DEM_CLEAR_OK after
                              volatile and non-volatile event memory data cleared.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_CLRRESP_NONVOLATILE_TRIGGER&lt;/code&gt;: Return DEM_CLEAR_OK after
                              volatile event memory data cleared and non-volatile event
                              memory clearing is triggered.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_CLRRESP_VOLATILE&lt;/code&gt;: Return DEM_CLEAR_OK after volatile event
                              memory data cleared.&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;If any of the NONVOLATILE behaviors is selected, the event memory is switched from
                        one large NvM block to a dataset (refer to &lt;a href=&quot;path:../DemNvRamBlockId&quot;&gt;DemNvRamBlockId&lt;/a&gt;)
                        being able to store each event entry separately.&lt;/p&gt;
                        &lt;p&gt;If DemClearDTCBehavior is set to DEM_CLRRESP_NONVOLATILE_FINISH no monitor is allowed to
                        trigger a write operation of an NvM block with a higher priority than the priorities of the
                        Dem NvM blocks, if this write operation could lead to a conflict with status data of not
                        finally deleted DTC.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Clear DTC Behavior"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="60d5c158-e52a-4f85-9a0f-755148d8a12c"/>
                  <a:da name="DEFAULT" value="DEM_CLRRESP_VOLATILE"/>
                  <a:da name="RANGE">
                    <a:v>DEM_CLRRESP_NONVOLATILE_FINISH</a:v>
                    <a:v>DEM_CLRRESP_NONVOLATILE_TRIGGER</a:v>
                    <a:v>DEM_CLRRESP_VOLATILE</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberClearEventsPerCycle" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the maximum number of events which are processed
                        per Dem_MainFunction() cycle on a ClearDTC request. It affects all ClearDTC
                        interfaces.&lt;/p&gt;
                        &lt;p&gt;A large value for &lt;code&gt;DemMaxNumberClearEventsPerCycle&lt;/code&gt; will lead to
                        an increased run time for Dem_MainFunction() while processing the ClearDTC request.&lt;br/&gt;
                        Very small &lt;code&gt;DemMaxNumberClearEventsPerCycle&lt;/code&gt; values may noticeable
                        increase the total execution time of a ClearDTC request.&lt;/p&gt;
                        &lt;p&gt;By configuring this parameter equal to the number of events of the largest event
                        combination, it is ensured that all events of a combination will be cleared consistently
                        in a single Dem_MainFunction() cycle.&lt;/p&gt;&lt;br/&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum number of cleared events per cycle"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b8006165-0611-480e-9e79-59ced8e10d0d"/>
                  <a:da name="DEFAULT" value="5"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=1023"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemSuppressionSupport" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether support for dynamic DTC suppression
                        is enabled or not.&lt;/p&gt;
                        &lt;p&gt;A suppressed DTC is not visible by the tester but can be processed continuously
                        by the diagnostic monitor.&lt;/p&gt;
                        &lt;p&gt;Range
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DEM_NO_SUPPRESSION&lt;/code&gt;:  DTC suppression is not supported.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_DTC_SUPPRESSION&lt;/code&gt;: DTC suppression is supported.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;If enabled, Dem_SetDTCSuppression() can be used to dynamically change the DTC
                        suppression status at run-time. The DTC suppression status is stored volatile, that
                        is, the desired status needs to be set again within each power cycle.&lt;/p&gt;

                        &lt;p&gt;A DTC cannot be suppressed if event data for the related event or combined events exist.
                        This condition is only checked for DTCs which are not already suppressed.&lt;/p&gt;

                        &lt;p&gt;A DTC can be suppressed even if the DTC record update was disabled via
                        Dem_DisableDTCRecordUpdate. The DTC record protection is not implicitly released
                        if a DTC is being suppressed.&lt;/p&gt;

                        &lt;p&gt;A suppressed DTC is not visible for Dem_ClearDTC() and therefore cannot be deleted.
                        There is one exception: if &lt;a href=&quot;path:../DemClearDTCOfDisabledEvents&quot;&gt;
                        DemClearDTCOfDisabledEvents&lt;/a&gt; is enabled, a ClearDTC() request for
                        &lt;code&gt;DEM_DTC_GROUP_ALL_DTCS&lt;/code&gt; also deletes events which are mapped to
                        suppressed DTCs.&lt;/p&gt;

                        &lt;p&gt;Note: Dem_GetDTCOfEvent() returns the DTC value that is mapped to an event Id
                        by DTC configuration or the re-calibrated/dynamically changed DTC value respecively
                        (see &lt;a href=&quot;path:../DemCalloutDynamicDTCFnc&quot;&gt;DemCalloutDynamicDTCFnc&lt;/a&gt;).
                        The DTC value is returned regardless of its current suppression status.&lt;/p&gt;
                        &lt;p&gt;Note: The DTC suppression status is associated with the related event, not with
                        the DTC value. If the DTC value is changed via calibration or side allocation callout
                        function, the suppression status of the DTC is not impacted i.e. if the original DTC
                        was suppressed, the changed DTC is suppressed as well.&lt;/p&gt;

                        &lt;p&gt;Note: If the OBD DTC which is mapped to an event is suppressed, the confirmation of the
                        related event does not activate the MIL and accordingly the WIR bit is not set.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="DTC Suppression Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ecbffd95-496c-47c5-9954-3d5fb834db74"/>
                  <a:da name="DEFAULT" value="DEM_NO_SUPPRESSION"/>
                  <a:da name="RANGE">
                    <a:v>DEM_NO_SUPPRESSION</a:v>
                    <a:v>DEM_DTC_SUPPRESSION</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemAvailabilitySupport" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether support for dynamic availability
                        of events is enabled or not.&lt;/p&gt;
                        &lt;p&gt;Range
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DEM_NO_AVAILABILITY&lt;/code&gt;: Dynamic event availability is not
                            supported.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_EVENT_AVAILABILITY&lt;/code&gt;: Dynamic event availability is
                            supported.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;If enabled, the value of &lt;code&gt;DemEventAvailable&lt;/code&gt; is used as initial
                        value for event availability and may be changed dynamically via
                        &lt;code&gt;Dem_SetEventAvailable()&lt;/code&gt;.&lt;/p&gt;

                        &lt;p&gt;The event available status is stored volatile, that is, the desired status needs
                        to be set again within each power cycle.&lt;/p&gt;

                        &lt;p&gt;If an event is set to unavailable, the corresponding event is treated
                        as if it is not configured in the system.&lt;/p&gt;

                        &lt;p&gt;An event can only be set to unavailable if no event data for the event exists
                        and none of the &apos;TF&apos;, &apos;PDTC&apos;, &apos;CDTC&apos; or &apos;WIR&apos; event status flags is set.&lt;/p&gt;

                        &lt;p&gt;Note: If &lt;code&gt;DemAvailabilitySupport&lt;/code&gt; is enabled, &lt;code&gt;DemEventAvailable&lt;/code&gt;
                        can still be changed via calibration. However, in this case, the calibrated value takes
                        effect not before next power cycle.&lt;/p&gt;

                        &lt;p&gt;Note: When Monitor Activity Ratio (MAR) feature is enabled and a MAR event is set
                        to unavailable, the MAR data is not reported, but the corresponding numerator and
                        ratio are internally maintained as if the event was tested in every DCY. If such an
                        event is set to available again, those internal values are used for future tracking
                        and reporting.
                        In case of combined DTCs, unavailable events are not considered for the calculation
                        of the DTC&apos;s numerator and ratio.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event Availability Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ca51b2a6-04c9-11e8-ba89-0ed5f89f718b"/>
                  <a:da name="DEFAULT" value="DEM_NO_AVAILABILITY"/>
                  <a:da name="RANGE">
                    <a:v>DEM_NO_AVAILABILITY</a:v>
                    <a:v>DEM_EVENT_AVAILABILITY</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemDebounceCounterBasedSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This configuration switch defines whether support for counter-based
                        debouncing is enabled or not.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: counter-based debouncing support is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: counter-based debouncing support is disabled
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Debounce Counter Based Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="6df0d42e-6f33-49d8-9683-35ae97dead66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DemDebounceTimeBasedSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This configuration switch defines whether support for time-based
                        debouncing is enabled or not.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: time-based debouncing support is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: time-based debouncing support is disabled&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Debounce Time Based Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b345b5b9-8c90-4b20-9f6f-8db98e53de68"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DemDebounceFrequencyBasedSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This configuration switch defines whether support for frequency based
                        debouncing is enabled or not.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: frequency based debouncing support is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: frequency based debouncing support is disabled&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Debounce Frequency Based Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b345b5b9-8c90-4b20-9f6f-8db98e53de68"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DemMaxNumberDebCounterClasses" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;Specifies how many instances of the class DemDebounceCounterBased should be allocated at least.&lt;/p&gt;
                        &lt;p&gt;If less events are configured with DemDebounceCounterBased than this value,
                          this value specifies the number of available DemDebounceCounterBasedClasses.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Number of Debounce Counter Based Classes&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemDebounceCounterBasedSupport&quot;&gt;DemDebounceCounterBasedSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt;: At least one event must have its &lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt;
                              configured as &lt;code&gt;DemDebounceCounterBased&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Number of Debounce Counter Based Classes"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="03895ccd-8563-452d-9f7b-cf321d395d53"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceCounterBasedSupport)) and                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               (node:exists(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemDebounceAlgorithmClass = &apos;DemDebounceCounterBased&apos;]))"/>
                  <a:da name="INVALID" type="Range" expr="&lt;=65535"/>
                </v:var>
                <v:var name="DemMaxNumberDebTimeClasses" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;Specifies how many instances of the class DemDebounceTimeBased should be allocated at least.&lt;/p&gt;
                        &lt;p&gt;If less events are configured with DemDebounceTimeBased than this value,
                          this value specifies the number of available DemDebounceTimeBasedClasses.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Number of Debounce Time Based Classes&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemDebounceTimeBasedSupport&quot;&gt;DemDebounceTimeBasedSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt;: At least one event must have its &lt;code&gt;DemDebounceAlgorithmClass&lt;/code&gt;
                              configured as &lt;code&gt;DemDebounceTimeBase&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Number of Debounce Time Based Classes"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="7ec035e4-0427-4e72-8239-e315cb898bfd"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDebounceTimeBasedSupport)) and                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               (node:exists(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemDebounceAlgorithmClass = &apos;DemDebounceTimeBase&apos;]))"/>
                  <a:da name="INVALID" type="Range" expr="&lt;=65535"/>
                </v:var>
                <v:var name="DemDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Activate/Deactivate the Development Error Detection and Notification.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Development Error Detection and Notification
                          activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Development Error Detection and Notification
                          deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Development Error Detection"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e6597050-e259-4e0b-a4de-4353b9581cb6"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:existsAndTrue(.) and count(as:modconf(&apos;Det&apos;)/eb-list::*) = 0" 
                        true="The development error detection is enabled, but the DET is disabled or missed."/>
                </v:var>
                <v:var name="DemDetRuntimeChecks" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Activate/Deactivate the Runtime Error Check and Notification.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Runtime Error Check and Notification
                          is activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Runtime Error Check and Notification
                          is deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Runtime Error Checks"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:existsAndTrue(.) and count(as:modconf(&apos;Det&apos;)/eb-list::*) = 0" 
                        true="The runtime error check is enabled, but the DET is disabled or missed."/>
                </v:var>
                <v:var name="DemRteUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter enables the
                        usage of the RTE for this module.&lt;/p&gt;

                        &lt;p&gt;For an easy integration it is recommended
                        to disable the usage of the RTE at
                        the beginning of the integration work.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Rte Usage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f8a92bf0-67b9-11dd-ad8b-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:existsAndTrue(.) and count(as:modconf(&apos;Rte&apos;)/eb-list::*) = 0" 
                        true="The usage of the RTE is enabled for the DEM, but the RTE is disabled or missing."/>
                </v:var>
                <v:var name="DemDcmUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;This parameter enables the usage of the Dcm. In case this parameter is
                      set to &lt;code&gt;false&lt;/code&gt;:
                        &lt;ul&gt;
                          &lt;li&gt;Dem does not provide the API functions &lt;code&gt;Dem_DcmGetInfoTypeValue08()&lt;/code&gt;
                              &lt;code&gt;Dem_DcmGetInfoTypeValue0B()&lt;/code&gt; and &lt;code&gt;Dem_DcmGetInfoTypeValue79()&lt;/code&gt;&lt;/li&gt;
                          &lt;li&gt;Dem does not include Dcm_Types.h&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Dcm Usage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="node:existsAndFalse(.) and count(as:modconf(&apos;Dcm&apos;)/eb-list::*) &gt; 0" 
                        true="Dcm dependency is not enabled, the Dcm module must not be part of the project."/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="node:existsAndTrue(.) and count(as:modconf(&apos;Dcm&apos;)/eb-list::*) = 0" 
                           true="Dcm dependency is enabled, the Dcm module should be part of the project."/>
                    <a:tst 
                           expr="(node:existsAndFalse(.)) and                                  (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                  ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) or                                    (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)  =&apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                  (count(util:distinct(node:refs(util:distinct(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) &gt; 0)" 
                           true="Monitor Activity Ratio feature is enabled: DCM usage should be enabled so that API Dem_DcmGetInfoTypeValue79() is available."/>
                  </a:da>
                </v:var>
                <v:var name="DemGetDTCByOccurrenceTimeSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Configuration switch defining whether support for retrieving stored DTCs
                        according to the relevant occurrence time, specified as an input parameter
                        for the API Dem_GetDTCByOccurrenceTime() via service 0x19, exists or not.
                        This functionality applies to event IDs which belong to the primary memory
                        while the event is qualified as FAILED for a number of times necessary
                        to set the TF and CDTC status bits.
                        &lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: &lt;code&gt;Dem_GetDTCByOccurrenceTime()&lt;/code&gt; exists and will
                          return the DTC value in UDS format identified by the type of the occurrence
                          time request.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: &lt;code&gt;Dem_GetDTCByOccurrenceTime()&lt;/code&gt;
                          does not exist. All functionality related to this API (e.g. the prototype,
                          the definition of the function) are removed at pre-compile time. &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Implement Dem_GetDTCByOccurrenceTime()"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.)) and                                  (node:existsAndFalse(../DemCalibrationSupport)) or not(node:exists(../DemCalibrationSupport)) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;) and                                  (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemUdsDTC))]) = 0)" 
                        true="Suboptimal configuration: No Unique Diagnostic Trouble Code value for UDS is configured.                             Check if at least one DTC class exits with event destination origin assigned in primary memory."/>
                </v:var>
                <v:var name="DemDtcStatusAvailabilityMask" type="INTEGER">
                  <a:a name="DEFAULT_RADIX" value="HEX"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Mask for the supported DTC status bits by the Dem. This mask is used by
                        UDS service 0x19.&lt;/p&gt;
                        &lt;p&gt;This mask is adapted on UDS DTC Status and Event Status reports from the DEM,
                        Not supported bits are reported as 0&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Status Availability Mask"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="3dcf3b25-da25-4a40-9d57-f260c7cd7cf8"/>
                  <a:da name="DEFAULT" value="255"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="DemEnableConditionSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This configuration switch defines whether support for enable conditions
                        is enabled or not.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: support for enable conditions is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: support for enable conditions is disabled&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Condition Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e1b6f667-badd-4ff3-881d-d47553346c8c"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DemEventCombinationSupport" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the type of event combination supported by the
                        Dem. Events can be combined by refering the same DTC in DemDTCClassRef.&lt;/p&gt;
                        &lt;p&gt;NOTE: If Event Combination is enabled, the following features are not supported:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;Prestorage of freeze frames&lt;/li&gt;
                          &lt;li&gt;Development freeze frames&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;NOTE: If Event Combination is enabled the calibration schema differs.
                          For details see &lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;.
                        &lt;/p&gt;
                        &lt;p&gt;NOTE: If &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; is set
                          to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or if
                          &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; is
                          enabled (regardless of which OBD variant is selected), the combined DTC status of
                          an event combination is calculated according to SAE J1979-2.
                        &lt;/p&gt;
                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;: Event combination not used.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_EVCOMB_TYPE1&lt;/code&gt;: The combined DTC is stored and updated in a single event memory entry.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_EVCOMB_TYPE2&lt;/code&gt; (not supported): Each event is stored in a separate event memory location.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Event Combination Support&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: cannot be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;: cannot be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;: cannot be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event Combination Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c167e850-1da8-403b-ac4a-d29b6d13c7f1"/>
                  <a:da name="DEFAULT" value="DEM_EVCOMB_DISABLED"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="(. = &apos;DEM_EVCOMB_TYPE2&apos;)" 
                           true="Currently only DEM_EVCOMB_TYPE1 is supported for event combination feature."/>
                    <a:tst 
                           expr="(. = &apos;DEM_EVCOMB_TYPE1&apos;) and (../DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)" 
                           true="DemExtendedDataCapture can not be set to DEM_TRIGGER_ON_FDC_THRESHOLD when event combination feature is desired."/>
                    <a:tst 
                           expr="(. = &apos;DEM_EVCOMB_TYPE1&apos;) and (../DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)" 
                           true="DemFreezeFrameCapture can not be set to DEM_TRIGGER_ON_FDC_THRESHOLD when event combination feature is desired."/>
                    <a:tst 
                           expr="(. = &apos;DEM_EVCOMB_TYPE1&apos;) and (node:existsAndTrue(../DemDevFreezeFrameSupport))" 
                           true="DemDevFreezeFrameSupport can not be enabled when event combination feature is desired."/>
                  </a:da>
                  <a:da name="RANGE">
                    <a:v>DEM_EVCOMB_DISABLED</a:v>
                    <a:v>DEM_EVCOMB_TYPE1</a:v>
                    <a:v>DEM_EVCOMB_TYPE2</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemEventDisplacementSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether support for event displacement
                        is enabled or not.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: event displacement support is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: event displacement support is disabled&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;The displacement behavior is modified in detail by a number of other configuration parameters:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy&quot;&gt;DemEventDisplacementStrategy&lt;/a&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementCriterionTNCTOC&quot;&gt;DemEventDisplacementCriterionTNCTOC&lt;/a&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEventDisplacement&quot;&gt;DemOBDEventDisplacement&lt;/a&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;/&lt;a
                                 href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Follow the links for a detailed description.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event Displacement Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c07c7fde-9789-4c94-ba19-3ea11e74288c"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndFalse(.)) and (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent)) and                       (num:integer(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent) != 0)" 
                           true="DemEventDisplacementSupport configuration parameter must be enabled if permanent memory is used."/>
                    <a:tst 
                           expr="(node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                       (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy = &apos;DEM_DISPLACEMENT_FULL&apos;) and                       (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDataElementClass/eb-choice::*[1]/eb-list::*/DemInternalDataElement != &apos;DEM_OCC1&apos;)" 
                           true="If advanced displacement is configured, the internal data element DEM_OCC1 must be configured too."/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                       (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy = &apos;DEM_DISPLACEMENT_FULL&apos;) and                       ((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDataElementClass/eb-choice::*[1]/eb-list::*/DemInternalDataElement != &apos;DEM_OCC2&apos;) or                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDataElementClass/eb-choice::*[1]/eb-list::*/DemInternalDataElement != &apos;DEM_SI30&apos;) or                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDataElementClass/eb-choice::*[1]/eb-list::*/DemInternalDataElement != &apos;DEM_CURRENT_FDC&apos;))" 
                        true="Suboptimal configuration, if advanced displacement is configured, the internal data elements DEM_OCC3, DEM_SI30 and DEM_CURRENT_FDC must be configured too."/>
                </v:var>
                <v:var name="DemEventDisplacementStrategy" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines, which displacement strategy is
                        followed.&lt;/p&gt;
                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DISPLACEMENT_PRIO_OCC&lt;/code&gt;: Event memory entry displacement is enabled,
                          by consideration of priority and occurrence (but without active/passive status).&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DISPLACEMENT_FULL&lt;/code&gt;: Event memory entry displacement is enabled,
                          by consideration of priority, active/passive status, and occurrence.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Event Displacement Strategy&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event Displacement Strategy"/>
                  <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_431"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="db7683e0-25c1-11e3-8224-0800200c9a66"/>
                  <a:da name="DEFAULT" value="DEM_DISPLACEMENT_FULL"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemEventDisplacementSupport)"/>
                  <a:da name="RANGE">
                    <a:v>DEM_DISPLACEMENT_PRIO_OCC</a:v>
                    <a:v>DEM_DISPLACEMENT_FULL</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemEventDisplacementCriterionTNCTOC" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch activates/deactivates the ASR4.3.1 displacement
                        behavior for events which are not tested in this operation cycle
                        (TestNotCompletedThisOperationCycle bit == 1).&lt;/p&gt;
                        &lt;p&gt;When this switch is activated, existing events which are not tested in
                        this operation cycle (TNCTOC bit == 1) and with the same priority as the new
                        event will be considered during the displacement mechanism.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Event status bit TNCTOC is considered during the
                          displacement mechanism in accordance with ASR4.3.1.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Event status bit TNCTOC is not considered during
                          the displacement mechanism (ASR4.0.3 compliant behavior).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;If the vendor-specific extension &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt; is
                        selected for &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;
                        and &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;,
                        a non-standard/vendor-specific displacement algorithm is activated. If so, it is not recomended
                        to enable DemEventDisplacementCriterionTNCTOC because event entries with the
                        &lt;b&gt;same priority&lt;/b&gt; as the new event will be considered for displacement in this case.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Event Displacement Criterion TNCTOC&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event Displacement Criterion TNCTOC"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9d9bc042-d2b1-11e8-a8d5-f2801f1b9fd1"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemEventDisplacementSupport)"/>
                </v:var>
                <v:var name="DemAdvDisplacementOcc1Limit" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        The number of OCC1 counts used for selecting entry by advanced displacement algorithm.
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Advanced Displacement OCC1 Limit&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: must be set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt; (because Si30 is available only in this mode).&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventDisplacementStrategy&quot;&gt;DemEventDisplacementStrategy&lt;/a&gt;: must be set to &lt;code&gt;DEM_DISPLACEMENT_FULL&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Advanced Displacement OCC1 Limit"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="20f6a3e0-fee8-11e4-b939-0800200c9a66"/>
                  <a:da name="DEFAULT" value="3"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy = &apos;DEM_DISPLACEMENT_FULL&apos;) and (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport))"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemExtendedDataCapture" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the point in time, when the extended data
                        collection is done for the initial event memory entry.&lt;/p&gt;

                        &lt;p&gt;DemExtendedDataCapture must be configured with the same value as DemFreezeFrameCapture.&lt;/p&gt;
                        &lt;p&gt;If both OBDonUDS and event combination are enabled, then DemExtendedDataCapture must not be configured to DEM_TRIGGER_ON_FDC_THRESHOLD.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_EVENT_MEMORY_STORAGE&lt;/code&gt;: Triggers the collection
                              of extended data if the event is stored in fault memory.
                              &lt;ul&gt;
                                &lt;li&gt;Extended data capturing for events is performed asynchronously in the &lt;code&gt;Dem_MainFunction()&lt;/code&gt;,
                                   regardless of the configuration of DemExtendedDataCapture, regardless of whether the events were reported
                                   via &lt;code&gt;Dem_SetEventStatus()&lt;/code&gt; or &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt; : Triggers the collection of extended data if the UDS DTC
                              status bit 0 (TestedFailed) changes from 0 to 1.
                              &lt;ul&gt;
                                &lt;li&gt;Extended data capturing for events reported via &lt;code&gt;Dem_SetEventStatus()&lt;/code&gt; is performed
                                    synchronously, while the extended data capturing for events reported via &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt;
                                    is always done asynchronously in the &lt;code&gt;Dem_MainFunction()&lt;/code&gt;, regardless of the configuration of
                                    DemExtendedDataCapture.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt; is only effectual for SWC events, BSW events will still
                                    be handled as DEM_TRIGGER_EVENT_MEMORY_STORAGE.&lt;/li&gt;
                              &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt; (vendor-specific extension): Triggers the collection of
                              extended data if unconfirmedDTC threshold is reached (refer to DemDebounceCounterUnconfirmedThreshold)
                              for the first time in an operation cycle. This changes the behavior of the following functionalities:
                              &lt;ul&gt;
                                &lt;li&gt;A different, non-standard AUTOSAR, displacement algorithm is used (when enabled),
                                    i.e. it uses the OCC2 counter instead of the internal calculated occurrence order.
                                    It is recommended to not enable the standard AUTOSAR event displacement criteria
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementCriterionTNCTOC&quot;&gt;DemEventDisplacementCriterionTNCTOC&lt;/a&gt;
                                    and
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEventDisplacement&quot;&gt;DemOBDEventDisplacement&lt;/a&gt;.
                                    The overall support for event memory displacement is enabled/disabled by the
                                    configuration parameter
                                    &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;.
                                    There is an overview of all configuration parameters available which affect the
                                    displacement behavior.&lt;/li&gt;
                                &lt;li&gt;Development freeze frames of new events (when enabled) will displace development freeze frames of aged events, if the new event status reaches
                                    the unconfirmedDTC threshold and the development freeze frame memory space is full already.&lt;/li&gt;
                                &lt;li&gt;Aging and healing algorithms (when enabled) use vendor specific algorithms (otherwise use standard
                                    AUTOSAR algorithms).&lt;/li&gt;
                              &lt;/ul&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;DemExtendedDataCapture must not be configured to DEM_TRIGGER_ON_FDC_THRESHOLD,
                          if DemIgnoreResetEventStatusForEventRelatedDataCapturing is true or if at least
                          one DemDidClass exists, that references a DemDataElement with parameter
                          DemDataElementCaptureTrigger configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Extended Data Capture"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2be230f7-21a6-436c-8592-3482624227b6"/>
                  <a:da name="DEFAULT" value="DEM_TRIGGER_EVENT_MEMORY_STORAGE"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="(. != ../DemFreezeFrameCapture)" 
                           true="DemExtendedDataCapture and DemFreezeFrameCapture must be configured with the same option."/>
                    <a:tst 
                           expr="(. = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                                  (count(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDidClass/eb-list::*/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                           true="DemExtendedDataCapture cannot be set to DEM_TRIGGER_ON_FDC_THRESHOLD, when a Did class references a data element with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION."/>
                  </a:da>
                  <a:da name="RANGE">
                    <a:v>DEM_TRIGGER_EVENT_MEMORY_STORAGE</a:v>
                    <a:v>DEM_TRIGGER_TESTFAILED</a:v>
                    <a:v>DEM_TRIGGER_ON_FDC_THRESHOLD</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemFreezeFrameCapture" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the point in time, when the freeze frame data
                        collection is done for the initial event memory entry.&lt;/p&gt;

                        &lt;p&gt;DemFreezeFrameCapture must be configured with the same value as DemExtendedDataCapture.&lt;/p&gt;
                        &lt;p&gt;Based on the value selected, it will impact the mechanism of OBD Freeze Frame reporting.
                        (See DemPidClass for more details regarding OBD Freeze Frame.)&lt;/p&gt;
                        &lt;p&gt;If both OBDonUDS and event combination are enabled, then DemFreezeFrameCapture must not be configured to DEM_TRIGGER_ON_FDC_THRESHOLD.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_EVENT_MEMORY_STORAGE&lt;/code&gt;: Triggers the collection
                              of freeze frame data if the event is stored in fault memory.
                              &lt;ul&gt;
                                &lt;li&gt;Freeze Frame capturing for events is performed asynchronously in the &lt;code&gt;Dem_MainFunction()&lt;/code&gt;,
                                    regardless of the configuration of DemFreezeFrameCapture, regardless of whether the events were reported
                                    via &lt;code&gt;Dem_SetEventStatus()&lt;/code&gt; or &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt; : Triggers the collection of freeze frame data if
                              the UDS DTC status bit 0 (TestedFailed) changes from 0 to 1.
                              &lt;ul&gt;
                                &lt;li&gt;Freeze Frame capturing for events reported via &lt;code&gt;Dem_SetEventStatus()&lt;/code&gt; is performed
                                    synchronously, while the freeze frame capturing for events reported via &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt;
                                    is always done asynchronously in the &lt;code&gt;Dem_MainFunction()&lt;/code&gt;, regardless of the configuration of
                                    DemFreezeFrameCapture.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt; is only effectual for SWC events, BSW events will still
                                    be handled as DEM_TRIGGER_EVENT_MEMORY_STORAGE.&lt;/li&gt;
                              &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt; (vendor-specific extension): Triggers the collection
                              of freeze frame data if ConfirmedDTC bit is not set and if one of the following
                              conditions holds:
                              &lt;ul&gt;
                                &lt;li&gt;unconfirmedDTC threshold reached (refer to DemDebounceCounterUnconfirmedThreshold)
                                    for the first time in an operation cycle and event has never failed&lt;/li&gt;
                                &lt;li&gt;failed threshold reached for the first time in an operation cycle&lt;/li&gt;
                              &lt;/ul&gt;
                              Also the behavior of several functionalities is changed as described in
                              &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;DemFreezeFrameCapture cannot be configured to DEM_TRIGGER_ON_FDC_THRESHOLD,
                          if DemIgnoreResetEventStatusForEventRelatedDataCapturing is true or if at least
                          one DemDidClass exists, that references a DemDataElement with parameter
                          DemDataElementCaptureTrigger configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Freeze Frame Capture"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d25d25e9-ae86-451c-bac3-8f151042929c"/>
                  <a:da name="DEFAULT" value="DEM_TRIGGER_EVENT_MEMORY_STORAGE"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="(. != ../DemExtendedDataCapture)" 
                           true="DemFreezeFrameCapture and DemExtendedDataCapture must be configured with the same option."/>
                    <a:tst 
                           expr="(. = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                                  (count(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDidClass/eb-list::*/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                           true="DemFreezeFrameCapture cannot be set to DEM_TRIGGER_ON_FDC_THRESHOLD, when a Did class references a data element with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION."/>
                  </a:da>
                  <a:da name="RANGE">
                    <a:v>DEM_TRIGGER_EVENT_MEMORY_STORAGE</a:v>
                    <a:v>DEM_TRIGGER_TESTFAILED</a:v>
                    <a:v>DEM_TRIGGER_ON_FDC_THRESHOLD</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberEventEntryEventBuffer" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration parameter defines the maximum number of buffers for capturing
                          environmental data (freeze frames and extended data) of SWC events until they are
                          stored to the event memory.&lt;/p&gt;
                        &lt;p&gt;The configuration of this parameter is required, when
                          &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt; and
                          &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt; are set
                          to &lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt;. In this case Dem processes SWC event
                          entries in the context of the caller of the API &lt;code&gt;Dem_SetEventStatus()&lt;/code&gt;.
                          Depending on the ECU configuration, the processing of a reported event and
                          therefore also the capturing of event data might be interrupted by another
                          event report. Accordingly, separate buffers must be available for each event
                          that must be handled &quot;in parallel&quot;. This parameter defines the number of
                          capture buffers that are available for such &quot;parallel&quot; processing.&lt;/p&gt;
                        &lt;p&gt;If an event is processed and no free buffer is available, Dem neither allocates
                          a new entry, nor updates an existing entry. In this case Dem reports run-time error 
                         &lt;code&gt;DEM_E_NO_CAPTURE_BUFFER_AVAILABLE&lt;/code&gt;, if error reporting is enabled.&lt;/p&gt;
                        &lt;p&gt;NOTE: Dem cannot calculate or estimate the correct value of this parameter, but
                          it is depending on the overall ECU configuration. Therefore you must configure
                          a proper value so that for instance legal requirements are fulfilled.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum number of buffers to capture external data&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;: must be set to &lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;
                            &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;: must be set to &lt;code&gt;DEM_TRIGGER_TESTFAILED&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;
                             At least one external data element must be configured.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum number of buffers to capture external data"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="ECU"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="8b364032-7546-4972-b519-0dcedd970bcd"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_TESTFAILED&apos;) or                                (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_TESTFAILED&apos;)) and                               node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDataElementClass/eb-choice::*[1]/eb-list::*[. = &apos;DemExternalCSDataElementClass&apos;])"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=250"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var 
                       name="DemIgnoreResetEventStatusForEventRelatedDataCapturing" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;If this parameter is enabled and configured to true, the Dem shall
                        ignore any change of the UDS DTC status bit 0 (TestFailed) caused by
                        &lt;code&gt;Dem_ResetEventStatus&lt;/code&gt; for determining the trigger for
                        event storage or update. This affects the storage/update of all
                        event entry data including the OBD freeze frames.&lt;/p&gt;

                        &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; When this parameter is set to true, the TestFailed
                        status bit of all events must be stored permanently. I. e., the parameters
                        &lt;a href=&quot;path:../../../DemStatusBitStorageTestFailed&quot;&gt;DemStatusBitStorageTestFailed&lt;/a&gt;
                        and/or &lt;code&gt;DemStatusBitStorageTestFailedPerEvent&lt;/code&gt; must be configured
                        accordingly.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;DemIgnoreResetEventStatusForEventRelatedDataCapturing&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;/&lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;:
                            when set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;, &lt;em&gt;Ignore ResetEventStatus for event related data capturing&lt;/em&gt;
                            cannot be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemIntermediateNvStorageOfDTCStatus&quot;&gt;DemIntermediateNvStorageOfDTCStatus&lt;/a&gt;:
                            when set to &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;Ignore ResetEventStatus for event related data capturing&lt;/em&gt;
                            cannot be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Ignore ResetEventStatus for event related data capturing"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2c0a9a8d-2948-4d89-b65b-4a19980c916b"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. = &apos;true&apos;) and                                  ((../DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                   (../DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                           true="DemIgnoreResetEventStatusForEventRelatedDataCapturing cannot be set to true, when DemFreezeFrameCapture or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                    <a:tst 
                           expr="(. = &apos;true&apos;) and                                  (../DemIntermediateNvStorageOfDTCStatus = &apos;true&apos;)" 
                           true="DemIgnoreResetEventStatusForEventRelatedDataCapturing cannot be set to true, when DemIntermediateNvStorageOfDTCStatus is set to true."/>
                  </a:da>
                </v:var>
                <v:var name="DemOperationCycleProcessing" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This configuration switch defines whether the operation cycle is
                        triggered by START/END reports or collecting an external counter
                        value, which results in respective state changes. Currently
                        DEM_PROCESS_OPCYC_STATE is only supported and hence it is set as
                        default value.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_PROCESS_OPCYC_STATE&lt;/code&gt;: Operation cycle is triggered
                              by DEM_CYCLE_STATE_START.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_PROCESS_OPCYC_COUNTER&lt;/code&gt;: By collecting an external
                              counter value.&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;DemOperationCycleProcessing&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_40&lt;/code&gt;, &lt;code&gt;AUTOSAR_42&lt;/code&gt; or &lt;code&gt;AUTOSAR_43&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Operation Cycle Processing "/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Operation Cycles"/>
                  <a:da name="DEFAULT" value="DEM_PROCESS_OPCYC_STATE"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../DemServiceAPI/DemDefaultASRServiceAPI != &apos;AUTOSAR_2011&apos;)"/>
                  <a:da name="RANGE">
                    <a:v>DEM_PROCESS_OPCYC_STATE</a:v>
                    <a:v>DEM_PROCESS_OPCYC_COUNTER</a:v>
                  </a:da>
                </v:var>
                <v:lst name="DemHeaderFileInclusion">
                  <a:a name="COLUMNS" value="DemHeaderFileTarget"/>
                  <a:a name="LABEL" value="Header File List"/>
                  <a:a name="ROWS" value="4"/>
                  <a:a name="TAB" value="GENERAL"/>
                  <v:var name="DemHeaderFileInclusion" type="STRING">
                    <a:a name="COLUMN_TITLE" value="File Name"/>
                    <a:a name="COLUMN_WIDTH" value="200"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          Name of the header file(s) to be included by the Dem module containing
                          the used C-callback declarations.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Header File Name"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="454c08a8-a26e-4ca1-af35-d8cfa1226630"/>
                    <a:da name="DEFAULT" value="Module_Cbk.h"/>
                    <a:da name="INVALID" type="XPath" expr=". = &apos;&apos;" 
                          true="Empty name. (specify name or remove entry)"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*\.h$&apos;)" 
                          false="Invalid name. (no prefixed header file name)"/>
                  </v:var>
                </v:lst>
                <v:var name="DemImmediateNvStorageLimit" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the maximum number of occurrences, a specific
                        event memory entry is allowed, to be stored in NVRAM immediately (refer
                        to DemImmediateNvStorage).&lt;/p&gt;

                        &lt;p&gt;The Dem module continues to update the Dem-internal event memory but will
                        not trigger the immediate storage of an event memory entry into NVRAM when its
                        occurrence counter has exceeded the value defined by DemImmediateNvStorageLimit.&lt;/p&gt;

                        &lt;p&gt;However, in special cases like ClearDTC or an internal memory reorganization,
                        the immediate storage of an event memory entry into NVRAM is triggered also if its
                        occurrence counter has exceeded the value defined by DemImmediateNvStorageLimit and
                        even if DemImmediateNvStorage is disabled.&lt;/p&gt;

                        &lt;p&gt;If the occurrence counter of an event (with DemImmediateNvStorage enabled)
                        exceeds DemImmediateNvStorageLimit, the event memory entry and its event
                        related data will be stored into NVRAM during the shutdown phase.&lt;/p&gt;

                        &lt;p&gt;&lt;code&gt;DemImmediateNvStorageLimit&lt;/code&gt; should be enabled if
                        &lt;code&gt;DemImmediateNvStorage&lt;/code&gt; is enabled for any of the DTC&apos;s,
                        otherwise a warning will be generated in &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral&quot;&gt;
                        DemGeneral&lt;/a&gt;&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Immediate Nv Storage Limit"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:a name="UUID" value="33ce2da8-93c4-4ef7-b9e5-fe4043522cd7"/>
                  <a:da name="DEFAULT" value="254"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=254"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0)                                  or (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents))" 
                        false="DemImmediateNvStorageLimit has no effect, because neither of the events has DemImmediateNvStorage enabled nor the DemImmediateStorageInternalEvents is enabled."/>
                </v:var>
                <v:var name="DemNvStorageEmptyEventMemoryEntries" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Switch to overwrite invalid or uninitialized NVRAM blocks
                          with initialized empty event memory entries during shutdown.
                        &lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Initialized empty entries are written during Dem_Shutdown()&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Initialized empty entries are NOT written during Dem_Shutdown()&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Initialize EventMemory for immediate storage&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DemImmediateNvStorage&lt;/code&gt;/&lt;a href=&quot;path:../DemImmediateStorageInternalEvents&quot;&gt;DemImmediateStorageInternalEvents&lt;/a&gt;:
                            At least one event is configured with &lt;code&gt;DemImmediateNvStorage&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; or if at least one internal event
                            is configured with &lt;code&gt;DemImmediateStorageInternalEvents&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemNvRamBlockId&quot;&gt;DemNvRamBlockId&lt;/a&gt;: NvM Block Configuration must be configured with at least one NvM block.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemClearDTCBehavior&quot;&gt;DemClearDTCBehavior&lt;/a&gt;: must be set to &lt;code&gt;DEM_CLRRESP_NONVOLATILE_TRIGGER&lt;/code&gt;
                            or &lt;code&gt;DEM_CLRRESP_NONVOLATILE_FINISH&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Initialize EventMemory for immediate storage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:a name="UUID" value="0a47ace6-1e0b-4838-b8e0-70b128139a73"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(((count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) or                                 ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)))) and                                (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemNvRamBlockId/eb-list::*) &gt; 0)) or                               contains(../DemClearDTCBehavior, &apos;NONVOLATILE&apos;)"/>
                </v:var>
                <v:var name="DemUserDefMemoryId" type="INTEGER">
                  <a:a name="DEFAULT_RADIX" value="HEX"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                           Defines a memory ID parameter to be used for selecting the Dem internal
                           secondary event memory.

                           If configured, and the requested DTCOrigin matches with the configured
                           user-defined memory ID + 0x100, the DTCOrigin is mapped to the Dem
                           internal secondary event memory.

                           If not configured, all Dcm requests for the impacted services,
                           issued for a DTCOrigin other than DEM_DTC_ORIGIN_PRIMARY_MEMORY,
                           DEM_DTC_ORIGIN_MIRROR_MEMORY, DEM_DTC_ORIGIN_PERMANENT_MEMORY
                           and DEM_DTC_ORIGIN_OBD_RELEVANT_MEMORY will be considered invalid.

                           Similarly, all SW-C/CDD requests for a DTCOrigin other than
                           DEM_DTC_ORIGIN_PRIMARY_MEMORY, DEM_DTC_ORIGIN_SECONDARY_MEMORY,
                           DEM_DTC_ORIGIN_MIRROR_MEMORY and DEM_DTC_ORIGIN_PERMANENT_MEMORY
                           will be considered invalid.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="User-defined memory identifier"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fc38e9-b118-452f-bd1c-643f4d45e44f"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntrySecondary = 0)" 
                        true="The Dem internal secondary event memory is not enabled. It can be enabled                            by configuring DemMaxNumberEventEntrySecondary parameter with a value greater than 0."/>
                </v:var>
                <v:var name="DemMaxNumberEventEntryMirror" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Maximum number of events which can be stored in the
                        &lt;em&gt;mirror memory&lt;/em&gt;.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Mirror Event Memory Entries"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d689df29-eaaa-4041-b072-7819c94b4cc4"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="The mirror event memory without assigned events is not allowed." 
                              expr="(. &gt; 0) and (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) = 0)"/>
                  </a:da>
                  <a:da name="TOOLTIP" type="XPath" 
                        expr="concat(&apos;Maximal number of mirror event memory entries - proposed range: &apos;,                                  count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;) and                                               (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemDTCSeverity) and                                               as:ref(DemDTCClassRef)/DemDTCSeverity = &apos;DEM_DTC_SEV_IMMEDIATELY&apos;)]                                       ),                                  &apos;-&gt;&apos;,                                  count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;)]))"/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr=". &gt;= count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;) and                                                                       (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemDTCSeverity) and                                                                       as:ref(DemDTCClassRef)/DemDTCSeverity = &apos;DEM_DTC_SEV_IMMEDIATELY&apos;)]                                               )" 
                           false="Suboptimal configuration: The mirror event memory should be configured to hold at least all high severity events."/>
                    <a:tst 
                           expr="(. &gt; count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;])) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) &gt; 0)" 
                           true="Suboptimal configuration: The mirror event memory contains more entries than events are configured for."/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxSizeFreezeFrameEntryMirror" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;This size (in bytes) will be reserved for each mirror freeze frame entry in RAM/NVRAM.
                           During calibration the total size of a mirror freeze frames must never be larger than this value.
                           If the size gets larger than this configured value the behavior is undefined.&lt;/p&gt;
                        &lt;p&gt;The size of a freeze frame includes all common freeze frames, if configured.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum Mirror Freeze Frame Size&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;: must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemMaxNumberEventEntryMirror&quot;&gt;DemMaxNumberEventEntryMirror&lt;/a&gt;: must be &gt; 0.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Mirror Freeze Frame Size"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="eb0fc288-842c-43b6-a45e-55a31b089ee6"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (../DemMaxNumberEventEntryMirror &gt; 0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberEventEntryPermanent" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Maximum number of events which can be stored in the
                        &lt;em&gt;permanent memory.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;The assignment of an event to this memory type is dynamic and used for
                        emission-related events only.&lt;/p&gt;
                        &lt;p&gt;If zero is configured, the permanent memory is deactivated.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Permanent Event Memory Entries&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;&lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Permanent Event Memory Entries (0, 4 -&gt; 255)"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="03895ccd-8563-452d-9f7b-cf321d395d52"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The reference to MIL configuration parameter shall be enabled in configuration." 
                              expr="(. != 0) and (not(node:refexists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)))"/>
                      <mt:tst 
                              true="The value shall not have values 1, 2 and 3 dec." 
                              expr="(. = 1) or (. = 2) or (. = 3)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberEventEntryPrimary" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Maximum number of events which can be stored in the
                        &lt;em&gt;primary memory.&lt;/em&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Primary Event Memory Entries"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ce0fc288-842c-43b6-a45e-55a31b089ee6"/>
                  <a:da name="DEFAULT" value="30"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                  <a:da name="TOOLTIP" type="XPath" 
                        expr="concat(&apos;Maximal number of mirror event memory entries - proposed range: &apos;,                                  count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;) and                                               (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemDTCSeverity) and                                               as:ref(DemDTCClassRef)/DemDTCSeverity = &apos;DEM_DTC_SEV_IMMEDIATELY&apos;)]                                       ),                                  &apos;-&gt;&apos;,                                  count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;)]))"/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr=". &gt;= count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;) and                                                                       (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemDTCSeverity) and                                                                       as:ref(DemDTCClassRef)/DemDTCSeverity = &apos;DEM_DTC_SEV_IMMEDIATELY&apos;)]                                               )" 
                           false="Suboptimal configuration: The primary event memory should be configured to hold at least all high severity events."/>
                    <a:tst 
                           expr=". &lt;= count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;])" 
                           false="Suboptimal configuration: The primary event memory contains more entries than events are configured for."/>
                    <a:tst 
                           expr="(5 &gt; .) and                                  (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                  (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                  (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef))" 
                           true="At least 5 primary event memory entries should be configured to fulfill SAE J1979-2 requirements to store at least 5 OBDonUDS legal freeze frames."/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxSizeFreezeFrameEntryPrimary" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;This size (in bytes) will be reserved for each primary freeze frame entry in RAM/NVRAM.
                           During calibration the total size of a primary freeze frames must never be larger than this value.
                           If the size gets larger than this configured value the behavior is undefined.&lt;/p&gt;
                        &lt;p&gt;The size of a freeze frame includes all common freeze frames if configured.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum Primary Freeze Frame Size&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemMaxNumberEventEntryPrimary&quot;&gt;DemMaxNumberEventEntryPrimary&lt;/a&gt;:
                              must be &gt; 0.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Primary Freeze Frame Size"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="eb1fc288-842c-43b6-a45e-55a31b089ee6"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               (../DemMaxNumberEventEntryPrimary &gt; 0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberEventEntrySecondary" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Maximum number of events which can be stored in the
                        &lt;em&gt;secondary memory.&lt;/em&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Secondary Event Memory Entries"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9a9c96cc-9af1-4373-b1c2-48372fc6af03"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="The secondary event memory without assigned events is not allowed." 
                              expr="(. &gt; 0) and (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) = 0)"/>
                  </a:da>
                  <a:da name="TOOLTIP" type="XPath" 
                        expr="concat(&apos;Maximal number of secondary event memory entries - proposed range: &apos;,                                  count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;) and                                               (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemDTCSeverity) and                                               as:ref(DemDTCClassRef)/DemDTCSeverity = &apos;DEM_DTC_SEV_IMMEDIATELY&apos;)]                                       ),                                  &apos;-&gt;&apos;,                                  count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;)]))"/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr=". &gt;= count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;) and                                                                       (node:refvalid(DemDTCClassRef) and node:exists(as:ref(DemDTCClassRef)/DemDTCSeverity) and                                                                       as:ref(DemDTCClassRef)/DemDTCSeverity = &apos;DEM_DTC_SEV_IMMEDIATELY&apos;)]                                               )" 
                           false="Suboptimal configuration: The secondary event memory should be configured to hold at least all high severity events."/>
                    <a:tst 
                           expr="(.  &gt; count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;])) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) &gt; 0)" 
                           true="Suboptimal configuration: The secondary event memory contains more entries than events are configured for."/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxSizeFreezeFrameEntrySecondary" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;This size (in bytes) will be reserved for each secondary freeze frame entry in RAM/NVRAM.
                           During calibration the total size of a secondary freeze frames must never be larger than this value.
                           If the size gets larger than this configured value the behavior is undefined.&lt;/p&gt;
                        &lt;p&gt;The size of a freeze frame includes all common freeze frames if configured.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum Secondary Freeze Frame Size&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemMaxNumberEventEntrySecondary&quot;&gt;DemMaxNumberEventEntrySecondary&lt;/a&gt;:
                              must be &gt; 0.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Secondary Freeze Frame Size"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="eb2fc288-842c-43b6-a45e-55a31b089ee6"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               (../DemMaxNumberEventEntrySecondary &gt; 0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberPrestoredFF" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.
                        Nevertheless, Freeze Frame Prestorage can be used
                        for events individually.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;Defines the maximum number for prestored freeze frames.&lt;/p&gt;

                        &lt;p&gt;If set to 0, then freeze frame prestorage is not supported by the ECU.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Prestored Freeze Frame Entries"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1884d6e8-84ac-4c4e-a29b-990a517ef567"/>
                  <a:da name="DEFAULT" value="255"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="DemOBDSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines
                        whether OBD is supported or not.&lt;/p&gt;
                        &lt;p&gt;Note: In case DemOBDSupport is disabled, the DEM
                                module will handle DTCExtDataRecordNumber of 0xFE
                                in &lt;code&gt;Dem_GetSizeOfExtendedDataRecordSelection()&lt;/code&gt; API with
                                &lt;code&gt;DEM_NO_SUCH_ELEMENT&lt;/code&gt; NRC.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemGeneralOBD&quot;&gt;DemGeneralOBD&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="OBD Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="1a9e3410-5892-4c69-b33a-91e4ba06cf27"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:existsAndTrue(.)) and not(node:exists(../DemGeneralOBD))" 
                        true="DemGeneralOBD must be enabled, if DemOBDSupport is configured to true."/>
                </v:var>
                <v:var name="DemCalibrationSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Switch to enable calibration support of specific configuration data.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Calibration supported.&lt;br/&gt;
                            The following parameters can be calibrated by considering the BSWMD data structure descriptions during calibration:&lt;br/&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;b&gt;DTC&lt;/b&gt; (&lt;em&gt;DemDTCClass&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;DTC UDS Value (&lt;em&gt;DemUdsDTC&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;DTC Functional Unit (&lt;em&gt;DemDTCFunctionalUnit&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;DTC Severity (&lt;em&gt;DemDTCSeverity&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;OBD DTC Value (&lt;em&gt;DemObdDTC&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;3-byte OBD DTC Value (&lt;em&gt;DemDtcValue3Byte&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;WWHOBD DTC Class (&lt;em&gt;DemWWHOBDDTCClass&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Debounce Counter&lt;/b&gt; (&lt;em&gt;DemDebounceCounterBased&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Counter Decrement (&lt;em&gt;DemDebounceCounterDecrementStepSize&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Increment (&lt;em&gt;DemDebounceCounterIncrementStepSize&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Failed Threshold (&lt;em&gt;DemDebounceCounterFailedThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Passed Threshold (&lt;em&gt;DemDebounceCounterPassedThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Unconfirmed Threshold (&lt;em&gt;DemDebounceCounterUnconfirmedThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Down (&lt;em&gt;DemDebounceCounterJumpDown&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Down Value (&lt;em&gt;DemDebounceCounterJumpDownValue&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Up (&lt;em&gt;DemDebounceCounterJumpUp&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Up Value (&lt;em&gt;DemDebounceCounterJumpUpValue&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Time Debounce&lt;/b&gt; (&lt;em&gt;DemDebounceTimeBased&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Event Failed Timeout (&lt;em&gt;((DemDebounceTimeFailedThreshold)&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Passed Timeout (&lt;em&gt;((DemDebounceTimePassedThreshold)&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Indicator Attributes&lt;/b&gt; (&lt;em&gt;DemIndicatorAttribute&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Indicator Id (&lt;em&gt;DemIndicatorID&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Behaviour (&lt;em&gt;DemIndicatorBehaviour&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Failure Cycle Counter Threshold (&lt;em&gt;DemIndicatorFailureCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Healing Cycle Counter Threshold (&lt;em&gt;DemIndicatorHealingCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Failure Cycle (&lt;em&gt;DemIndicatorFailureCycleRef&lt;/em&gt;) (*)&lt;/li&gt;
                                  &lt;li&gt;Indicator Healing Cycle (&lt;em&gt;DemIndicatorHealingCycleRef&lt;/em&gt;) (*)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Event Class&lt;/b&gt; (&lt;em&gt;DemEventClass&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Event Failure Cycle Counter Threshold (&lt;em&gt;DemEventFailureCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Failure Cycle (&lt;em&gt;DemEventFailureCycleRef&lt;/em&gt;) (*)&lt;/li&gt;
                                  &lt;li&gt;Minimum Ratio Event (&lt;em&gt;DemMinRatioEvent&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event OBD Readiness Group (&lt;em&gt;DemEventOBDReadinessGroup&lt;/em&gt;) (**)&lt;/li&gt;
                                  &lt;li&gt;OBD Aging Cycle Counter Threshold (&lt;em&gt;DemOBDAgingCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Available (&lt;em&gt;DemEventAvailable&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Aging Allowed (&lt;em&gt;DemAgingAllowed&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Aging Cycle Counter Threshold (&lt;em&gt;DemAgingCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Priority (&lt;em&gt;DemEventPriority&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Operation Cycle Reference (&lt;em&gt;DemOperationCycleRef&lt;/em&gt;) (*)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;
                                &lt;b&gt;Note:&lt;/b&gt;&lt;br/&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;(**)Event OBD Readiness Group is calibratable in a separate array and not within
                                  the Event Class.&lt;/li&gt;
                                  &lt;li&gt;(*)If common operation cycle is enabled (see &lt;a href=&quot;path:../DemCommonOperationCycleSupport&quot;&gt;DemCommonOperationCycleSupport&lt;/a&gt;)
                                  cycles:
                                    &lt;ul&gt;
                                      &lt;li&gt;Indicator Failure Cycle (&lt;em&gt;DemIndicatorFailureCycleRef&lt;/em&gt;)&lt;/li&gt;
                                      &lt;li&gt;Indicator Healing Cycle (&lt;em&gt;DemIndicatorHealingCycleRef&lt;/em&gt;)&lt;/li&gt;
                                      &lt;li&gt;Event Failure Cycle (&lt;em&gt;DemEventFailureCycleRef&lt;/em&gt;)&lt;/li&gt;
                                      &lt;li&gt;Operation Cycle Reference (&lt;em&gt;DemOperationCycleRef&lt;/em&gt;)&lt;/li&gt;
                                      &lt;li&gt;Aging Cycle (&lt;em&gt;DemAgingCycleRef&lt;/em&gt;)&lt;/li&gt;
                                    &lt;/ul&gt;
                                    are all calibrated using one common parameter:
                                    &lt;ul&gt;
                                      &lt;li&gt;Common Operation Cycle (&lt;em&gt;DemOperationCycleRef&lt;/em&gt;)&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Event General&lt;/b&gt; (&lt;em&gt;DemEventParameter&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Event Class (&lt;em&gt;DemEventClass&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Enable Condition Group (&lt;em&gt;DemEnableConditionGroupRef&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Freeze Frame Class (&lt;em&gt;DemFreezeFrameClassRef&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Development Freeze Frame A Class (&lt;em&gt;DemDevFreezeFrameAClassRef&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Development Freeze Frame B Class (&lt;em&gt;DemDevFreezeFrameBClassRef&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Service API Parameters&lt;/b&gt; (&lt;em&gt;DemGeneral&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Force ReadinessGroup Comprehensive component Monitoring (&lt;em&gt;DemOBDForceCCMonitoringReady&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Force ReadinessGroup Fuel System Monitoring (&lt;em&gt;DemOBDForceFuelSysMonitoringReady&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Force ReadinessGroup Misfire Monitoring (&lt;em&gt;DemOBDForceMisfireMonitoringReady&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Common part of Freeze Frame Class (&lt;em&gt;DemCommonFFDataClassRef&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Common part of Development Freeze Frame A Class (&lt;em&gt;DemCommonFFDataDevAClassRef&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Passive Table&lt;/b&gt; (&lt;em&gt;DemAdvDisplacementPassiveTableLine&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Reported Event Reference (&lt;em&gt;DemReportedEventRef&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Passive Event Reference (&lt;em&gt;DemPassiveEventRef&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;OBD Support&lt;/b&gt; (&lt;em&gt;DemOBDSupport&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;OBD Compliancy (&lt;em&gt;DemOBDCompliancy&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;OBD Engine Type (&lt;em&gt;DemOBDEngineType&lt;/em&gt;), only if:
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; is set to &lt;code&gt;DEM_OBD_VARIANT_OBD_CLASSIC&lt;/code&gt; and
                                          &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemReadinessGroupCalibrationConfigKind&quot;&gt;DemReadinessGroupCalibrationConfigKind&lt;/a&gt; is set to &lt;code&gt;DEM_NUMBER_OF_SLOTS_COMMON_CONFIG&lt;/code&gt;
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;PID List&lt;/b&gt; (&lt;em&gt;DemPidClass&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;PID Identifier (&lt;em&gt;DemPidIdentifier&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Freeze Frame Class List&lt;/b&gt; (&lt;em&gt;DemFreezeFrameClass&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Did Class (&lt;em&gt;DemDidClassRef&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                            &lt;/ul&gt;
                            If event combination support is enabled (see &lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;)
                            only following parameters can be calibrated:&lt;br/&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;b&gt;DTC&lt;/b&gt; (&lt;em&gt;DemDTCClass&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;DTC UDS Value (&lt;em&gt;DemUdsDTC&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;OBD DTC Value (&lt;em&gt;DemObdDTC&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;3-byte OBD DTC Value (&lt;em&gt;DemDtcValue3Byte&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;WWHOBD DTC Class (&lt;em&gt;DemWWHOBDDTCClass&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Debounce Counter&lt;/b&gt; (&lt;em&gt;DemDebounceCounterBased&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Counter Decrement (&lt;em&gt;DemDebounceCounterDecrementStepSize&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Increment (&lt;em&gt;DemDebounceCounterIncrementStepSize&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Failed Threshold (&lt;em&gt;DemDebounceCounterFailedThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Passed Threshold (&lt;em&gt;DemDebounceCounterPassedThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Counter Unconfirmed Threshold (&lt;em&gt;DemDebounceCounterUnconfirmedThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Down (&lt;em&gt;DemDebounceCounterJumpDown&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Down Value (&lt;em&gt;DemDebounceCounterJumpDownValue&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Up (&lt;em&gt;DemDebounceCounterJumpUp&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Jump-Up Value (&lt;em&gt;DemDebounceCounterJumpUpValue&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Time Debounce&lt;/b&gt; (&lt;em&gt;DemDebounceTimeBased&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Event Failed Timeout (&lt;em&gt;((DemDebounceTimeFailedThreshold)&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Passed Timeout (&lt;em&gt;((DemDebounceTimePassedThreshold)&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Indicator Attributes&lt;/b&gt; (&lt;em&gt;DemIndicatorAttribute&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Indicator Id (&lt;em&gt;DemIndicatorID&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Behaviour (&lt;em&gt;DemIndicatorBehaviour&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Failure Cycle Counter Threshold (&lt;em&gt;DemIndicatorFailureCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Healing Cycle Counter Threshold (&lt;em&gt;DemIndicatorHealingCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Failure Cycle (&lt;em&gt;DemIndicatorFailureCycleRef&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Indicator Healing Cycle (&lt;em&gt;DemIndicatorHealingCycleRef&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Mapping of indicator group per event&lt;/b&gt; (&lt;em&gt;DemIndicatorAttribute&lt;/em&gt;).
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Event OBD Readiness Group&lt;/b&gt; (&lt;em&gt;DemEventOBDReadinessGroup&lt;/em&gt;), only if:
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; is set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                      &lt;a  href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemReadinessGroupCalibrationConfigKind&quot;&gt;DemReadinessGroupCalibrationConfigKind&lt;/a&gt; is set to &lt;code&gt;DEM_NUMBER_OF_SLOTS_INDIVIDUAL_CONFIG&lt;/code&gt;.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Event Class&lt;/b&gt; (&lt;em&gt;DemEventClass&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Event Failure Cycle Counter Threshold (&lt;em&gt;DemEventFailureCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Available (&lt;em&gt;DemEventAvailable&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Aging Cycle Counter Threshold (&lt;em&gt;DemAgingCycleCounterThreshold&lt;/em&gt;)&lt;/li&gt;
                                  &lt;li&gt;Event Priority (&lt;em&gt;DemEventPriority&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;Event General&lt;/b&gt; (&lt;em&gt;DemEventParameter&lt;/em&gt;) functionality:
                                &lt;ul&gt;
                                  &lt;li&gt;Enable Condition Group (&lt;em&gt;DemEnableConditionGroupRef&lt;/em&gt;)&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Calibration not supported&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Calibration Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ebae708a-3224-47b6-969b-faf7b3931422"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.)) and                                  (node:existsAndTrue(../DemJ1939Support)) and                                  ( count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*)                                    &lt;                                    ( count(../DemMILIndicatorRef)              +                                      count(../DemAmberWarningLampIndicatorRef) +                                      count(../DemProtectLampIndicatorRef)      +                                      count(../DemRedStopLampIndicatorRef)                                    )                                  )" 
                        true="When calibration is on, it is expected to define in total enough event indicator attributes (DemIndicatorAttribute), so that each configured Lamp Indicator Reference (MIL, Amber Warning Lamp, Protect Lamp, Red Stop Lamp) can be set."/>
                </v:var>
                <v:var name="DemClearDTCOfDisabledEvents" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Switch to enable clearing of DTCs for disabled events from event memory&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: all disabled events shall be cleared from the event memory
                          including related actions (esp. status byte reset, callback triggers, etc.)
                          if ClearDTC is called with DTC = DEM_DTC_GROUP_ALL_DTCS, regardless of whether
                          the related &lt;code&gt;DemObdDTC&lt;/code&gt;/&lt;code&gt;DemDtcValue3Byte&lt;/code&gt;/&lt;code&gt;DemUdsDTC&lt;/code&gt; exist,
                          have the value 0 or they are suppressed&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: disabled events shall not be cleared from event memory&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;This feature is only needed when:
                          &lt;ul&gt;
                            &lt;li&gt;calibration without event combination is enabled
                              (DemCalibrationSupport is set to &lt;code&gt;true&lt;/code&gt;
                              and DemEventCombinationSupport is set to &lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;) OR&lt;/li&gt;
                            &lt;li&gt;dynamic availability is enabled
                              (DemAvailabilitySupport is set to &lt;code&gt;DEM_EVENT_AVAILABILITY&lt;/code&gt;)&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Clear DTC Of Disabled Events&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemAvailabilitySupport&quot;&gt;DemAvailabilitySupport&lt;/a&gt;:
                              must be set to dynamic availability (&lt;code&gt;DEM_EVENT_AVAILABILITY&lt;/code&gt;).
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Clear DTC Of Disabled Events"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="def05abf-0cc6-433f-87b4-45dff5b6961a"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                            (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;)) or                           (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAvailabilitySupport = &apos;DEM_EVENT_AVAILABILITY&apos;)"/>
                </v:var>
                <v:var name="DemCommonOperationCycleSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        
                        &lt;p&gt;This configuration parameter defines whether a common operation cycle is used.&lt;/p&gt;
                        &lt;p&gt;If this parameter is enabled, the Dem uses the operation cycle configured in &lt;code&gt;DemOperationCycleRef&lt;/code&gt; as common operation
                          cycle for theses specific operation cycle references:
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DemAgingCycleRef&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DemEventFailureCycleRef&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DemIndicatorFailureCycleRef&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DemIndicatorHealingCycleRef&lt;/code&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;Therefore those specific operation cycle references are disabled and not editable if the common operation cycle is enabled.&lt;/p&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Common Operation Cycle&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Common Operation Cycle "/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ebb94a86-7dfd-4f89-b8dd-1bae1c9e8dd9"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemCalibrationSupport) and                            (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;)"/>
                </v:var>
                <v:var name="DemAgingAllowedSeperateFlag" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        
                        &lt;p&gt;This parameter enables a convenient way for calibrating
                           the value of DemAgingAllowed.&lt;/p&gt;
                        &lt;p&gt;If this parameter is enabled the flag AllowAging
                           is used to calibrate the value of DemAgingAllowed. Otherwise
                           the value of DemAgingCycleCounterThreshold
                           is used to disable aging, the threshold must be calibrated
                           to 0 to disable aging.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Aging Allowed Separate Flag&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Aging Allowed Separate Flag "/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="eb294a86-7dfd-4f89-b8dd-1bae1c9e8dd9"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemCalibrationSupport) and                            (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;)"/>
                </v:var>
                <v:var name="DemMaxNumberEventClasses" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;The vendor-specific parameter DemMaxNumberEventClasses
                        specifies how many instances of the class DemEventClass that should
                        be allocated at least.&lt;/p&gt;

                        &lt;p&gt;If calibration (without event combination) is enabled the Dem will generate parts of
                        DemEventClass separately and not as part of the DemEventParameter
                        description.&lt;/p&gt;

                        &lt;p&gt;Each set of configuration variants in DemEventClass will only have
                        one entry in the data structure Dem_EventClassDesc[].
                        If less different sets of DemEventClass are configured than
                        DemMaxNumberEventClasses, the Dem will generate additional empty entries in
                        Dem_EventClassDesc[].
                        This empty entries can be assigned during calibration.
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum number of Event Classes&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum number of Event Classes"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="dc76fdb0-7793-4a01-a8f6-934b39d46f8e"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemCalibrationSupport) and                            (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=2048"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberIndicatorClasses" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The vendor-specific parameter DemMaxNumberIndicatorClasses specifies how
                          many instances of the class DemIndicatorClass should at least be allocated.
                        &lt;/p&gt;
                        &lt;p&gt;
                          If calibration is enabled, the Dem will generate one indicator class for
                          every distinct set of indicator attributes of the configured events.
                        &lt;/p&gt;
                        &lt;p&gt;
                          If the number of indicator classes is less than the value of this
                          parameter, then this value specifies the number of indicator classes. The
                          additional indicator classes are generated with dummy values.
                        &lt;/p&gt;
                        &lt;p&gt;
                          If this parameter is configured and has a value greater than 0, then at
                          least one indicator has to be configured in the DemIndicator container and
                          linked to an event.
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum number of Indicator Classes&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum number of Indicator Classes"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ebebfdb0-7793-4a01-a8f6-934b39d46f8e"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemCalibrationSupport)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="If CalibrationSupport is enabled and DemMaxNumberIndicatorClasses                                  is greater than 0, then at least one indicator has to be configured                                  and linked to an event." 
                              expr="(node:existsAndTrue(../DemCalibrationSupport)) and                                  (node:value(node:current()) &gt; 0) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*) = 0)"/>
                  </a:da>
                </v:var>
                <v:var name="DemOBDSupportKind" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines OBD support and the kind of OBD ECU.&lt;/p&gt;
                        &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; The name of the configuration parameter is not AUTOSAR-compatible.&lt;/p&gt;
                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_OBD_MASTER_ECU&lt;/code&gt;: OBD master ECU.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_OBD_PRIMARY_ECU&lt;/code&gt;: OBD primary ECU.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_OBD_DEP_SEC_ECU&lt;/code&gt;: OBD dependent / secondary ECU (&lt;em&gt;currently not supported&lt;/em&gt;).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: In the current implementation, the OBD master and primary ECUs are widely supported with the following restrictions:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;MIL-Master functionality is not supported by Dem. It has to be implemented via SWCs.&lt;/li&gt;
                          &lt;li&gt;In-Use-Monitor Performance Ratio (IUMPR) is not supported.&lt;/li&gt;
                          &lt;li&gt;No vehicle wide calculation of Service 0x01 PID $1C.&lt;/li&gt;
                          &lt;li&gt;No vehicle wide calculation of Service 0x01 PID $30.&lt;/li&gt;
                          &lt;li&gt;Centralized calculation of Service 0x01 PID$21 and PID $31 are not supported.&lt;/li&gt;
                          &lt;li&gt;No vehicle wide calculation of Service 0x01 PID $41.&lt;/li&gt;
                          &lt;li&gt;Service 0x01 PID $4D, PID $4E, PID $90 and PID $91 are not supported.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;OBD Support kind&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="OBD Support kind"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="1a9e3410-5892-4c69-b33a-91e4ba06cf28"/>
                  <a:da name="DEFAULT" value="DEM_OBD_MASTER_ECU"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                  <a:da name="RANGE">
                    <a:v>DEM_OBD_DEP_SEC_ECU</a:v>
                    <a:v>DEM_OBD_MASTER_ECU</a:v>
                    <a:v>DEM_OBD_PRIMARY_ECU</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DEM_OBD_DEP_SEC_ECU&apos;)" 
                        true="The Dem can be configured only as a Master or Primary ECU."/>
                </v:var>
                <v:var name="DemObdVariant" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch selects the OBD variant if no callout function for reading the active OBD variant is configured.&lt;/p&gt;
                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_OBD_VARIANT_OBD_CLASSIC&lt;/code&gt;: OBD Classic functionality as per SAE J1979.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;: OBDonUDS functionality as per SAE J1979-2.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;In case of &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; without OBD/UDS DTC separation,
                           &lt;code&gt;DemObdDTC&lt;/code&gt; needs to be configured for all OBD relevant events.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;DemObdVariant&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: OBDonUDS cannot be used when &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;
                        and/or &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt; are set to
                        &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;!&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="OBD Variant Selection"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="24ea8cd3-8c61-4c5e-8f01-09f59c63c388"/>
                  <a:da name="DEFAULT" value="DEM_OBD_VARIANT_OBD_CLASSIC"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                           (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)))"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                  ((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                   (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                        true="DemObdVariant shall not be set to DEM_OBD_VARIANT_OBDONUDS when DemFreezeFrameCapture and/or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                  <a:da name="RANGE">
                    <a:v>DEM_OBD_VARIANT_OBD_CLASSIC</a:v>
                    <a:v>DEM_OBD_VARIANT_OBDONUDS</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemCalloutObdVariantFnc" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;If this parameter is enabled, Dem selects the active OBD variant that is returned
                        by the configured callout function instead of using the configured
                        &lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;.&lt;/p&gt;
                        &lt;p&gt;The function must have a prototype compatible to:&lt;/p&gt;
                        &lt;p&gt;&lt;code&gt;extern uint8 Appl_GetObdVariant(void);&lt;/code&gt;&lt;/p&gt;
                        &lt;p&gt;which is declared in &lt;code&gt;Dem_Cfg.h&lt;/code&gt;.&lt;/p&gt;
                        &lt;p&gt;The returned active OBD variant shall always be equal to
                        &lt;ul&gt;
                          &lt;li&gt;DEM_OBD_VARIANT_OBD_CLASSIC&lt;br/&gt;or&lt;/li&gt;
                          &lt;li&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/li&gt;
                        &lt;/ul&gt;
                        If any other value is returned, the behavior is undefined.&lt;/p&gt;
                        &lt;p&gt;A code template can be found in the template file
                        &lt;code&gt;Dem_Callouts.c&lt;/code&gt; together with a description of the recommended
                        integration approach.&lt;/p&gt;
                        &lt;p&gt;See also chapter &quot;Dem integration issues&quot; in the Diagnostic Stack user&apos;s guide.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;&apos;Get active OBD variant&apos; Callout C-Function&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="&apos;Get active OBD variant&apos; Callout C-Function"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="823a507c-5c47-406a-b3eb-3ed99a04cf74"/>
                  <a:da name="DEFAULT" value="Appl_GetObdVariant"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                           false="Invalid name. (no prefixed C function name)"/>
                    <a:tst 
                           expr="node:exists(.) and                                  ((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                   (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                           true="DemObdVariant shall not be selectable via DemCalloutObdVariantFnc when DemFreezeFrameCapture and/or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                  </a:da>
                </v:var>
                <v:var name="DemResetPerformanceCountersAPI" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration parameter defines whether the API &lt;code&gt;Dem_ResetPerformanceCounters()&lt;/code&gt;
                          is available or not.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: &lt;code&gt;Dem_ResetPerformanceCounters()&lt;/code&gt; API is available.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: &lt;code&gt;Dem_ResetPerformanceCounters()&lt;/code&gt; API is not available.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;code&gt;Dem_ResetPerformanceCounters()&lt;/code&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;: must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                            &lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                          &lt;li&gt;At least one event must reference the &lt;code&gt;DemExtendedDataRecordNumber&lt;/code&gt; 0x93, i.e.,
                            Monitor Activity Data must be configured.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Warning: Make sure to delete the Monitor Activity Ratio (MAR) data only in accordance with
                          legal requirements.&lt;/p&gt;
                        &lt;p&gt;Note: The MAR data is not stored non-volatile immediately after the reset. A &lt;code&gt;Dem_Shutdown()&lt;/code&gt;
                          call is required for a non-volatile storage of the MAR data.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Reset performance counters support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="b3711470-480e-469a-b584-c5908e599433"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                               ( ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) ) or                                 (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                               (count(util:distinct(node:refs(util:distinct(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) &gt; 0)"/>
                </v:var>
                <v:var name="DemOccurrenceCounterProcessing" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This configuration switch defines the consideration of the fault
                        confirmation process for the occurrence counter. For OBD and mixed
                        systems (OBD/non OBD, refer to DemOBDSupport) the fault confirmation
                        process must not be considered.&lt;/p&gt;

                        &lt;p&gt;The current implementation of the occurrence counter processing
                        behaves as if the &lt;code&gt;DEM_PROCESS_OCCCTR_TF&lt;/code&gt;
                        would have been selected.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_PROCESS_OCCCTR_CDTC&lt;/code&gt;: the occurrence counter is triggered after the
                              fault confirmation was successful. (&lt;em&gt;currently not supported&lt;/em&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_PROCESS_OCCCTR_TF&lt;/code&gt;: the occurrence counter is triggered by the
                              TestFailed bit only, but the fault confirmation is not considered.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Occurrence Counter Processing"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f443878c-f8dc-4930-9a6a-a63730c18581"/>
                  <a:da name="DEFAULT" value="DEM_PROCESS_OCCCTR_TF"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>DEM_PROCESS_OCCCTR_CDTC</a:v>
                    <a:v>DEM_PROCESS_OCCCTR_TF</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemOperationCycleStatusStorage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines if the operation cycle state is available over the power cycle
                        (stored non-volatile) or not.&lt;br/&gt;
                        The NVRAM block DEM_NVM_BLOCK_ID_DEFAULT needs to be configured (refer to &lt;a href=&quot;path:../DemNvRamBlockId&quot;&gt;DemNvRamBlockId&lt;/a&gt;)
                        to store the operation cycle state non-volatile.&lt;br/&gt;&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: the operation cycle state is stored non-volatile.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: the operation cycle state is only stored
                          volatile&lt;/li&gt;
                        &lt;/ul&gt;

                        Integration notes:&lt;br/&gt;
                          &lt;ul&gt;
                            &lt;li&gt;In case of activated feature, event-specific fault detection counters (FDC)
                            will be reset to 0 (zero) when Dem_PreInit has been called.&lt;/li&gt;
                            &lt;li&gt;In case of activated feature, ALL operation cycle states will be stored non-volatile.
                            Operations cycles which should not be kept started after a power cycle need to be stopped
                            before Dem_Shutdown().&lt;/li&gt;
                            &lt;li&gt;In case of deactivated feature, ONLY operation cycles with &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[1]/DemOperationCycleAutomaticEnd&quot;&gt;DemOperationCycleAutomaticEnd&lt;/a&gt;
                            enabled will be stopped automatically during Dem_Shutdown().&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Operation Cycle Status Storage"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Operation Cycles"/>
                  <a:a name="UUID" value="a73c9c0e-cc5c-4760-aae3-4a3a2cec357f"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(.)) and (count(../DemNvRamBlockId/eb-list::*[as:name(.) != &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;]) = 0)" 
                           true="No Dem NVRAM Block configured, hence Operation Cycle Status cannot be stored non-volatile."/>
                    <a:tst 
                           expr="(node:existsAndFalse(.)) and                                  (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[DemOperationCycleType = &apos;DEM_OPCYC_OBD_DCY&apos;])) and                                  ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                      (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) ) or                                    (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                  (count(util:distinct(node:refs(util:distinct(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemExtendedDataClassRef))/DemExtendedDataRecordClassRef/eb-list::*))[DemExtendedDataRecordNumber = &apos;147&apos;]) &gt; 0)" 
                           true="When Monitor Activity Ratio feature is enabled, DemOperationCycleStatusStorage must be configured to true to ensure that DEM_OPCYC_OBD_DCY state is active over power cycles."/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[DemOperationCycleType = &apos;DEM_OPCYC_OBD_DCY&apos;])) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycleStatusStorage))" 
                        true="If DEM_OPCYC_OBD_DCY is configured, DemOperationCycleStatusStorage should be configured to true, because DEM_OPCYC_OBD_DCY should be available over power cycles and the DCY qualification state is always stored non-volatile"/>
                </v:var>
                <v:var name="DemWWHOBDDTCClassSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether support for WWHOBD DTC Class
                          is enabled or not.&lt;/p&gt;

                        &lt;p&gt;Range:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Support for WWHOBD DTC Class is enabled and their configuration
                            can be done for each OBD relevant &lt;code&gt;DemDTCClass&lt;/code&gt; via &lt;code&gt;DemWWHOBDDTCClass&lt;/code&gt;
                            parameter.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Support for WWHOBD DTC Class is disabled.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;:
                                      must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;:
                                      must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;:
                                      must be configured.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="WWHOBD DTC Class Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="a20ef8b7-5dee-4f24-a15b-6adfe6d3365f"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)) and                                 (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)))"/>
                </v:var>
                <v:var name="DemOBDIumprFunctionsEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether IUMPR related functions are available or not.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: The functions Dem_RepIUMPRFaultDetect(), Dem_RepIUMPRDenLock()
                          and Dem_RepIUMPRDenRelease() are available.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: The functions Dem_RepIUMPRFaultDetect(), Dem_RepIUMPRDenLock()
                          and Dem_RepIUMPRDenRelease() are not available.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;IUMPR functions enabled&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: The parameter option &lt;code&gt;true&lt;/code&gt; will only provide dummy API implementation&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="IUMPR functions enabled"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                </v:var>
                <v:var name="DemPTOSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This configuration switch defines whether PTO support (and therefore
                        PID $1E support) is enabled or not.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="PTO Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="718e82c1-41bd-4b1a-8caf-1a34d017dd5e"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="DemStatusBitHandlingTestFailedSinceLastClear" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether the aging and displacement
                        mechanism shall be applied to the &quot;TestFailedSinceLastClear&quot; status bits&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DEM_STATUS_BIT_AGING_AND_DISPLACEMENT&lt;/code&gt;: The &quot;TestFailedSinceLastClear&quot;
                                status bits are reset to 0, if aging or displacement applies (like done for the
                                &quot;ConfirmedDTC&quot; status bits).&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_STATUS_BIT_NORMAL&lt;/code&gt;: Aging and displacement has no impact on the
                                &quot;TestFailedSinceLastClear&quot; status bits &lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Handling of TestFailedSinceLastClear Status-Bit"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:bcf344c1-e4b6-47b2-836b-93bda8616623"/>
                  <a:da name="DEFAULT" value="DEM_STATUS_BIT_NORMAL"/>
                  <a:da name="RANGE">
                    <a:v>DEM_STATUS_BIT_AGING_AND_DISPLACEMENT</a:v>
                    <a:v>DEM_STATUS_BIT_NORMAL</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemResetPendingBitOnOverflow" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines, whether the pending bit
                           is reset or not while an event memory entry will be displaced or aged
                           (the bit will not be set without an event memory entry).&lt;/p&gt;
                        &lt;p&gt;Thus, it affects the way in which the PDTC bit is read with
                           the help of UDS service &lt;em&gt;ReadDTCInformation (0x19)&lt;/em&gt;.&lt;/p&gt;
                        &lt;p&gt;Note: This parameter influences the reporting of DTCs as per
                           Dem.ASR42.SWS_Dem_00410 (ASR R.4.2) and this requirement is completely satisfied
                           only when this parameter is enabled.&lt;/p&gt;

                        &lt;p&gt;Range
                          &lt;ul&gt;
                            &lt;li&gt;true:  The UDS status bit PDTC is not set without an event
                                       memory entry. The UDS status bit PDTC is reset if the event
                                       memory entry is displaced or aged.
                            &lt;/li&gt;
                            &lt;li&gt;false: The PDTC UDS status bit will be set independent of
                                       an event memory entry and remains set for displaced
                                       or aged event memory entries. Due to this behavior
                                       the PDTC bit cannot be used for filtering only
                                       events\DTCs that have an entry in the event memory.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;

                        &lt;p&gt;Note: Independent of this parameter,
                           the bit will always be reset during ClearDTC.&lt;/p&gt;
                        &lt;p&gt;Note: The PDTC behavior is decoupled from the R4.1
                        configuration parameter
                        &lt;a href=&quot;path:../DemResetConfirmedBitOnOverflow&quot;&gt;
                        DemResetConfirmedBitOnOverflow&lt;/a&gt;
                        by this separated parameter.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Reset Pending Bit On Overflow"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="71932fe6-2603-332b-a31d-c33213bb32a1"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DemUpdateOccOrderOnEventEntryUpdate" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines, the behaviour for updating the occurrence order (OccOrder).&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: update OccOrder with every update of the related event memory entry&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: update OccOrder only once when event memory entry is created&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Update OccOrder On Event Entry Change"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="3c8fc7aa-6d5b-479c-ab10-e5ee4f17698c"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="DemResetConfirmedBitOnOverflow" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines whether the confirmed bit is reset or
                           not while an event memory entry will be displaced
                           (the bit will not be set without an event memory entry).&lt;/p&gt;
                        &lt;p&gt;Thus, it affects the way in which the CDTC bit is read with
                           the help of UDS service &lt;em&gt;ReadDTCInformation (0x19)&lt;/em&gt;.&lt;/p&gt;
                        &lt;p&gt;Note: This parameter influences the reporting of DTCs as per
                           Dem.ASR42.SWS_Dem_00410 (ASR R.4.2) and this requirement is completely satisfied
                           only when this parameter is enabled.&lt;/p&gt;
                        &lt;p&gt;If both OBDonUDS and event combination are enabled, then DemResetConfirmedBitOnOverflow must be enabled.&lt;/p&gt;

                        &lt;p&gt;Range
                          &lt;ul&gt;
                            &lt;li&gt;true:  The UDS status bit CDTC is not set without an event
                                       memory entry. The UDS status bit CDTC is reset if the event
                                       memory entry is displaced.
                            &lt;/li&gt;
                            &lt;li&gt;false: The CDTC UDS status bit will be set independent of
                                       an event memory entry and remains set for displaced
                                       event memory entries.
                                       The following functionalities result:
                                       &lt;ul&gt;
                                         &lt;li&gt;The CDTC bit cannot be used for filtering
                                             only events\DTCs that have an entry in the event memory.
                                             All events will be included in the filtering operation.&lt;/li&gt;
                                         &lt;li&gt;If at least one event has fault confirmation enabled,
                                             meaning Event Failure Cycle Counter Threshold
                                             (DemEventFailureCycleCounterThreshold) must be configured,
                                             it allows for a behavior where the &lt;em&gt;fault confirmation&lt;/em&gt;
                                             is available &lt;em&gt;without an event memory entry&lt;/em&gt;.&lt;/li&gt;
                                       &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;

                        &lt;p&gt;Note: Independent of this parameter,
                           the bit will always be reset during aging and ClearDTC.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemResetPendingBitOnOverflow&quot;&gt;Reset Pending Bit On Overflow&lt;/a&gt;: must be disabled,
                            to allow disabling of &quot;Reset Confirmed Bit On Overflow&quot;.
                          &lt;/li&gt;
                        &lt;li&gt;&lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;/&lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;:
                          when set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;, &lt;em&gt;Reset Confirmed Bit On Overflow&lt;/em&gt; cannot be set to &lt;code&gt;false&lt;/code&gt;.
                        &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Reset Confirmed Bit On Overflow"/>
                  <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="32711aa3-16bd-7374-e31d-a26482ea9812"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndFalse(.)) and (node:existsAndTrue(../DemResetPendingBitOnOverflow))" 
                           true="The ConfirmedDTC bit must not be set without the PendingDTC bit. DemResetConfirmedBitOnOverflow can only be set to FALSE if DemResetPendingBitOnOverflow is set to FALSE."/>
                    <a:tst 
                           expr="(node:existsAndFalse(.)) and ( (../DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or (../DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) )" 
                           true="DemResetConfirmedBitOnOverflow is not allowed to be set to FALSE when DemFreezeFrameCapture and/or DemExtendedDataCapture is set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemOBDSupport) and                                   ((node:exists(../DemCalloutObdVariantFnc)) or (../DemObdVariant = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) and                                   (../DemEventCombinationSupport != &apos;DEM_EVCOMB_DISABLED&apos;) and                                   (node:existsAndFalse(.)))" 
                           true="DemResetConfirmedBitOnOverflow must be enabled when the event combination is enabled and the OBD variant is configured as OBDonUDS (DEM_OBD_VARIANT_OBDONUDS) or is selectable during runtime (DemCalloutObdVariantFnc)."/>
                  </a:da>
                </v:var>
                <v:var name="DemStatusBitStorageTestFailed" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Activate/Deactivate the permanent storage of the &quot;TestFailed&quot;
                        status bits.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: storage activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: storage deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;When &lt;a href=&quot;path:../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemStatusBitStorageTestFailedPerEvent&quot;&gt;DemStatusBitStorageTestFailedPerEvent&lt;/a&gt;
                        is enabled it will overwrite this parameter for individual events.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Status Bit Storage Test Failed"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="97150ef8-6370-446a-b10f-d49501df05e5"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.)) and count(../DemNvRamBlockId/eb-list::*[as:name(.) != &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;]) = 0" 
                        true="If the configuration parameter Status Bit Storage Test Failed is set on true then also the NvM block reference DEM_NVM_BLOCK_ID_DEFAULT must be configured."/>
                </v:var>
                <v:var name="DemStorageConditionSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This configuration switch defines whether support for storage conditions
                        is enabled or not.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: support for storage conditions is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: support for storage conditions is disabled&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Storage Condition Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="659dfa9a-e65d-40ef-b67a-5f1a16ea51c8"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="DemImmediateStorageInternalEvents" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines if internal events are stored
                        immediately.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: internal events are stored immediately&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: internal events are not stored immediately&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;Warning: Take into consideration that only configured internal events
                          will be affected by this configuration parameter. For the events that are
                          re-calibrated to be internal, the old Immediate Storage configuration will
                          be taken into consideration.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Immediate Storage For Internal Events&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemStoreInternalEvents&quot;&gt;DemStoreInternalEvents&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Immediate Storage For Internal Events"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:a name="UUID" value="659dfa9a-e65d-40ef-b67a-5f1a16ea51c9"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemStoreInternalEvents)"/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(.)) and (not(node:exists(../DemImmediateNvStorageLimit)))" 
                           true="DemGeneral/DemImmediateNvStorageLimit is not enabled, but DemImmediateNvStorage is set."/>
                    <a:tst 
                           expr="(node:existsAndTrue(.)) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[not(node:refexists(DemDTCClassRef))]) = 0)" 
                           true="Suboptimal configuration, DemImmediateStorageInternalEvents is enabled                                  but no internal event is configured."/>
                    <a:tst expr="(node:existsAndTrue(.))" 
                           true="By enabling this parameter you will end up in immediate storage."/>
                  </a:da>
                </v:var>
                <v:var name="DemIntermediateNvStorageOfDTCStatus" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Enables the intermediate non-volatile storage of the DTC status.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Intermediate non-volatile storage of the DTC status is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Intermediate non-volatile storage of the DTC status is disabled&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;If enabled, the non-volatile storage of the DTC status is triggered at intermediate points in time, whenever
                        the immediate storage of the event related data is triggered.&lt;/p&gt;
                        &lt;p&gt;For combined DTCs, the event status of all events contributing to the combined DTC status is stored.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Intermediate DTC status storage&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DemImmediateNvStorage&lt;/code&gt;: must be set to &lt;code&gt;true&lt;/code&gt; for a DTC.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemImmediateStorageInternalEvents&quot;&gt;DemImmediateStorageInternalEvents&lt;/a&gt;:
                            when set to &lt;code&gt;true&lt;/code&gt;, it activates the intermediate non-volatile storage of the DTC status for internal events.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemStatusBitStorageTestFailed&quot;&gt;DemStatusBitStorageTestFailed&lt;/a&gt;:
                            when set to &lt;code&gt;false&lt;/code&gt;, it deactivates the non-volatile storage of the TestFailed (TF) status bit.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemNvRamBlockId&quot;&gt;DemNvRamBlockId&lt;/a&gt;: NvM Block Configuration must be configured with at least one NvM block.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Intermediate DTC status storage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:a name="UUID" value="659dfa9a-e65d-40ef-b67a-5f1a16ea51c9"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="count(../DemNvRamBlockId/eb-list::*) &gt; 0"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="((node:existsAndTrue(.)) and node:existsAndTrue(not((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents) and node:exists(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[not(node:refexists(DemDTCClassRef))])) or                                  node:exists(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)])))" 
                        true="DemIntermediateNvStorageOfDTCStatus has no effect, because DemImmediateNvStorage is disabled for all the DTCs and                                  DemImmediateStorageInternalEvents is disabled."/>
                </v:var>
                <v:var name="DemTaskTime" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Allows to configure the time for the periodic cyclic task (in seconds).&lt;/p&gt;

                        &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This configuration value shall
                        be equal to the value in the Basic Software
                        Scheduler configuration of the Rte module.&lt;/p&gt;

                        &lt;p&gt;The AUTOSAR configuration standard is to use SI units, so this
                        parameter is defined as float value in seconds.&lt;/p&gt;

                        &lt;p&gt;&lt;em&gt;min&lt;/em&gt;:
                        A negative value is not allowed.&lt;/p&gt;

                        &lt;p&gt;&lt;em&gt;max&lt;/em&gt;:
                        After the event status was reported, processing shall be
                        completed within 100ms in order to have the fault entry status
                        information updated as soon as possible (e.g. for PID $01).&lt;/p&gt;

                        &lt;p&gt;&lt;em&gt;upperMultiplicity&lt;/em&gt;:
                        Exactly one &lt;code&gt;TaskTime&lt;/code&gt; must be
                        specified per configuration.&lt;/p&gt;

                        &lt;p&gt;&lt;em&gt;lowerMultiplicity&lt;/em&gt;:
                        Exactly one &lt;code&gt;TaskTime&lt;/code&gt; must be
                        specified per configuration.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Task Time (s)"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="0f1d3f95-3e20-4314-9192-70382b94b54f"/>
                  <a:da name="DEFAULT" value="0.02"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0.1"/>
                    <a:tst expr="&gt;=0.001"/>
                  </a:da>
                </v:var>
                <v:var name="DemTriggerDcmReports" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Activate/Deactivate the notification to the Diagnostic Communication
                        Manager for ROE processing.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Dcm ROE notification activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Dcm ROE notification deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Trigger Dcm Reports"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e3f1c489-be4e-44c0-bae1-3c89f63de201"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              true="Dcm notification is enabled, but Dcm is disabled or missing." 
                              expr="node:existsAndTrue(.) and count(as:modconf(&apos;Dcm&apos;)/eb-list::*) = 0"/>
                      <mt:tst 
                              true="Dcm notification is enabled, but Dcm usage is disabled." 
                              expr="node:existsAndTrue(.) and node:existsAndFalse(../DemDcmUsage)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="DemTriggerDltReports" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;Activate/Deactivate the notification to the Diagnostic
                        Log and Trace.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Dlt notification activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Dlt notification deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Trigger Dlt Reports"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1ad6f3b5-9c5c-4474-9c6e-3ee6b2eb4e82"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:existsAndTrue(.) and count(as:modconf(&apos;Dlt&apos;)/eb-list::*) = 0" 
                        true="Dlt notification is enabled, but Dlt is disabled or missing."/>
                </v:var>
                <v:var name="DemTriggerFiMReports" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Activate/Deactivate the notification
                        to the Function Inhibition Manager. It is used by FiM only if
                        &lt;a href=&quot;path:../../../../../FiM/ELEMENTS/FiM/FiMGeneral/FiMEventUpdateTriggeredByDem&quot;&gt;
                        FiMEventUpdateTriggeredByDem&lt;/a&gt; is enabled in FiM.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: FiM notification activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: FiM notification deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Trigger FiM Reports"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1730f9b7-b873-461b-aa0a-61064b8395b9"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="node:existsAndTrue(.) and count(as:modconf(&apos;FiM&apos;)/eb-list::*) = 0" 
                           true="FiM notification is enabled, but FiM is disabled or missing."/>
                    <a:tst 
                           expr="node:existsAndTrue(.) and node:existsAndFalse(as:modconf(&apos;FiM&apos;)[1]/FiMGeneral/FiMEventUpdateTriggeredByDem)" 
                           true="FiM notification is enabled, but it is not used by FiM because Event Update Triggered By Dem is disabled in FiM."/>
                  </a:da>
                </v:var>
                <v:var name="DemSupportFiMFDCThreshold" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Activate/Deactivate the notification
                        to the Function Inhibition Manager on unconfirmed FDC threshold. It is used by FiM only if
                        &lt;a href=&quot;path:../../../../../FiM/ELEMENTS/FiM/FiMGeneral/FiMExtendedSupport&quot;&gt;
                        &lt;/a&gt; is enabled in FiM.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: FiM notification activated and interfaces are available&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: FiM notification deactivated and interfaces are absent&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: If FiM notification is enabled, then &lt;code&gt;DemExtendedDataCapture&lt;/code&gt; configuration
                        parameter has to be set to &quot;DEM_TRIGGER_ON_FDC_THRESHOLD&quot;.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Support FiM FDC Threshold"/>
                  <a:a name="ORIGIN" value="VCC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="221f715e-5f05-4bc0-99c2-14a9eebd1bf2"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:existsAndTrue(.)) and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)" 
                        true="FiM notification is enabled, but DemExtendedDataCapture is not configured to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="node:existsAndTrue(.) and count(as:modconf(&apos;FiM&apos;)/eb-list::*) = 0" 
                           true="FiM notification is enabled, but FiM is disabled or missing."/>
                    <a:tst 
                           expr="node:existsAndTrue(.) and node:existsAndFalse(as:modconf(&apos;FiM&apos;)[1]/FiMGeneral/FiMExtendedSupport)" 
                           true="FiM support for FDC Threshold is disabled (FiMExtendedSupport)."/>
                  </a:da>
                </v:var>
                <v:var name="DemTriggerMonitorInitBeforeClearOk" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;Defines if the monitor re-initialization has to be triggered before or
                        after the Dem module returns &lt;code&gt;DEM_CLEAR_OK&lt;/code&gt;.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: trigger re-initialization before
                          &lt;code&gt;DEM_CLEAR_OK&lt;/code&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: trigger re-initialization after
                          &lt;code&gt;DEM_CLEAR_OK&lt;/code&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Trigger Monitor Init Before Clear Ok"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2c8c23ed-bc8e-4e2b-9440-16abdb5f8399"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="DemCallbackInitMForEReenabledSupport" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration parameter specifies whether support of InitMonitorForEvent
                        callback function with InitMonitorReason &lt;code&gt;DEM_INIT_MONITOR_REENABLED&lt;/code&gt;
                        is enabled or not.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: enable support of InitMonitorForEvent callback function
                          with InitMonitorReason &lt;code&gt;DEM_INIT_MONITOR_REENABLED&lt;/code&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: disable support of InitMonitorForEvent callback function
                          with InitMonitorReason &lt;code&gt;DEM_INIT_MONITOR_REENABLED&lt;/code&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Init Monitor for Event Reenabled Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2c8c23ed-bc8e-4e2b-9440-16abdb5f8399"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DemMaxHandledInitMonitorReenabledPerScheduling" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the maximum number of InitMonitorForEvent callbacks to be triggered per
                          invocation of Dem_MainFunction, when DTC setting is re-enabled. This configuration item has
                          effect only if the value is less than the number of configured DemCallbackInitMForE/DemCallbackInitMForEFnc
                          callbacks.&lt;/p&gt;
                        &lt;p&gt;If a large value is configured for &lt;code&gt;DemMaxHandledInitMonitorReenabledPerScheduling&lt;/code&gt;,
                          the run time of Dem_MainFunction will correspondingly increase when DTC setting is re-enabled.&lt;br/&gt;
                          On the other hand, more time will be required until all configured InitMonitorForEvent callbacks are
                          triggered, if a small value is configured for &lt;code&gt;DemMaxHandledInitMonitorReenabledPerScheduling&lt;/code&gt;.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCallbackInitMForEReenabledSupport&quot;&gt;DemCallbackInitMForEReenabledSupport&lt;/a&gt;:
                          must be set to &lt;code&gt;true&lt;/code&gt; to enable support of InitMonitorForEvent callback function
                          with InitMonitorReason &lt;code&gt;DEM_INIT_MONITOR_REENABLED&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum number of InitMonitorForEvent callbacks triggered per scheduling"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c458bfb8-abe6-11ea-bb37-0242ac130002"/>
                  <a:da name="DEFAULT" value="50"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemCallbackInitMForEReenabledSupport))"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=1023"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemTypeOfDTCSupported" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This parameter defines the format returned
                        by &lt;code&gt;Dem_GetTranslationType&lt;/code&gt; and
                        does not relate to/influence the supported
                        Dem functionality.

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DTC_TRANSLATION_ISO11992_4&lt;/code&gt;: ISO11992-4 DTC format.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DTC_TRANSLATION_ISO14229_1&lt;/code&gt;: ISO14229-1 DTC format (3-byte format).&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DTC_TRANSLATION_ISO15031_6&lt;/code&gt;: IISO15031-6 DTC format (2-byte format).&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DTC_TRANSLATION_SAEJ1939_73&lt;/code&gt;: SAEJ1939-73 DTC format.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_DTC_TRANSLATION_J2012DA_FORMAT_04&lt;/code&gt;: SAE_J2012-DA_DTCFormat_00 (3-byte format).&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Supported DTC Type"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c70fb50d-c284-48d8-93f2-3f07dcfa838d"/>
                  <a:da name="DEFAULT" value="DEM_DTC_TRANSLATION_ISO14229_1"/>
                  <a:da name="RANGE">
                    <a:v>DEM_DTC_TRANSLATION_ISO11992_4</a:v>
                    <a:v>DEM_DTC_TRANSLATION_ISO14229_1</a:v>
                    <a:v>DEM_DTC_TRANSLATION_ISO15031_6</a:v>
                    <a:v>DEM_DTC_TRANSLATION_SAEJ1939_73</a:v>
                    <a:v>DEM_DTC_TRANSLATION_J2012DA_FORMAT_04</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemTypeOfFreezeFrameRecordNumeration" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the type of assigning freeze frame record
                        numbers for event-specific freeze frame records.&lt;/p&gt;

                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_FF_RECNUM_CALCULATED&lt;/code&gt;: freeze frame records will be numbered
                              consecutively starting with 1 in their chronological order.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_FF_RECNUM_CONFIGURED&lt;/code&gt;: freeze frame records will be numbered
                              based on the given configuration in their chronological order.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Constraint: If &lt;code&gt;DEM_FF_RECNUM_CONFIGURED&lt;/code&gt; is selected, DemFreezeFrameRecNumClass
                          list shall not be empty.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Type Of Freeze Frame Record Numeration"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="ade7968d-c88c-4774-85e6-26ba493d81e3"/>
                  <a:da name="DEFAULT" value="DEM_FF_RECNUM_CALCULATED"/>
                  <a:da name="INVALID" type="XPath" 
                        expr=". = &apos;DEM_FF_RECNUM_CONFIGURED&apos; and  count(../DemFreezeFrameRecNumClass/eb-list::*) = 0" 
                        true="DemFreezeFrameRecNumClass is empty, at least one record number class list shall be configured"/>
                  <a:da name="RANGE">
                    <a:v>DEM_FF_RECNUM_CALCULATED</a:v>
                    <a:v>DEM_FF_RECNUM_CONFIGURED</a:v>
                  </a:da>
                </v:var>
                <v:ref name="DemCommonFFDataClassRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Parameter used for pointing out the common part for the ordinary AUTOSAR
                        freeze frame.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;If this parameter is enabled, all regular freeze frames
                            configured via DemFreezeFrameClassRef will always contain
                            the data given by this reference as common part in front
                            of them, even if no individual freeze frame is configured
                            by DemFreezeFrameClassRef.
                            In this case, the regular freeze frame cannot be deactivated
                            completely for any event.
                          &lt;/li&gt;
                          &lt;li&gt;If this parameter is disabled, there will be
                            no common data attached in front of the regular freeze frames.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;This mechanism can be used for saving configuration data in ROM
                        and to lower the effort to configure/calibrate the freeze frames.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Common freeze frame data must not include
                        data elements with parameter DemDataElementCaptureTrigger
                        configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Common part of Freeze Frame Class"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="998bb631-31f9-4584-83dd-22acbd8ea1d8"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="node:refvalid(.)" false="Invalid reference."/>
                    <a:tst 
                           expr="(count(node:refs(node:refs( node:refs(.)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                           true="The common freeze frame must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameClass"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="node:exists(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventKind = &apos;DEM_EVENT_KIND_SEV&apos;])" 
                        true="Note for events with DemEventKind set to DEM_EVENT_KIND_SEV: The data for the common freeze frame (FF) must not be retrieved from the same module that provides the data for the individual FF part. In future releases the common FF might not be considered at all for security events."/>
                </v:ref>
                <v:var name="DemDevFreezeFrameSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter configures whether the Development Freeze Frames are supported or not:
                        &lt;ul&gt;
                          &lt;li&gt;TRUE: Development Freeze Frame A (refer to &lt;em&gt;DemDevFreezeFrameAClassRef&lt;/em&gt;) and Development Freeze Frame B (&lt;em&gt;DemDevFreezeFrameBClassRef&lt;/em&gt;) are supported.&lt;/li&gt;
                          &lt;li&gt;FALSE: Development Freeze Frames are not supported.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;Development freeze frames are:
                        &lt;ul&gt;
                          &lt;li&gt;not supported if event combination is enabled (see &lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;not immediately stored (see &lt;em&gt;DemImmediateNvStorage&lt;/em&gt;)&lt;/li&gt;
                          &lt;li&gt;not prestored (see &lt;em&gt;DemFFPrestorageSupported&lt;/em&gt;) i.e., it is not supported by the API &lt;code&gt;Dem_PrestoreFreezeFrame&lt;/code&gt;&lt;/li&gt;
                          &lt;li&gt;accessible only to the Dcm e.g., it cannot be read by the APIs &lt;code&gt;Dem_GetEventFreezeFrameData&lt;/code&gt;, &lt;code&gt;Dem_GetEventFreezeFrameDataEx&lt;/code&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;: must be enabled
                            if &lt;em&gt;Development Freeze Frame Support&lt;/em&gt; is used.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Development Freeze Frame Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="ade7968d-c88c-4774-85e6-26ba493d81e2"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:existsAndTrue(.)) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport))" 
                        true="DemEventDisplacementSupport configuration parameter must be enabled if Development Freeze Frames are used."/>
                  <a:da name="READONLY" value="false"/>
                </v:var>
                <v:ref name="DemCommonFFDataDevAClassRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This reference defines the link to
                        the common part for the Development Freeze Frame A Class.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;If this parameter is enabled, all development freeze frames of
                            type A configured via DemDevFreezeFrameAClassRef will always contain
                            the data given by this reference as common part in front of them,
                            even if no individual freeze frame is configured by
                            DemDevFreezeFrameAClassRef.
                            In this case, the development freeze frame A cannot be
                            deactivated completely for any event.
                          &lt;/li&gt;
                          &lt;li&gt;If this parameter is disabled, there will be no common data
                             attached in front of the development freeze frames of type A.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;This mechanism can be used for saving configuration data in ROM
                        and to lower the effort to configure/calibrate the freeze frames.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Common development freeze frame data must not include
                        data elements with parameter DemDataElementCaptureTrigger
                        configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Common part of Development Freeze Frame A Class&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Common part of Development Freeze Frame A Class"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="2977ff17-76ae-446b-85da-fc75f19fa939"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemDevFreezeFrameSupport))"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(../DemDevFreezeFrameSupport = &apos;true&apos;) and not(node:refvalid(.))" 
                           true="Invalid reference."/>
                    <a:tst 
                           expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                  (count(node:refs(node:refs( node:refs(.)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                           true="The common part of development freeze frames A must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameClass"/>
                </v:ref>
                <v:var name="DemMaxNumberDevFreezeFrameAEntry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Maximum number of Development Freeze Frame A events.&lt;/p&gt;
                        &lt;p&gt;The size of Development Freeze Frame A has to fit to
                           the size of Primary memory.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Development Freeze Frame A Entries&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Development Freeze Frame A Entries"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="d689df29-eaaa-4041-b072-7819c94b4cc1"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemDevFreezeFrameSupport))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The configured size of Development Freeze Frame A needs to be smaller than                             or equal to the maximum number of events which can be stored in the primary memory." 
                              expr="(. &gt; num:integer(../DemMaxNumberEventEntryPrimary))"/>
                      <mt:tst 
                              true="If the Development Freeze Frame A is enabled at least one event must be assigned to it.                       Otherwise set the &apos;Maximum size of Development Freeze Frame A Class&apos; to 0." 
                              expr="(. &gt; 0) and (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDevFreezeFrameAClassRef)]) = 0)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="DemMaxSizeDevFreezeFrameAEntry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;This size (in bytes) will be reserved for each development freeze frame A entry in RAM/NVRAM.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;During calibration the total size of the development freeze frame A including the common freeze frame
                        must never be larger than this value. If the size gets larger than this configured value, the behavior is undefined.&lt;/b&gt;&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum size of Development Freeze Frame A Class&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                           &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemMaxNumberDevFreezeFrameAEntry&quot;&gt;DemMaxNumberDevFreezeFrameAEntry&lt;/a&gt;:
                              must be &gt; 0.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum size of Development Freeze Frame A Class"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="d689df29-eaaa-4041-b072-7819c94b4cc2"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               node:exists(../DemMaxNumberDevFreezeFrameAEntry) and                               (../DemMaxNumberDevFreezeFrameAEntry &gt; 0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65545"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumberDevFreezeFrameBEntry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Maximum number of Development Freeze Frame B events.&lt;/p&gt;
                        &lt;p&gt;The size of Development Freeze Frame B has to fit to
                           the size of Primary memory.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Development Freeze Frame B Entries&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemDevFreezeFrameSupport&quot;&gt;DemDevFreezeFrameSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Development Freeze Frame B Entries"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="d689df29-eaaa-4041-b072-7819c94b4cc3"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemDevFreezeFrameSupport))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The configured size of Development Freeze Frame B needs to be smaller than                             or equal to the maximum number of events which can be stored in the primary memory." 
                              expr="(. &gt; num:integer(../DemMaxNumberEventEntryPrimary))"/>
                      <mt:tst 
                              true="If the Development Freeze Frame B is enabled at least one event must be assigned to it.                       Otherwise set the &apos;Maximum size of Development Freeze Frame A Class&apos; to 0." 
                              expr="(. &gt; 0) and (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDevFreezeFrameBClassRef)]) = 0)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="DemMaxSizeDevFreezeFrameBEntry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This value is only needed for calibration (without event combination).&lt;/p&gt;
                        &lt;p&gt;This size (in bytes) will be reserved for each development freeze frame B entry in RAM/NVRAM.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;During calibration the total size of the development freeze frame B
                        must never be larger than this value. If the size gets larger than this configured value, the behavior is undefined.&lt;/b&gt;&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Maximum size of Development Freeze Frame B Class&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be disabled (&lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemMaxNumberDevFreezeFrameBEntry&quot;&gt;DemMaxNumberDevFreezeFrameBEntry&lt;/a&gt;:
                              must be &gt; 0.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum size of Development Freeze Frame B Class"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:a name="UUID" value="d689df29-eaaa-4041-b072-7819c94b4cc3"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               node:exists(../DemMaxNumberDevFreezeFrameBEntry) and                               (../DemMaxNumberDevFreezeFrameBEntry &gt; 0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65545"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemStoreInternalEvents" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration parameter defines whether storage of internal events
                           (DemDTCClassRef is disabled), including freeze frames and extended data,
                           is performed or only the event status is updated:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Event-related data of internal events will be stored.
                              (With &lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;calibration support&lt;/a&gt;,
                              an event can be re-calibrated to an internal event by calibrating the
                              DTC value to 0.)&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Event-related data of internal events will
                              not be stored.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: UDS Status-Byte will be updated regardless whether this parameter
                           is enabled or disabled.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Dem Store Internal Events"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f3eac8ac-ea30-42ef-996f-9113fd7f1653"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="DemVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Activate/Deactivate the version information API.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: version information activated&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: version information deactivated&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Version Info API"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="35fe1423-25dd-442d-a9e9-6ed988f1b9ff"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:ref name="DemMILIndicatorRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the indicator representing the MIL.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;MIL Indicator&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="MIL Indicator"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="abc977ab-b417-44e2-a19a-236ae094a169"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemOBDSupport)"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(../DemOBDSupport)) and (not(node:refvalid(.)))" 
                           true="Invalid reference."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemOBDSupport)) and                                  (node:refvalid(.)) and                                  (node:existsAndTrue(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*) = 0)" 
                           true="Please configure at least one indicator class."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemOBDSupport)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef]) = 0) " 
                           true="The DemMILIndicatorRef must not be identical to any of the J1939 lamp indicator references."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemProtectLampIndicatorRef)) and                                  (node:value(.) = node:value(../DemProtectLampIndicatorRef))" 
                           true="The DemMILIndicatorRef must not be identical to any of the J1939 protect lamp indicator references."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemRedStopLampIndicatorRef)) and                                  (node:value(.) = node:value(../DemRedStopLampIndicatorRef))" 
                           true="The DemMILIndicatorRef must not be identical to any of the J1939 red stop lamp indicator references."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemAmberWarningLampIndicatorRef)) and                                  (node:value(.) = node:value(../DemAmberWarningLampIndicatorRef))" 
                           true="The DemMILIndicatorRef must not be identical to any of the J1939 amber warning lamp indicator references."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemIndicator"/>
                </v:ref>
                <v:ref name="DemUDSOBDFreezeFrameClassRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This reference defines the link to the freeze frame for emission related diagnostics over UDS
                          (OBDonUDS).&lt;/p&gt;
                        &lt;p&gt;In contrast to the classic OBD freeze frame, not only the first, but also the most recent
                          occurrence of the OBD freeze frame is stored. The number of stored OBD freeze frame pairs
                          corresponds to &lt;a href=&quot;path:../DemMaxNumberEventEntryPrimary&quot;&gt;DemMaxNumberEventEntryPrimary&lt;/a&gt;,
                          i.e. the OBDonUDS freeze frames are stored for every emission related event, which is
                          stored in the primary memory.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;OBDonUDS Freeze Frame Class&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt; must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;
                              &lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;If the OBDonUDS freeze frame is configured with &lt;em&gt;DemUDSOBDFreezeFrameClassRef&lt;/em&gt; and
                          &lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; is configured, i.e.
                          switching of the OBD variant is possible, also the classic OBD freeze frame must be configured
                          (see &lt;a href=&quot;path:../../DemConfigSet/eb-list::*/DemPidClass&quot;&gt;DemPidClass&lt;/a&gt;).&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="OBDonUDS Freeze Frame Class"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="3a2376b5-dc83-40e4-9c5c-4b500b086131"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemOBDSupport)) and                                                            ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                                              (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                                              (node:exists(../DemCalloutObdVariantFnc)) )"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(../DemOBDSupport) and                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;))) and                                  (not(node:refvalid(.)))" 
                           true="Invalid reference."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemOBDSupport)) and                                  (node:exists(../DemCalloutObdVariantFnc)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemPidClass/eb-list::*) = 0)" 
                           true="If DemCalloutObdVariantFnc is enabled and DemUDSOBDFreezeFrameClassRef is configured for the OBDonUDS freeze frame, also PIDs for the classic OBD freeze frame must be configured."/>
                    <a:tst 
                           expr="(count(node:refs(node:refs(node:refs(.)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)/DemDataElementCaptureTrigger[.=&apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;]) &gt; 0)" 
                           true="The OBDonUDS freeze frame must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemFreezeFrameClass"/>
                </v:ref>
                <v:var name="DemOBDonUDSFreezeFrameUpdateTrigger" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;This configuration switch selects the trigger for updating the last occurrence of the OBDonUDS freeze frame.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_TEST_FAILED_THIS_OPERATION_CYCLE&lt;/code&gt; : The last OBDonUDS freeze frame occurrence is
                          updated at most once per DCY, on the TFTOC UDS status bit transition from 0 to 1.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_TFTOC_AND_TF&lt;/code&gt; : The last OBDonUDS freeze frame occurrence is updated on the
                          transitions from 0 to 1 of the TFTOC and TF UDS status bits.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: A TFTOC transition without a TF transition updates the last occurrence of an already stored OBDonUDS
                          freeze frame. The initial storage of the first and last OBDonUDS freeze frame is only done at a TF transition.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;DemOBDonUDSFreezeFrameUpdateTrigger&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt; must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                              &lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemUDSOBDFreezeFrameClassRef&quot;&gt;DemUDSOBDFreezeFrameClassRef&lt;/a&gt;
                               must be referencing to a valid Freeze Frame class.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="OBDonUDS Freeze Frame Update Trigger"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:da name="DEFAULT" 
                        value="DEM_TRIGGER_ON_TEST_FAILED_THIS_OPERATION_CYCLE"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                 (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                 (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef))"/>
                  <a:da name="RANGE">
                    <a:v>DEM_TRIGGER_ON_TEST_FAILED_THIS_OPERATION_CYCLE</a:v>
                    <a:v>DEM_TRIGGER_ON_TFTOC_AND_TF</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemMaxNumEventsPerReadinessGroup" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        
                        &lt;p&gt;Maximum number of events per OBD Readiness Group.&lt;/p&gt;
                        &lt;p&gt;This parameter controls the maximum number of events which can be
                          assigned to an OBD Readiness Group.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Events per Readiness Group&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;:must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemEventCombinationSupport&quot;&gt;DemEventCombinationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;DEM_EVCOMB_DISABLED&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;:
                              must be set to &lt;code&gt;DEM_OBD_VARIANT_OBD_CLASSIC&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;:
                              must not be configured.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibrationConfigKind&quot;&gt;DemReadinessGroupCalibrationConfigKind&lt;/a&gt;:
                              must be set to &lt;code&gt;DEM_NUMBER_OF_SLOTS_COMMON_CONFIG&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Events per Readiness Group "/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="6b269516-dbb3-4f86-8ed7-24ca44e92337"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                           (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventCombinationSupport = &apos;DEM_EVCOMB_DISABLED&apos;) and                               ( (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc))) and                                 (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBD_CLASSIC&apos;) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemReadinessGroupCalibrationConfigKind =&apos;DEM_NUMBER_OF_SLOTS_COMMON_CONFIG&apos;) )"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=40"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DemReadinessGroupCalibrationConfigKind" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        
                        &lt;p&gt;Configuration parameter that allows switching between a single number
                          of event slots common to all configurable OBD Readiness Groups and
                          an individual number of event slots specific to each OBD Readiness Group.&lt;/p&gt;
                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_NUMBER_OF_SLOTS_COMMON_CONFIG&lt;/code&gt;: Selects configuration with
                            a single number of event slots common to all configurable OBD Readiness Groups
                            that can be configured via
                            &lt;a href=&quot;path:../DemMaxNumEventsPerReadinessGroup&quot;&gt;DemMaxNumEventsPerReadinessGroup&lt;/a&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_NUMBER_OF_SLOTS_INDIVIDUAL_CONFIG&lt;/code&gt;: Selects configuration with
                            an individual number of event slots specific to each OBD Readiness Group via
                            parameters in the
                             &lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt; container.&lt;/li&gt;
                        &lt;/ul&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable this configuration parameter:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;:must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;:
                              must be set to &lt;code&gt;DEM_OBD_VARIANT_OBD_CLASSIC&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;:
                              must not be configured.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Readiness Group calibration kind "/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="a7f75c38-f6cf-48a4-85ef-6746260a8e11"/>
                  <a:da name="DEFAULT" value="DEM_NUMBER_OF_SLOTS_COMMON_CONFIG"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                               (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc))) and                               (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBD_CLASSIC&apos;)"/>
                  <a:da name="RANGE">
                    <a:v>DEM_NUMBER_OF_SLOTS_COMMON_CONFIG</a:v>
                    <a:v>DEM_NUMBER_OF_SLOTS_INDIVIDUAL_CONFIG</a:v>
                  </a:da>
                </v:var>
                <v:ctr name="DemReadinessGroupCalibration" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters that configure
                          the number of calibratable event slots for a specific OBD Readiness Group.&lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable this configuration parameter:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;:must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemCalibrationSupport&quot;&gt;DemCalibrationSupport&lt;/a&gt;:
                              must be set to &lt;code&gt;true&lt;/code&gt;.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;: must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../DemReadinessGroupCalibrationConfigKind&quot;&gt;DemReadinessGroupCalibrationConfigKind&lt;/a&gt;: must be set to &lt;code&gt;DEM_NUMBER_OF_SLOTS_INDIVIDUAL_CONFIG&lt;/code&gt;.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="0ec22a32-458a-11ed-b878-0242ac120002"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemCalibrationSupport)) and                               (node:existsAndTrue(../DemOBDSupport)) and                               ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                 (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                 (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) or                                 (node:value(../DemReadinessGroupCalibrationConfigKind) = &apos;DEM_NUMBER_OF_SLOTS_INDIVIDUAL_CONFIG&apos;) )"/>
                  <a:da name="TITLE" value="DemReadinessGroupCalibration"/>
                  <v:var name="DemMaxNumEventsRdyAc" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_AC.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_AC Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_SPARK&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_AC"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="ce7723ce-459d-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_SPARK&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_AC in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyBoostpr" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_BOOSTPR.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_BOOSTPR Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for compression engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_COMPRESSION&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_BOOSTPR"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="ce772676-459d-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_COMPRESSION&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_BOOSTPR in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyCat" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_CAT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_CAT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for spark engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_SPARK&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_CAT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012a7a-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_SPARK&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_CAT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyCmprcmpt" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_CMPRCMPT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_CMPRCMPT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_CMPRCMPT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012b9c-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_CMPRCMPT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyCser" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_CSER.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_CSER Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_CSER"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012cb4-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                 (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalibrationSupport)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_CSER in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyDor" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_DOR.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_DOR Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_DOR"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012dc2-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_DOR in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyEcs" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_ECS.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_ECS Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_ECS"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030132b8-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_ECS in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyEgr" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_EGR.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_EGR Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_EGR"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="0301343e-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_EGR in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyEgsens" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_EGSENS.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_EGSENS Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_EGSENS"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030135b0-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_EGSENS in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyEvap" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_EVAP.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_EVAP Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for spark engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_SPARK&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_EVAP"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030136dc-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_SPARK&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_EVAP in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyFlsys" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_FLSYS.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_FLSYS Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_FLSYS"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030139f2-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_FLSYS in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyGpf" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_GPF.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_GPF Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_GPF"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03013ee8-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_GPF in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyHccat" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_HCCAT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_HCCAT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for compression engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_COMPRESSION&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_HCCAT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03014032-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_COMPRESSION&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_HCCAT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyHtcat" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_HTCAT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_HTCAT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for spark engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_SPARK&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_HTCAT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030141ae-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_SPARK&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_HTCAT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyMisf" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_MISF.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                          assigned to DEM_OBD_RDY_MISF Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_MISF"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030142da-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_MISF in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyNoxadsorb" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_NOXADSORB.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_NOXADSORB Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_COMPRESSION&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_NOXADSORB"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="0301450a-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_COMPRESSION&apos;) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_NOXADSORB in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyNoxcat" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_NOXCAT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_NOXCAT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for compression engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_COMPRESSION&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_NOXCAT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="030147da-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_COMPRESSION&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_NOXCAT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyO2sens" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_O2SENS.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_O2SENS Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_O2SENS"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03014ba4-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_O2SENS in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyO2sensht" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_O2SENSHT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_O2SENSHT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_O2SENSHT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03014d66-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_O2SENSHT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyOther" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_OTHER.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_OTHER Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_OTHER"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03011d0a-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_OTHER in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyPcv" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_PCV.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_PCV Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_PCV"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012070-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_PCV in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyPmflt" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_PMFLT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_PMFLT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_PMFLT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012688-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../DemReadinessGroupCalibration)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_PMFLT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdySecair" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_SECAIR.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_SECAIR Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;
                          &lt;p&gt;This parameter is available only for spark engine types.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemGeneralOBD/DemOBDEngineType&quot;&gt;DemOBDEngineType&lt;/a&gt;:
                                must be set to &lt;code&gt;DEM_IGNITION_SPARK&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_SECAIR"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012818-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDEngineType = &apos;DEM_IGNITION_SPARK&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_SECAIR in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                  <v:var name="DemMaxNumEventsRdyVvt" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the number of calibratable
                            event slots individually for the OBD Readiness Group DEM_OBD_RDY_VVT.&lt;/p&gt;
                          &lt;p&gt;The default value of this parameter corresponds to the number of events
                            assigned to DEM_OBD_RDY_VVT Readiness Group (via DemEventOBDReadinessGroup)
                            in the current configuration.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable this configuration parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemReadinessGroupCalibration&quot;&gt;DemReadinessGroupCalibration&lt;/a&gt;:
                                must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to
                              &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;: must be configured.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Maximum number of calibratable event slots for DEM_OBD_RDY_VVT"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="03012958-4654-11ed-b878-0242ac120002"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="Dem:NumEventsInReadinessGroup(.)"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:exists(../../DemReadinessGroupCalibration)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=8190"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The number of available event slots configured with this parameter is not large enough for the number of events assigned to Readiness Group DEM_OBD_RDY_VVT in the current configuration." 
                                expr="node:value(.) &lt; Dem:NumEventsInReadinessGroup(.)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:value(.) &gt; count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventId)" 
                          true="Suboptimal configuration: The number of configured event slots for this OBD Readiness Group is larger than the total number of configured events."/>
                  </v:var>
                </v:ctr>
                <v:lst name="DemCallbackDTCStatusChanged" type="MAP">
                  <a:a name="LABEL" value="DTCStatusChanged Callback List"/>
                  <a:a name="ROWS" value="4"/>
                  <a:a name="TAB" value="GENERAL"/>
                  <v:ctr name="DemCallbackDTCStatusChanged" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;The presence of this container indicates, that the Dem has access to
                          a &quot;DTCStatusChanged&quot; callback, which the Dem will call to
                          notify other components about the change in the status of a DTC.&lt;/p&gt;

                          &lt;p&gt;In case there is a &lt;code&gt;DemCallbackDTCStatusChangedFnc&lt;/code&gt;, this
                          parameter defines the name of the function that the Dem will call.&lt;/p&gt;

                          &lt;p&gt;In case there is no &lt;code&gt;DemCallbackDTCStatusChangedFnc&lt;/code&gt;, the
                          Dem will have an R-Port requiring the interface
                          &lt;code&gt;CallbackDTCStatusChanged&lt;/code&gt; whose name is generated by using
                          the unique callback-prefix followed by the event name.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="9ff92799-66d3-469f-9a1e-7b80e5983ecb"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:exists(DemCallbackDTCStatusChangedFnc) or node:existsAndTrue(../../DemRteUsage)" 
                          false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;DataStatusChanged Callback C-Function&apos;."/>
                    <a:da name="TITLE" value="DTCStatusChanged Callback"/>
                    <v:var name="DemCallbackDTCStatusChangedFnc" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;For a description of the callback behavior, refer to the &lt;a href=&quot;path:../../../DemCallbackDTCStatusChanged&quot;&gt;
                            parent container&lt;/a&gt;.&lt;/p&gt;
                            &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                            &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemTriggerOnDTCStatus(uint32 DTC, uint8 DTCStatusOld, uint8 DTCStatusNew)&lt;/code&gt;&lt;/p&gt;
                            &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                            &lt;ol&gt;
                              &lt;li&gt;Add callback function to the callback function list
                              &lt;a href=&quot;path:../../../DemCallbackDTCStatusChanged&quot;&gt;DTCStatusChanged Callback List&lt;/a&gt;&lt;/li&gt;
                              &lt;li&gt;Activate this parameter&lt;/li&gt;
                              &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_DemTriggerOnDTCStatus&lt;/code&gt;&lt;/li&gt;
                              &lt;li&gt;Configure the related C header file inclusion using the parameter
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;p&gt;Note: If the parameter &lt;code&gt;DemTriggerDcmReports&lt;/code&gt; is enabled, this parameter shall not be
                            &quot;Dcm_DemTriggerOnDTCStatus&quot;.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="DTCStatusChanged Callback C-Function"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="93088ada-dc60-484a-adbf-621933c695e9"/>
                      <a:da name="DEFAULT" value="Module_DemTriggerOnDTCStatus"/>
                      <a:da name="ENABLE" value="true"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="text:uniq(../../eb-list::*/DemCallbackDTCStatusChangedFnc, .)" 
                               false="The DTCEventStatusChanged callback function names must be unique."/>
                        <a:tst 
                               expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                               false="Invalid name. (no prefixed C function name)"/>
                        <a:tst 
                               expr="(. = &apos;Dcm_DemTriggerOnDTCStatus&apos;) and (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTriggerDcmReports))" 
                               true="If the parameter DemGeneral/DemTriggerDcmReports is enabled, this parameter shall not be &apos;Dcm_DemTriggerOnDTCStatus&apos;"/>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(. = &apos;Dcm_DemTriggerOnDTCStatus&apos;) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTriggerDcmReports))" 
                            true="DemGeneral/DemTriggerDcmReports should be used instead."/>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemClearDTCNotification" type="MAP">
                  <a:a name="LABEL" value="ClearDTC Notification Callback List"/>
                  <a:a name="ROWS" value="4"/>
                  <a:a name="TAB" value="GENERAL"/>
                  <v:ctr name="DemClearDTCNotification" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;The presence of this container indicates, that the Dem will call a callback to
                          notify other components about a ClearDTC operation.&lt;/p&gt;

                          &lt;p&gt;In case there is a &lt;code&gt;DemClearDtcNotificationFnc&lt;/code&gt;, this
                          parameter defines the name of the function that the Dem will call.&lt;/p&gt;

                          &lt;p&gt;In case there is no &lt;code&gt;DemClearDtcNotificationFnc&lt;/code&gt;, the
                          Dem will have an R-Port requiring the interface
                          &lt;code&gt;ClearDTCNotification&lt;/code&gt; whose name is generated by using
                          the unique callback-prefix.&lt;/p&gt;

                          &lt;p&gt;DemClearDtcNotificationTime defines whether the callback is called at
                          the start or the end of a ClearDTC operation.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="48454227-d2bb-4bfd-9a5a-b13656374da5"/>
                    <a:da name="INVALID" type="XPath" 
                          expr=" ( node:exists(DemClearDtcNotificationFnc) ) or                                     ( ../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos; and node:existsAndTrue(../../DemRteUsage) )" 
                          false="Either Switch on &apos;ClearDTCNotification Callback C-Function&apos; to use a c-callback function, or enable Rte usage and set DemDefaultASRServiceAPI to AUTOSAR_2011."/>
                    <a:da name="TITLE" value="ClearDTC Notification"/>
                    <v:var name="DemClearDtcNotificationFnc" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;To process ClearDTC notification triggering, Dem shall call this configured function, otherwise call the R-Port callback &quot;Module_DemClearDTCNotification&quot;.&lt;/p&gt;
                            &lt;p&gt;The expected C callback prototype is:&lt;br/&gt;
                            &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemClearDTCNotification(uint32 DTC, Dem_DTCFormatType DTCFormat, Dem_DTCOriginType DTCOrigin)&lt;/code&gt;&lt;/p&gt;
                            &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                            &lt;ol&gt;
                              &lt;li&gt;Add callback function to the callback function list
                              &lt;a href=&quot;path:../../../DemClearDTCNotification&quot;&gt;ClearDTC Notification Callback List&lt;/a&gt;&lt;/li&gt;
                            &lt;/ol&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="ClearDTCNotification Callback C-Function"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="05981cc0-3b2e-4a94-a75c-98fc133f1c6c"/>
                      <a:da name="DEFAULT" 
                            value="Module_DemClearDTCNotification"/>
                      <a:da name="ENABLE" value="true"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="text:uniq(../../eb-list::*/DemClearDtcNotificationFnc, .)" 
                               false="The ClearDTCNotification callback function names must be unique."/>
                        <a:tst 
                               expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                               false="Invalid name. (no prefixed C function name)"/>
                      </a:da>
                    </v:var>
                    <v:var name="DemClearDtcNotificationTime" 
                           type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines Clear DTC Notification behavior:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;b&gt;START&lt;/b&gt;: the Dem shall perform ClearDTCNotification in the first Dem_MainFunction, where the DTC clearing gets processed.&lt;/li&gt;
                                &lt;li&gt;&lt;b&gt;FINISH&lt;/b&gt;: the Dem shall perform ClearDTCNotification right after unlocking DTC clearing process.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Clear DTC Notification Time"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:cb44d9af-1a24-47fa-af75-cb4d2289f839"/>
                      <a:da name="DEFAULT" value="START"/>
                      <a:da name="RANGE">
                        <a:v>START</a:v>
                        <a:v>FINISH</a:v>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemDataElementClass" type="MAP">
                  <a:a name="LABEL" value="Data Element Class List"/>
                  <a:a name="TAB" value="Data Elements"/>
                  <a:da name="MAX" value="65500"/>
                  <v:chc name="DemDataElementClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This container contains the configuration (parameters) for an
                          internal/external data element class.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Data Element Class"/>
                    <a:a name="UUID" 
                         value="70acc008-8c36-4c12-a687-5f0d4bb2220b"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="Dem:DataElementClassVerify(.)" 
                          true="Suboptimal configuration: This Data Element Class is not used by any Did, Pid, extended data record or SPN class. Internal data elements can only be referenced by extended data records."/>
                    <v:ctr name="DemExternalCSDataElementClass" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This container contains the configuration (parameters) for an
                            external client/server based data element class.&lt;/p&gt;

                            &lt;p&gt;It defines, how the Dem can obtain the value of the data element
                            from either a SW-C or another BSW module. Whether a client/server
                            or a C function-call is used, is defined by
                            port &lt;code&gt;DemDataElementUsePort&lt;/code&gt;.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="78a5f92d-1a9a-4fd7-a405-3c294bcef3a6"/>
                      <a:da name="TITLE" 
                            value="External CS Data Element Class Parameters"/>
                      <v:var name="DemDataElementDataSize" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the size of the data element in bytes.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable this configuration parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;:
                                  must be set to other than &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Data Size"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="c62ffb47-4240-43b7-9977-29979a847888"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI != &apos;AUTOSAR_2011&apos;)"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementArraySize" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the number of elements in the array.(not the size in bytes)&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable this configuration parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;:
                                  must be set to &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../DemDataElementDataType&quot;&gt;DemDataElementDataType&lt;/a&gt;:
                                  must be set to array data type &lt;code&gt;UINT8_N/SINT8_N/UINT16_N/SINT16_N/UINT32_N/SINT32_N/FLOAT32_N&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Array Size"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="24049299-19b0-4b56-afac-0c9e13766a64"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="((as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) and                                      ( (../DemDataElementDataType = &apos;UINT8_N&apos;) or (../DemDataElementDataType = &apos;SINT8_N&apos;) or                                        (../DemDataElementDataType = &apos;UINT16_N&apos;) or (../DemDataElementDataType = &apos;SINT16_N&apos;) or                                        (../DemDataElementDataType = &apos;UINT32_N&apos;) or (../DemDataElementDataType = &apos;SINT32_N&apos;) or                                        (../DemDataElementDataType = &apos;FLOAT32_N&apos;) ) )"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=4294967295"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementDataType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the type of the data element.&lt;/p&gt;
                              &lt;p&gt;Note: The other data types (boolean or signed integers) could still be connected via RTE Data Conversion feature.&lt;/p&gt;

                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable this configuration parameter:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;:
                                  must be set to &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Data Type"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="4bb3a29e-9c00-40d6-9e8c-d8c573fca501"/>
                        <a:da name="DEFAULT" value="UINT8"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;)"/>
                        <a:da name="RANGE">
                          <a:v>BOOLEAN</a:v>
                          <a:v>FLOAT32</a:v>
                          <a:v>FLOAT32_N</a:v>
                          <a:v>SINT16</a:v>
                          <a:v>SINT16_N</a:v>
                          <a:v>SINT32</a:v>
                          <a:v>SINT32_N</a:v>
                          <a:v>SINT8</a:v>
                          <a:v>SINT8_N</a:v>
                          <a:v>UINT16</a:v>
                          <a:v>UINT16_N</a:v>
                          <a:v>UINT32</a:v>
                          <a:v>UINT32_N</a:v>
                          <a:v>UINT8</a:v>
                          <a:v>UINT8_N</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementProvideMonitorData" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                     is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;Parameter used for accessing the generated function call to retrieve
                                 the data element has the monitorData0 as additional first parameter.&lt;/p&gt;

                              &lt;p&gt;If the parameter is set to &lt;code&gt;false&lt;/code&gt;, the expected
                              callback prototype is the AUTOSAR compatible prototype:
                              &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemRead&amp;lt;DataElement&amp;gt;(uint8* Buffer)&lt;/code&gt;&lt;/p&gt;

                              &lt;p&gt;If the parameter is set to &lt;code&gt;true&lt;/code&gt;, the callback
                              used to obtain the data element will use monitorData0 as an extra parameter,
                              &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemRead&amp;lt;DataElement&amp;gt;(uint8* Buffer, Dem_MonitorDataType monitorData0)&lt;/code&gt;&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Read Function requires Monitor Data"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aabdeed4-8a43-4e10-a914-e65e40094042"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="EDITABLE" value="false"/>
                      </v:var>
                      <v:var name="DemDataElementReadFnc" type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;For a description of the callback behavior, refer to the DemExternalCSDataElementClass
                              description.&lt;/p&gt;
                              &lt;p&gt;The expected C callback prototype depends on the parameter
                              &lt;a href=&quot;path:../DemDataElementInterfaceWithEventParameter&quot;&gt;DemDataElementInterfaceWithEventParameter&lt;/a&gt;&lt;/p&gt;

                              &lt;p&gt;To enable usage of this C callback function, proceed as follows:&lt;/p&gt;
                              &lt;ol&gt;
                                &lt;li&gt;Configure a Data Element Class of type &lt;code&gt;DemExternalCSDataElementClass&lt;/code&gt; in the
                                &lt;a href=&quot;path:../../../DemDataElementClass&quot;&gt;DemDataElementClass&lt;/a&gt; tab&lt;/li&gt;
                                &lt;li&gt;Disable Data Element use Port for this callback using the parameter
                                &lt;a href=&quot;path:../DemDataElementUsePort&quot;&gt;DemDataElementUsePort&lt;/a&gt;&lt;/li&gt;
                                &lt;li&gt;Activate this parameter&lt;/li&gt;
                                &lt;li&gt;Configure the related C function name, e.g. &lt;code&gt;Cdd_EbTest_DemReadDataElement_0&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;Configure the related C header file inclusion using the parameter
                                &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemHeaderFileInclusion&quot;&gt;DemHeaderFileInclusion&lt;/a&gt;&lt;/li&gt;
                              &lt;/ol&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="DataElementRead Callback C-Function"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="f10993ae-c3c9-4903-abd9-3c6d6d21eb2d"/>
                        <a:da name="DEFAULT" value="Module_DataElementRead"/>
                        <a:da name="ENABLE" value="true"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                              false="Invalid name. (no prefixed C function name)"/>
                      </v:var>
                      <v:var name="DemDataElementUsePort" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;If the parameter is set to &lt;code&gt;true&lt;/code&gt;, a R-Port is
                              generated, to obtain the data element (interface
                              &lt;code&gt;DataServices_&amp;lt;SyncDataElement&amp;gt;&lt;/code&gt;).&lt;/p&gt;

                              &lt;p&gt;If the parameter is set to &lt;code&gt;false&lt;/code&gt;, the information
                              is obtained by C function-call on another BSW module specified by
                              the parameter &lt;a href=&quot;path:../DemDataElementReadFnc&quot;&gt;DemDataElementReadFnc&lt;/a&gt;.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element use Port"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="907df9a8-9ed5-4a94-80b7-aa557e03c3fb"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="node:existsAndFalse(.) or node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                                 false="A c-callback function has to be used, because the RTE is switched off. Switch on &apos;DataElementRead Callback C-Function&apos;."/>
                          <a:tst 
                                 expr="(node:existsAndTrue(.) and node:exists(../DemDataElementReadFnc)) or (node:existsAndFalse(.) and not(node:exists(../DemDataElementReadFnc)))" 
                                 true="Inconsistent configuration. Either (only) the &apos;Use Port&apos; option, or a &apos;Data Element Read Callback C-Function&apos; must be used."/>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementInterfaceWithEventParameter" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Parameter used for accessing the EventId during the capture
                              of environment data.&lt;/p&gt;

                              &lt;p&gt;If the parameter is set to &lt;code&gt;false&lt;/code&gt;, the expected
                              callback prototype is the AUTOSAR compatible prototype:
                              &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemRead&amp;lt;DataElement&amp;gt;(uint8* Buffer)&lt;/code&gt;&lt;/p&gt;

                              &lt;p&gt;If the parameter is set to &lt;code&gt;true&lt;/code&gt;, the callback
                              used to obtain the data element will use EventId as an extra parameter,
                              &lt;code&gt;Std_ReturnType &amp;lt;Mod&amp;gt;_DemRead&amp;lt;DataElement&amp;gt;(uint8* Buffer, Dem_EventIdType EventId)&lt;/code&gt;&lt;/p&gt;
                              &lt;p&gt;Note: It is recommended that the symbolic names provided by the Dem module
                              are used for the EventId, and not the numeric values since the Ids depend on
                              the current Dem configuration.
                              The callback shall avoid interpreting the EventId in any way, as only a
                              hand-through mechanism is allowed.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Read Function requires EventId parameter"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="2363a382-6009-4ef2-9f6b-1c3024c35785"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:var name="DemDataElementCaptureOnRetrieval" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Parameter to enable capturing of the data element at the point in time when an extended
                              data record referencing the data element is read.&lt;/p&gt;

                              &lt;p&gt;If &lt;code&gt;DemDataElementCaptureOnRetrieval&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;,
                              the data element values are captured on extended data record retrieval,
                              i.e. read from the application via configured &lt;code&gt;DemDataElementReadFnc&lt;/code&gt; callback function
                              from within the context of APIs &lt;code&gt;Dem_GetNextExtendedDataRecord&lt;/code&gt; / &lt;code&gt;
                              Dem_GetEventExtendedDataRecord&lt;/code&gt; / &lt;code&gt;Dem_GetEventExtendedDataRecordEx&lt;/code&gt;.&lt;/p&gt;

                              &lt;p&gt;If &lt;code&gt;DemDataElementCaptureOnRetrieval&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;,
                              the data element values are captured during event reporting/processing.&lt;/p&gt;

                              &lt;p&gt;Note: This parameter has no effect when the data element is included in freeze frames.&lt;/p&gt;

                              &lt;p&gt;Note: For combined events, if configuration parameter &lt;code&gt;DemDataElementInterfaceWithEventParameter&lt;/code&gt; is set to true:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;In case the configured &lt;code&gt;DemDataElementReadFnc&lt;/code&gt; callback C-function is called in the context of &lt;code&gt;Dem_GetNextExtendedDataRecord()&lt;/code&gt;,
                                  the master event as representative of the event combination and regardless of its available status is passed to &lt;code&gt;DemDataElementReadFnc&lt;/code&gt;.&lt;/li&gt;
                                  &lt;li&gt;In case the configured &lt;code&gt;DemDataElementReadFnc&lt;/code&gt; callback C-function is called in the context of &lt;code&gt;Dem_GetEventExtendedDataRecord()&lt;/code&gt; / &lt;code&gt;Dem_GetEventExtendedDataRecordEx&lt;/code&gt;,
                                  the &lt;code&gt;EventId&lt;/code&gt; parameter of the &lt;code&gt;Dem_GetEventExtendedDataRecord()&lt;/code&gt; / &lt;code&gt;Dem_GetEventExtendedDataRecordEx&lt;/code&gt; APIs is passed to &lt;code&gt;DemDataElementReadFnc&lt;/code&gt;.&lt;/li&gt;
                                &lt;/ul&gt;

                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Data Element capture on retrieval"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="508dd7ba-1b6b-11ee-be56-0242ac120002"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(node:existsAndTrue(.)) and node:existsAndTrue(../DemDataElementUsePort)" 
                              true="DemDataElementUsePort must be false, only DemDataElementReadFnc C-Function callback is supported when DemDataElementCaptureOnRetrieval is set to true."/>
                      </v:var>
                      <v:var name="DemDataElementCaptureTrigger" 
                             type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;In case this parameter is disabled or configured with default value
                              &lt;code&gt;DEM_TRIGGER_ON_QUALIFICATION&lt;/code&gt;, the data element is
                              captured as specified by AUTOSAR, on event qualification, i.e., on
                              transition of the UDS DTC status bit 0 (TestFailed) from 0 to 1.&lt;/p&gt;

                              &lt;p&gt;In case this parameter is configured with value
                              &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;, the data element is
                              captured on transition of the UDS DTC status bit 0 (TestFailed) from
                              1 to 0.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The TestFailed status bit of events that reference a
                              freeze frame class that contains at least one data element with this
                              parameter configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;
                              must be stored permanently. I. e., the parameters
                              &lt;a href=&quot;path:../../../DemStatusBitStorageTestFailed&quot;&gt;DemStatusBitStorageTestFailed&lt;/a&gt;
                              and/or &lt;code&gt;DemStatusBitStorageTestFailedPerEvent&lt;/code&gt; must be configured
                              accordingly.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; External data elements with this parameter configured to
                              &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt; may only be referenced by
                              regular freeze frames. It is important to take this also into account,
                              when &lt;b&gt;calibration&lt;/b&gt; is used!&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_QUALIFICATION&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Capture Trigger"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="d377d8a0-c938-40df-a891-ba0aa33f496b"/>
                        <a:da name="DEFAULT" 
                              value="DEM_TRIGGER_ON_QUALIFICATION"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)" 
                                 true="DemDataElementCaptureTrigger cannot be set to DEM_TRIGGER_ON_DEQUALIFICATION, when DemFreezeFrameCapture is set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by common development freeze frame A data."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemDevFreezeFrameAClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by a development freeze frame A."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemDevFreezeFrameBClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by a development freeze frame B."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by common freeze frame data."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by the OBDonUDS freeze frame."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs((as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemPidClass/eb-list::*/DemPidDataElement/eb-list::*)/DemPidDataElementClassRef)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by PID data elements."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling = &apos;false&apos;) or                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling = &apos;false&apos;) ) and                                        (name(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDTimeSinceEngineStart)) = name(..))" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by DemOBDTimeSinceEngineStart."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling = &apos;false&apos;) or                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling = &apos;false&apos;) ) and                                        (name(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDInputVehicleSpeed)) = name(..))" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by DemOBDInputVehicleSpeed."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataRecordClass/eb-list::*/DemDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by extended data records."/>
                        </a:da>
                        <a:da name="RANGE">
                          <a:v>DEM_TRIGGER_ON_QUALIFICATION</a:v>
                          <a:v>DEM_TRIGGER_ON_DEQUALIFICATION</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="DemExternalSRDataElementClass" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This container contains the configuration (parameters) for an
                            external sender/receiver based data element class. It defines,
                            how the Dem can obtain the value of the data element from a
                            SW-C, by using a sender/receiver port.&lt;/p&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;,
                                to configure &lt;code&gt;DemExternalSRDataElementClass&lt;/code&gt;.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="c5cc8fef-67f7-4f41-aabd-6d7938cebd1c"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage)" 
                            false="An DemExternalSRDataElementClass can be configured only if RTE is switched on."/>
                      <a:da name="TITLE" 
                            value="External SR Data Element Class Parameters"/>
                      <v:var name="DemDataElementDataSize" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the size of the data element in bytes.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Data Size"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="eb47b5fd-7ac3-4c01-9804-7628d61033c7"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If DataType is selected as UINT16, size can be 1 byte or multiple of 2." 
                                    expr="(../DemDataElementDataType = &apos;UINT16&apos;) and (. &gt; 2) and (((.) mod 2) != &apos;0&apos;)"/>
                            <mt:tst 
                                    true="If DataType is selected as UINT32, size can be 1,2,3 bytes or multiple of 4." 
                                    expr="(../DemDataElementDataType = &apos;UINT32&apos;) and (. &gt; 4) and (((.) mod 4) != &apos;0&apos;)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementDataType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the type of the data element.&lt;/p&gt;
                              &lt;p&gt;Note: The other data types (boolean or signed integers) could still be connected via RTE Data Conversion feature.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Data Type"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="eb47b5fd-7ac3-4c01-9804-7628d61033c8"/>
                        <a:da name="DEFAULT" value="UINT8"/>
                        <a:da name="RANGE">
                          <a:v>UINT8</a:v>
                          <a:v>UINT16</a:v>
                          <a:v>UINT32</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementEndianness" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the endianness of the data belonging to an external data.
                                 If no DemDataElementEndianness is defined the value of
                                 &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDataElementDefaultEndianness&quot;&gt;DemDataElementDefaultEndianness&lt;/a&gt; is applicable.&lt;/p&gt;
                              &lt;p&gt;&lt;code&gt;DemDataElementEndianness&lt;/code&gt; defines the endianness of the data which will be read
                                 by the Sender Receiver read function. In case &lt;code&gt;DemDataElementEndianness&lt;/code&gt; is different
                                 from the local ECU endianness an endianness conversion is necessary.&lt;/p&gt;
                              &lt;p&gt;The configured &lt;code&gt;DemDataElementDataSize&lt;/code&gt; is applied
                                 only after the endianness conversion and then data is written into the memory.&lt;/p&gt;
                              &lt;p&gt;Data in the memory is always in little endiann format i.e. first least significant byte is written to address n,
                                 and the next more significant byte to address n+1 and so on.&lt;/p&gt;
                              &lt;p&gt;Example: External Data &apos;SR_A&apos; is read by the corresponding Read function with value &quot;0x56341200&quot;.&lt;/p&gt;
                                 &lt;p&gt;No &lt;code&gt;DemDataElementEndianness&lt;/code&gt; is configured for &apos;SR_A&apos;,
                                 &lt;code&gt;DemDataElementDefaultEndianness&lt;/code&gt; is set to &apos;BIG_ENDIAN&apos;.&lt;/p&gt;
                                 &lt;p&gt;If the local endianness of the ECU is different (&apos;LITTLE_ENDIAN&apos;),
                                 the read value is considered as misinterpreted.
                                 Therefore it is converted to Little Endian format having the value &quot;0x00123456&quot;.&lt;/p&gt;
                                 &lt;p&gt;If in the further course the &lt;code&gt;DemDataElementDataSize&lt;/code&gt; is set to 3
                                 this converted value will be truncated accordingly, not the intial (misinterpreted) one.
                                 The result is then &quot;0x123456&quot;.&lt;/p&gt;
                                 &lt;p&gt;Follow data will be written: at address n &quot;0x56&quot;, at address n+1 &quot;0x34&quot; and at address n+2 &quot;0x12&quot;&lt;/p&gt;
                              &lt;p&gt;Range&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;: Most significant byte shall come at the lowest address.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt;: Most significant byte shall come highest address.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;OPAQUE&lt;/code&gt;: opaque data endianness (copy bytes in the order they are represented).&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Endianness"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="eb47b5fd-7ac3-4c01-9804-7628d61033c9"/>
                        <a:da name="DEFAULT" value="OPAQUE"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="RANGE">
                          <a:v>BIG_ENDIAN</a:v>
                          <a:v>LITTLE_ENDIAN</a:v>
                          <a:v>OPAQUE</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DemDataElementCaptureTrigger" 
                             type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;In case this parameter is disabled or configured with default value
                              &lt;code&gt;DEM_TRIGGER_ON_QUALIFICATION&lt;/code&gt;, the data element is
                              captured as specified by AUTOSAR, on event qualification, i.e., on
                              transition of the UDS DTC status bit 0 (TestFailed) from 0 to 1.&lt;/p&gt;

                              &lt;p&gt;In case this parameter is configured with value
                              &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;, the data element is
                              captured on transition of the UDS DTC status bit 0 (TestFailed) from
                              1 to 0.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The TestFailed status bit of events that reference a
                              freeze frame class that contains at least one data element with this
                              parameter configured to &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;
                              must be stored permanently. I. e., the parameters
                              &lt;a href=&quot;path:../../../DemStatusBitStorageTestFailed&quot;&gt;DemStatusBitStorageTestFailed&lt;/a&gt;
                              and/or &lt;code&gt;DemStatusBitStorageTestFailedPerEvent&lt;/code&gt; must be configured
                              accordingly.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; External data elements with this parameter configured to
                              &lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt; may only be referenced by
                              regular freeze frames. It is important to take this also into account,
                              when &lt;b&gt;calibration&lt;/b&gt; is used!&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_QUALIFICATION&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_TRIGGER_ON_DEQUALIFICATION&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Capture Trigger"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="3a5a55d8-3f5f-4c63-b55c-5e63ea4e4cda"/>
                        <a:da name="DEFAULT" 
                              value="DEM_TRIGGER_ON_QUALIFICATION"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)" 
                                 true="DemDataElementCaptureTrigger cannot be set to DEM_TRIGGER_ON_DEQUALIFICATION, when DemFreezeFrameCapture is set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataDevAClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by common development freeze frame A data."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemDevFreezeFrameAClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by a development freeze frame A."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemDevFreezeFrameSupport = &apos;true&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemDevFreezeFrameBClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by a development freeze frame B."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCommonFFDataClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by common freeze frame data."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs(node:refs(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)/DemDidClassRef/eb-list::*)/DemDidDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by the OBDonUDS freeze frame."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs((as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemPidClass/eb-list::*/DemPidDataElement/eb-list::*)/DemPidDataElementClassRef)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by PID data elements."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling = &apos;false&apos;) or                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling = &apos;false&apos;) ) and                                        (name(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDTimeSinceEngineStart)) = name(..))" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by DemOBDTimeSinceEngineStart."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling = &apos;false&apos;) or                                          (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling = &apos;false&apos;) ) and                                        (name(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDInputVehicleSpeed)) = name(..))" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by DemOBDInputVehicleSpeed."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;) and                                        (count(node:refs(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataRecordClass/eb-list::*/DemDataElementClassRef/eb-list::*)[name(.) = name(node:current()/..)]) &gt; 0)" 
                                 true="Data elements with DemDataElementCaptureTrigger set to DEM_TRIGGER_ON_DEQUALIFICATION must not be referenced by extended data records."/>
                        </a:da>
                        <a:da name="RANGE">
                          <a:v>DEM_TRIGGER_ON_QUALIFICATION</a:v>
                          <a:v>DEM_TRIGGER_ON_DEQUALIFICATION</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="DemInternalDataElementClass" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            This container contains the configuration (parameters) for an
                            internal data element class.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="48f36ce5-7d40-41ab-933d-476638b5a4e7"/>
                      <a:da name="TITLE" 
                            value="Internal Data Element Class Parameters"/>
                      <v:var name="DemDataElementDataSize" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              Defines the size of the data element in bytes.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Data Size"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="582915bc-cde6-4ac3-a45c-99388d1b3084"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The size of the aging counter can be 1 byte at maximum, because of the range of Aging Cycle Counter Threshold." 
                                    expr="(../DemInternalDataElement = &apos;DEM_AGINGCTR&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the aging counter can be 1 byte at maximum, because of the range of Aging Cycle Counter Threshold." 
                                    expr="(../DemInternalDataElement = &apos;DEM_AGINGCTR_UPCNT&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the aging counter can be 1 byte at maximum, because of the range of Aging Cycle Counter Threshold." 
                                    expr="(../DemInternalDataElement = &apos;DEM_AGINGCTR_DOWNCNT&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the overflow indication can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OVFLIND&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the occurrence counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCCCTR&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the DTC status indicators can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_SI30&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the fault detection counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_CURRENT_FDC&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the maximum fault detection counter since last clear can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_FDC12&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the operation cycles since last unconfirmedDTC counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC1&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the unconfirmedDTC aging counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC2&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the operation cycles since first unconfirmedDTC counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC3&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the unconfirmedDTC operation cycle counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC4&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the warm-up cycle counter (DEM_OCC5) can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC5&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the consecutive failed operation cycle counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC6&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the qualified/unconfirmedDTC operation cycle counter can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_OCC7&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the event priority can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_PRIORITY&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the significance level per event can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_SIGNIFICANCE&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the event id has to be 2 bytes." 
                                    expr="(../DemInternalDataElement = &apos;DEM_EVENT_ID&apos;) and (. != &apos;2&apos;)"/>
                            <mt:tst 
                                    true="The size of the root id has to be 2 bytes." 
                                    expr="(../DemInternalDataElement = &apos;DEM_ROOT_EVENT_ID&apos;) and (. != &apos;2&apos;)"/>
                            <mt:tst 
                                    true="The size of the Cycles since last failed can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_CYCLES_SINCE_LAST_FAILED&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the Cycles since first failed can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_CYCLES_SINCE_FIRST_FAILED&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the Failed cycles can be 1 byte at maximum." 
                                    expr="(../DemInternalDataElement = &apos;DEM_FAILED_CYCLES&apos;) and (. != &apos;1&apos;)"/>
                            <mt:tst 
                                    true="The size of the monitor activity data has to be 2 bytes." 
                                    expr="(../DemInternalDataElement = &apos;DEM_MONITOR_ACTIVITY_DATA&apos;) and (. != &apos;2&apos;)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DemInternalDataElement" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines the Dem-internal data value, which is mapped
                              to the data element.&lt;/p&gt;

                              &lt;p&gt;To allow the mapping of DEM_SI30, DEM_FDC12, and OCC values the parameter
                              &lt;a href=&quot;path:../../../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;
                              needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD. The event using the related extended data class
                              has to use counter-based or monitor internal debouncing - otherwise the counters will not be supported.&lt;/p&gt;

                              &lt;p&gt;To allow the mapping of DEM_CURRENT_FDC, the event using the related extended data class
                              has to configure the FDC callback function if monitor internal debouncing is used.&lt;/p&gt;

                              &lt;p&gt;Internal data elements which are larger than one byte, &apos;DEM_EVENT_ID&apos; and &apos;DEM_ROOT_EVENT_ID&apos;
                              are stored in Little Endiann Format.&lt;/p&gt;
                              &lt;p&gt;E.g. if the Event Id 1000(dec) / 0x03E8(hex) have to be stored at address n,
                              the byte at address n will be 0xE8 and the byte at address n+1 will be 0x03.&lt;/p&gt;

                              &lt;p&gt;To allow the mapping of DEM_PRIORITY, the parameter
                              &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;: must
                              be set to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; otherwise &lt;code&gt;DemEventPriority&lt;/code&gt; shall not be available so
                              &lt;code&gt;DemInternalDataElement&lt;/code&gt; could be mapped to it

                              &lt;p&gt;Range&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DEM_AGINGCTR&lt;/code&gt;: map Dem-internal aging counter count-up.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_AGINGCTR_UPCNT&lt;/code&gt;: map Dem-internal aging counter count-up.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_AGINGCTR_DOWNCNT&lt;/code&gt;: map Dem-internal aging counter count-down.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCCCTR&lt;/code&gt;: map Dem-internal occurrence counter:
                                    In case the parameter &lt;a href=&quot;path:../../../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt; is set to DEM_TRIGGER_ON_FDC_THRESHOLD,
                                    this counter will count the number of times the freeze frame is captured. (This is different to Dem.ASR40.SWS_Dem_00523 and Dem.ASR40.SWS_Dem_00524.)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OVFLIND&lt;/code&gt;: map Dem-internal overflow indication.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_SIGNIFICANCE&lt;/code&gt;: map (static) Dem-internal event significance.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_SI30&lt;/code&gt; (vendor-specific extension): map Dem-internal DTC status indicators.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_CURRENT_FDC&lt;/code&gt; (vendor-specific extension): map Dem-internal fault detection counter:
                                    The singed ranges of the FDC are mapped as follows: [0..127] -&gt; [0x00..0x7F], [-1..-128] -&gt; [0xFF..0x80].&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_FDC12&lt;/code&gt; (vendor-specific extension): map Dem-internal maximum fault detection counter since last clear:
                                    The maximum value, which is equal to or greater than unconfirmedDTCLimit, that the internal counter has reached since the last time DTC information was cleared.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC1&lt;/code&gt; (vendor-specific extension): map Dem-internal operation cycles since last unconfirmedDTC counter:
                                    This counter represents the number of operation cycles since unconfirmedDTC threshold was reached last time.
                                    If the unconfirmedDTC threshold equals the failed threshold, the counter counts operation cycles since last qualified failed result.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC2&lt;/code&gt; (vendor-specific extension): map Dem-internal unconfirmedDTC aging counter:
                                    This counter represents the number of operation cycles having only qualified passed results since unconfirmedDTC threshold was reached last time.
                                    If the unconfirmedDTC threshold equals the failed threshold, the behavior is similar as behavior of the &apos;aging counter&apos; (DEM_AGINGCTR) with the difference that it is update on qualified passed result insead on end of operation cycle.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC3&lt;/code&gt; (vendor-specific extension): map Dem-internal operation cycles since first unconfirmedDTC counter:
                                    This counter represents the number of operation cycles since unconfirmedDTC threshold was reached first time.
                                    If the unconfirmedDTC threshold equals the failed threshold, the counter counts operation cycles since first qualified failed result.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC4&lt;/code&gt; (vendor-specific extension): map Dem-internal unconfirmedDTC operation cycle counter:
                                    This counter represents the number of operation cycles having unconfirmedDTC threshold reached.
                                    If the unconfirmedDTC threshold equals the failed threshold, the counter counts operation cycles having failed threshold reached.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC5&lt;/code&gt; (vendor-specific extension): map Dem-internal unconfimedDTC warmp-up cycle counter:
                                    This represents the number of warm-up cycles (WUC) of emission related events, that are reported as failed until they become confirmed.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC6&lt;/code&gt; (vendor-specific extension): map Dem-internal consecutive failed operation cycle counter:
                                    This counter represents the number of consecutive operation cycles having a qualified failed result.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_OCC7&lt;/code&gt; (vendor-specific extension): map Dem-internal qualified/unconfirmedDTC operation cycle counter:
                                    This counter represents the number of operation cycles having a qualified result or having unconfirmedDTC threshold reached (since unconfirmedDTC threshold was reached first time).
                                    If the unconfirmedDTC threshold equals the failed threshold, the counter counts operation cycles having qualified result.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_PRIORITY&lt;/code&gt;: map Dem-internal event priority.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_EVENT_ID&lt;/code&gt;: map Dem-internal eventId:
                                    EventId of the event which causes the event entry or the last update of it. This data is not static for combined events.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_ROOT_EVENT_ID&lt;/code&gt;: map Dem-internal root event Id:
                                    EventId of the root event which caused the event entry or the last update of it. This data is only useful and could differ from DEM_EVENT_ID in case of the entry is triggered indirectly by a DemMultiEventTriggeringSlaveEventRef.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_CYCLES_SINCE_LAST_FAILED&lt;/code&gt;: represents the number of operation cycles since the DTC fault detection counter last reached its maximum value +127 (since DTC information was last cleared).
                                    The count includes also operation cycles in which the test has not been completed.&lt;br/&gt;
                                  &lt;em&gt;Note:&lt;/em&gt; the lower limit 0x00U - event is not yet qualified OR no operation cycle is completed since last occurrence (it is qualified in the current operation cycle)&lt;br/&gt;
                                  &lt;em&gt;Note:&lt;/em&gt;Depending on the value of configuration parameter &lt;a href=&quot;path:../../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemStatusBitStorageTestFailedPerEvent&quot;&gt;DemStatusBitStorageTestFailedPerEvent&lt;/a&gt; (or general configuration parameter &lt;a href=&quot;path:../../../DemStatusBitStorageTestFailed&quot;&gt;DemStatusBitStorageTestFailed&lt;/a&gt;,
                                      if not configured per event), the functionality of the CSLF counter is impacted as follows:&lt;br/&gt;
                                  * ENABLED: the counter will continue to increment itself if the qualification of the event is FAILED in a new power-cycle. Only an explicit
                                  PASSED inbetween FAILED qualifications will cause a transition of the TF bit from 0 to 1 and reset the counter.&lt;br/&gt;
                                  * DISABLED: the value of TF bit is not stored inbetween power cycles, a FAILED is considered a new occurrence causing the counter CSLF to reset on the new power cycle.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_CYCLES_SINCE_FIRST_FAILED&lt;/code&gt;: represents the number of operation cycles since the DTC fault detection counter first reached its maximum value of +127 (since DTC information was last cleared). The count includes also operation cycles in which the test has not been completed.
                                  &lt;em&gt;Note&lt;/em&gt;: the lower limit: 0x00U - event is not yet qualified OR no operation cycle is completed since then (it is qualified in the current operation cycle).
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_FAILED_CYCLES&lt;/code&gt;: represents the number of operation cycles during which the DTC fault detection counter reached its maximum value of +127 (since DTC information was last cleared). The count DOES NOT include operation cycles in which the test has not been completed.
                                  &lt;em&gt;Note&lt;/em&gt;: the lower limit: 0x00U - event is not yet qualified OR no operation cycle is completed since then (it is qualified in the current operation cycle).
                                &lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DEM_MONITOR_ACTIVITY_DATA&lt;/code&gt;: Maps the Dem internal Monitor Activity Data value in SAE J1979-2 format. Its size is 2 bytes and it contains the Monitor Activity Numerator (MAN) and the Stored Monitor Activity Ratio (SMAR).
                                    The information contained by this internal data element is reported to the tester via extended data record number 0x93, only for OBD relevant events.&lt;br/&gt;
                                  &lt;em&gt;Note&lt;/em&gt;: The readout of Monitor Activity Data via &lt;code&gt;Dem_GetEventExtendedDataRecord() / Dem_GetEventExtendedDataRecordEx()&lt;/code&gt; is not supported.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Internal data elements bigger than 1 byte (e.g. event id - 2 bytes) are serialized as little endian format
                                       (least significant byte first).
                              &lt;/p&gt;
                              &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt;Due to the fact that these counters described above are specified as one byte,
                              the maximum value which can reached is 255 (0xFFU), even if more cycles are elapsed.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Internal Data Element"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="567a10fc-963a-42e5-942e-9183ddac3c73"/>
                        <a:da name="DEFAULT" value="DEM_AGINGCTR"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="((. = &apos;DEM_SI30&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the DTC status indicators, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_FDC12&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the maximum fault detection counter since last clear, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC1&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the operation cycles since last unconfirmedDTC counter, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC2&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the unconfirmedDTC aging counter, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC3&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the operation cycles since first unconfirmedDTC counter, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC4&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the unconfirmedDTC operation cycle counter, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC5&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the number warm-up cycles (WUC), in which emission related (OBD) events are reported as failed before they become confirmed (DEM_OCC5), DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC5&apos;) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)))" 
                                 true="If DEM_OCC5 is configured, DemObdSupport must be enabled."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC6&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the consecutive failed operation cycle counter, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_OCC7&apos;) and (../../../DemExtendedDataCapture != &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;))" 
                                 true="To map the qualified/unconfirmedDTC operation cycle counter, DemExtendedDataCapture needs to be set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                          <a:tst 
                                 expr="( ( (. = &apos;DEM_AGINGCTR&apos;) or (. = &apos;DEM_AGINGCTR_UPCNT&apos;) or (. = &apos;DEM_AGINGCTR_DOWNCNT&apos;) )                                        and ( count(../../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[(node:existsAndTrue(DemAgingAllowed))]) = 0) )" 
                                 true="The values DEM_AGINGCTR, DEM_AGINGCTR_UPCNT and DEM_AGINGCTR_DOWNCNT are not allowed if event aging is not enabled."/>
                          <a:tst 
                                 expr="( (. = &apos;DEM_ROOT_EVENT_ID&apos;)                                        and ( count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMultiEventTriggering/eb-list::*) = 0 ) )" 
                                 true="The value DEM_ROOT_EVENT_ID is not allowed if multi event triggering is not enabled."/>
                          <a:tst 
                                 expr="((. = &apos;DEM_PRIORITY&apos;) and (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport)))" 
                                 true="The value DEM_PRIORITY is not allowed if DemEventDisplacementSupport is disabled."/>
                          <a:tst 
                                 expr="(. = &apos;DEM_MONITOR_ACTIVITY_DATA&apos;) and                                        ( (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) or                                          ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)) and                                            (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) != &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) and                                            (not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) ) )" 
                                 true="The value DEM_MONITOR_ACTIVITY_DATA is allowed only if OBDonUDS variant is enabled or can be enabled at runtime via DemCalloutObdVariantFnc parameter."/>
                        </a:da>
                        <a:da name="RANGE">
                          <a:v>DEM_AGINGCTR</a:v>
                          <a:v>DEM_AGINGCTR_UPCNT</a:v>
                          <a:v>DEM_AGINGCTR_DOWNCNT</a:v>
                          <a:v>DEM_OCCCTR</a:v>
                          <a:v>DEM_OVFLIND</a:v>
                          <a:v>DEM_SIGNIFICANCE</a:v>
                          <a:v>DEM_SI30</a:v>
                          <a:v>DEM_CURRENT_FDC</a:v>
                          <a:v>DEM_FDC12</a:v>
                          <a:v>DEM_OCC1</a:v>
                          <a:v>DEM_OCC2</a:v>
                          <a:v>DEM_OCC3</a:v>
                          <a:v>DEM_OCC4</a:v>
                          <a:v>DEM_OCC5</a:v>
                          <a:v>DEM_OCC6</a:v>
                          <a:v>DEM_OCC7</a:v>
                          <a:v>DEM_PRIORITY</a:v>
                          <a:v>DEM_EVENT_ID</a:v>
                          <a:v>DEM_ROOT_EVENT_ID</a:v>
                          <a:v>DEM_CYCLES_SINCE_LAST_FAILED</a:v>
                          <a:v>DEM_CYCLES_SINCE_FIRST_FAILED</a:v>
                          <a:v>DEM_FAILED_CYCLES</a:v>
                          <a:v>DEM_MONITOR_ACTIVITY_DATA</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:chc>
                </v:lst>
                <v:lst name="DemDidClass" type="MAP">
                  <a:a name="COLUMNS" value="DemDidIdentifier"/>
                  <a:a name="LABEL" value="Data Id (DID)"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:da name="MAX" value="65534"/>
                  <v:ctr name="DemDidClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This container contains the configuration (parameters) for a data Id
                          class. It is assembled out of one or several data elements.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DID_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="4960e6dd-35b3-4afe-b729-cf5ec2b7cbc5"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="((sum(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*))/DemDataElementDataSize)) +                                     (sum(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*)[(DemDataElementDataType = &apos;UINT8_N&apos;) or (DemDataElementDataType = &apos;SINT8_N&apos;)])/DemDataElementArraySize)) +                                     (sum(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*)[(DemDataElementDataType = &apos;UINT16_N&apos;) or (DemDataElementDataType = &apos;SINT16_N&apos;)])/DemDataElementArraySize)*2) +                                     (sum(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*)[(DemDataElementDataType = &apos;UINT32_N&apos;) or (DemDataElementDataType = &apos;SINT32_N&apos;) or (DemDataElementDataType = &apos;FLOAT32_N&apos;)])/DemDataElementArraySize)*4) +                                     (count(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*)[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;)and((DemDataElementDataType = &apos;BOOLEAN&apos;) or (DemDataElementDataType = &apos;UINT8&apos;) or (DemDataElementDataType = &apos;SINT8&apos;))]))) +                                     (count(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*)[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;)and((DemDataElementDataType = &apos;UINT16&apos;) or (DemDataElementDataType = &apos;SINT16&apos;))]))*2) +                                     (count(util:distinct(node:refs(./DemDidDataElementClassRef/eb-list::*)[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;)and((DemDataElementDataType = &apos;UINT32&apos;) or (DemDataElementDataType = &apos;SINT32&apos;) or (DemDataElementDataType = &apos;FLOAT32&apos;))]))*4)                                    ) &lt;= 255" 
                          false="The size of DID can not be more than 255."/>
                    <a:da name="TITLE" value="Data Id (DID)"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="Dem:DidClassVerify(.)" 
                          false="Suboptimal configuration: This DID class is not used by any freeze frame class."/>
                    <v:var name="DemDidIdentifier" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="Data ID"/>
                      <a:a name="DEFAULT_RADIX" value="HEX"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Identifier of the Data ID.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="DID Identifier"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="355376d1-dd4d-4670-a3d6-6647b0dae647"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..))"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=65535"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath false="The Data ID must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemDidIdentifier, .)"/>
                      </a:da>
                    </v:var>
                    <v:lst name="DemDidDataElementClassRef">
                      <a:a name="LABEL" value="Did Data Element Class List"/>
                      <a:a name="ROWS" value="6"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemDidDataElementClassRef" 
                             type="CHOICE-REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Did Data Element Class"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              This reference contains the link to a data element class. Internal
                              data elements can not be referenced in the current implementation.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Did Data Element Class"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="true"/>
                        <a:a name="UUID" 
                             value="c9889b9f-c86f-4f45-b651-2e330a723e20"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The Did Data Element Class Reference must be unique."/>
                        </a:da>
                        <a:da name="REF">
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                        </a:da>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemEnableCondition" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>DemEnableConditionId</a:v>
                    <a:v>DemEnableConditionStatus</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Condition List"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="Enable Conditions"/>
                  <a:da name="MAX" value="255"/>
                  <v:ctr name="DemEnableCondition" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This container contains the configuration (parameters) for enable
                          conditions.
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Enable Condition&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DemEnableConditionSupport&lt;/code&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_CONDITION_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="123258c2-4037-43ad-a14a-c3fedd04e19e"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:existsAndFalse(../../DemEnableConditionSupport)" 
                          true="DemGeneral/DemEnableConditionSupport is set to false, hence the Enable Condition cannot be supported."/>
                    <a:da name="TITLE" value="Enable Condition"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../DemEnableConditionGroup/eb-list::*/DemEnableConditionRef/eb-list::*[                                                                            node:refexists(.) and                                                                            as:name(as:ref(.)) = as:name(node:current())]                                         ) = 0" 
                          true="Suboptimal configuration: This enable condition is not used by any Enable Condition Group."/>
                    <v:var name="DemEnableConditionId" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="Condition ID"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines a unique enable condition Id. This parameter should not be
                            changeable by user, because the Id should be generated by Dem itself
                            to prevent gaps and multiple use of an Id.&lt;/p&gt;

                            &lt;p&gt;The enable condition Ids shall be sequentially ordered beginning with 0
                            and no gaps in between.&lt;/p&gt;

                            &lt;p&gt;The Handle-Id Wizard can be used to set this value automatically.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Condition Id"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="b20eacb5-72a5-4f13-a656-a0867db3aec7"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..))"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=254"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst false="Enable Condition Id must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemEnableConditionId, .)"/>
                          <mt:tst 
                                  false="Condition IDs must be zero-based and consecutive. The Id value preceding this one is missing." 
                                  expr="(. = 0) or                                 (count(../../eb-list::*[DemEnableConditionId = (node:current() - 1)]) &gt; 0)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                    <v:var name="DemEnableConditionStatus" type="BOOLEAN">
                      <a:a name="COLUMN_TITLE" value="Initial Status"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the inital status for enable or disable of acceptance of
                            event reports of a diagnostic event.&lt;/p&gt;

                            &lt;p&gt;The value is the initialization after power up (before this
                            condition is reported the first time).&lt;/p&gt;

                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: acceptance of a diagnostic event
                              enabled&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: acceptance of a diagnostic event disabled
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Initial Enable Condition Status"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="6f456bef-3a20-4104-a035-3dbf1792af46"/>
                      <a:da name="DEFAULT" value="true"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemEnableConditionGroup" type="MAP">
                  <a:a name="LABEL" value="Enable Condition Group List"/>
                  <a:a name="ROWS" value="6"/>
                  <a:a name="TAB" value="Enable Conditions"/>
                  <a:da name="MAX" value="254"/>
                  <v:ctr name="DemEnableConditionGroup" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration (parameters) for enable
                          condition groups.&lt;/p&gt;
                          &lt;p&gt;A maximum of 254 enable condition groups can be configured, because the
                          value of 255 is used for inernal processing&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_CONDITION_GROUP_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="9197d2df-f937-48fb-aac0-b5c59353d700"/>
                    <a:da name="TITLE" value="Enable Condition Group"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[                                                                    node:refexists(DemEnableConditionGroupRef) and                                                                    as:name(as:ref(DemEnableConditionGroupRef)) = as:name(node:current())]                                         ) = 0" 
                          true="Suboptimal configuration: This enable condition Group is not used by any event."/>
                    <v:lst name="DemEnableConditionRef">
                      <a:a name="LABEL" value="Enable Condition List"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemEnableConditionRef" type="REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Enable Condition"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines a Enable Condition, which
                              allows for switching on/off the acceptance
                              of event status reports.&lt;/p&gt;

                              &lt;p&gt;This parameter is optional
                              and depends on manufacturer.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Enable Condition"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="false"/>
                        <a:a name="UUID" 
                             value="4c802f63-3c59-4c77-8e26-edfce189198c"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The Enable Condition Reference must be unique."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemEnableCondition"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:var name="Dem_MultiEventTriggeringSetEventAvailable" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This configuration switch defines whether a call of
                        &lt;code&gt;Dem_SetEventAvailable()&lt;/code&gt; shall be applied to all events of
                        a MultiEventTriggering group or not.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: &lt;code&gt;Dem_SetEventAvailable()&lt;/code&gt; may only
                            be called for the master event of a multi-event triggering group. The
                            corresponding call with the complete processing is then also applied
                            to all slave events.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: &lt;code&gt;Dem_SetEventAvailable()&lt;/code&gt; is only
                            processed for the single event, that is identified by the parameter
                            &lt;code&gt;EventId&lt;/code&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: A &lt;code&gt;Dem_SetEventAvailable()&lt;/code&gt; call is forwarded to all
                          slave events of the MultiEventTriggering group regardless of the
                          configured &lt;code&gt;DemMultiEventTriggeringAlternativeBehavior&lt;/code&gt;.
                          The reported return value corresponds to the return value of the master
                          event.&lt;/p&gt;
                        &lt;p&gt;Note: When this switch is set to true, it is not possible to assign an
                          event as slave to several multi-event triggering master events.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable multi-event triggering for &lt;code&gt;Dem_SetEventAvailable()&lt;/code&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemAvailabilitySupport&quot;&gt;DemAvailabilitySupport&lt;/a&gt;:
                              must be set to dynamic availability (&lt;code&gt;DEM_EVENT_AVAILABILITY&lt;/code&gt;).
                          &lt;/li&gt;
                          &lt;li&gt;At least one &lt;a href=&quot;path:../DemMultiEventTriggering&quot;&gt;DemMultiEventTriggering&lt;/a&gt;
                              container must be configured.
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable multi-event triggering for Dem_SetEventAvailable()"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Multi Event Triggering"/>
                  <a:a name="UUID" value="af230f76-90dd-441d-bf98-8b192959041b"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAvailabilitySupport = &apos;DEM_EVENT_AVAILABILITY&apos;) and                               (count(../DemMultiEventTriggering/eb-list::*) &gt; 0)"/>
                </v:var>
                <v:lst name="DemMultiEventTriggering" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>DemMultiEventTriggeringAlternativeBehavior</a:v>
                    <a:v>DemMultiEventTriggeringMasterEventRef</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Multi Event Triggering List"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="Multi Event Triggering"/>
                  <a:da name="MAX" value="8190"/>
                  <v:ctr name="DemMultiEventTriggering" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration of a master event that will
                          trigger other slave events whenever the master event is reported.&lt;/p&gt;

                          &lt;p&gt;If &lt;em&gt;DemMultiEventTriggeringAlternativeBehavior&lt;/em&gt; is DEM_MULTIEVENTTRIGGERING_ALT_NONE
                          the master event is processed along with slave events.&lt;/p&gt;

                          &lt;p&gt;If &lt;em&gt;DemMultiEventTriggeringAlternativeBehavior&lt;/em&gt; is DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE
                          the master event is not processed, except case when none slave event is enabled then
                          only the master event is processed as it would be done
                          if no DemMultiEventTriggering is configured for the master event.&lt;/p&gt;

                          &lt;p&gt;If &lt;a href=&quot;path:../DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt; and/or &lt;a href=&quot;path:../DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;
                          are set to &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt;, DemMultiEventTriggering is not allowed.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" 
                         value="DEM_MULTI_EVENT_TRIGGERING_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:224379f3-5144-410b-8255-c7c287b781ce"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="(DemMultiEventTriggeringAlternativeBehavior = &apos;DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE&apos;) and                                    (count(util:distinct(node:refs(DemMultiEventTriggeringSlaveEventRef/eb-list::*[node:refvalid(as:ref(.)/DemEventClass/DemEnableConditionGroupRef) and                                     count(util:distinct(node:refs(as:ref(.)/DemEventClass/DemEnableConditionGroupRef))/eb-list::*/eb-list::*[node:existsAndTrue(as:ref(.)/DemEnableConditionStatus)]) &gt; 0]))) &gt; 1)" 
                             true="If DemMultiEventTriggeringAlternativeBehavior is DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE, the enable condition group has                              to be enabled by DemEnableConditionStatus for maximum one of the Slave Events."/>
                      <a:tst 
                             expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) or                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)" 
                             true="DemMultiEventTriggering is not allowed when DemFreezeFrameCapture and/or DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD."/>
                    </a:da>
                    <a:da name="TITLE" value="Multi Event Triggering"/>
                    <v:var name="DemMultiEventTriggeringAlternativeBehavior" 
                           type="ENUMERATION">
                      <a:a name="COLUMN_TITLE" value="Alternative Behavior"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This parameter enables exclusive replacement of the master event
                            by one of the slave events, i.e. the slave event is processed instead of
                            the master event.&lt;/p&gt;

                            &lt;p&gt;If none slave event is enabled then only the master event is processed
                            as it would be done if no DemMultiEventTriggering is configured for the master.&lt;/p&gt;

                            &lt;p&gt;For the exclusive replacement of the master event is necessary that,
                            all referenced slave events have a valid &lt;em&gt;DemEnableConditionGroupRef&lt;/em&gt;.&lt;/p&gt;

                            &lt;p&gt;For an easier handling each of this groups, the &lt;em&gt;DemEnableConditionGroupRef&lt;/em&gt;
                            shall have exactly one enable condition defined.&lt;/p&gt;

                            &lt;p&gt;Furthermore for maximum one slave event the enable condition group has to be
                            enabled by &lt;em&gt;DemEnableConditionStatus&lt;/em&gt; for maximum one of the slave events.
                            It should be ensured also during run-time that, maximum one of the slaves are enabled.
                            Otherwise it is not predictable which slave event replaces the master event.&lt;/p&gt;

                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;DEM_MULTIEVENTTRIGGERING_ALT_NONE&lt;/code&gt;: default behavior is enabled&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE&lt;/code&gt;: exclusive replacement is enabled&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Alternative Behavior"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="63fcb58a-2247-489f-9e45-09f09d3d452b"/>
                      <a:da name="DEFAULT" 
                            value="DEM_MULTIEVENTTRIGGERING_ALT_NONE"/>
                      <a:da name="RANGE">
                        <a:v>DEM_MULTIEVENTTRIGGERING_ALT_NONE</a:v>
                        <a:v>DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE</a:v>
                      </a:da>
                    </v:var>
                    <v:ref name="DemMultiEventTriggeringMasterEventRef" 
                           type="REFERENCE">
                      <a:a name="COLUMN_TITLE" value="Master Event"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Reference to the event that will trigger other events upon reception of
                            this event.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Master Event"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="ECUC:19befd3b-f0bd-4c89-8c48-e3902ec2f691"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference."/>
                        <a:tst 
                               expr="count(../../eb-list::*[node:ref(DemMultiEventTriggeringMasterEventRef)/DemEventId = node:ref(node:current())/DemEventId]) &gt; 1" 
                               true="The Master Event Reference must be unique within all Master Events in Multi Event Triggering list."/>
                        <a:tst 
                               expr="count(../../eb-list::*[util:distinct(node:refs(DemMultiEventTriggeringSlaveEventRef/eb-list::*))/DemEventId = node:ref(node:current())/DemEventId]) &gt; 0" 
                               true="The Master Event Reference must not be equal with any of Slave Events in Multi Event Triggering list."/>
                        <a:tst 
                               expr="node:ref(.)/DemEventKind = &apos;DEM_EVENT_KIND_SEV&apos;" 
                               true="Events of kind DEM_EVENT_KIND_SEV must not be part of Multi Event Triggering."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:lst name="DemMultiEventTriggeringSlaveEventRef">
                      <a:a name="LABEL" value="Slave Event List"/>
                      <a:a name="ROWS" value="8"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemMultiEventTriggeringSlaveEventRef" 
                             type="REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Slave Event"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the event that is triggered upon triggering the master
                              event.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Slave Event"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:ed6787d8-e5df-4ea8-8faa-98779c255747"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst 
                                 expr="count(../../../eb-list::*[node:ref(DemMultiEventTriggeringMasterEventRef)/DemEventId = node:ref(node:current())/DemEventId]) &gt; 0" 
                                 true="The Slave Event Reference must not be equal with any of Master Events in Multi Event Triggering list."/>
                          <a:tst 
                                 expr="(../../DemMultiEventTriggeringAlternativeBehavior = &apos;DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE&apos;) and                                        (not(node:refexists(node:ref(.)/DemEventClass/DemEnableConditionGroupRef)) or                                        (count(node:ref(node:ref(.)/DemEventClass/DemEnableConditionGroupRef)/eb-list::*/eb-list::*) &gt; 1) )" 
                                 true="If DemMultiEventTriggeringAlternativeBehavior is DEM_MULTIEVENTTRIGGERING_ALT_EXCLUSIVE_REPLACE each slave event shall reference one                                  enable condition group with exactly one enable condition defined."/>
                          <a:tst 
                                 expr="node:ref(.)/DemEventKind = &apos;DEM_EVENT_KIND_SEV&apos;" 
                                 true="Events of kind DEM_EVENT_KIND_SEV must not be part of Multi Event Triggering."/>
                          <a:tst 
                                 expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/Dem_MultiEventTriggeringSetEventAvailable)) and                                         (count(../../../eb-list::*/DemMultiEventTriggeringSlaveEventRef/eb-list::*[node:value(.) = node:value(node:current())]) &gt; 1)" 
                                 true="If Dem_MultiEventTriggeringSetEventAvailable is true, the Slave Event Reference must not be equal with any Slave Event Reference of another Multi Event Triggering list."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemExtendedDataClass" type="MAP">
                  <a:a name="LABEL" value="Extended Data Class List"/>
                  <a:a name="ROWS" value="6"/>
                  <a:a name="TAB" value="Extended Data"/>
                  <a:da name="MAX" value="256"/>
                  <v:ctr name="DemExtendedDataClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This class contains the combinations of extended data records for an
                          extended data class.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="47189e41-004d-449a-976a-3798cec6a544"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_AGINGCTR&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_AGINGCTR&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_AGINGCTR_UPCNT&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_AGINGCTR_UPCNT&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_AGINGCTR_DOWNCNT&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_AGINGCTR_DOWNCNT&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OVFLIND&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OVFLIND&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCCCTR&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCCCTR&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_SI30&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_SI30&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_CURRENT_FDC&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_CURRENT_FDC&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_FDC12&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_FDC12&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC1&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC1&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC2&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC2&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC3&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC3&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC4&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC4&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC5&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC5&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC6&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC6&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC7&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC7&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_PRIORITY&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_PRIORITY&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_SIGNIFICANCE&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_SIGNIFICANCE&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_EVENT_ID&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_EVENT_ID&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_ROOT_EVENT_ID&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_ROOT_EVENT_ID&apos; must be unique per Extended Data Class."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_MONITOR_ACTIVITY_DATA&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_MONITOR_ACTIVITY_DATA&apos; must be unique per Extended Data Class."/>
                    </a:da>
                    <a:da name="TITLE" value="Extended Data Class"/>
                    <a:da name="WARNING" type="XPath">
                      <a:tst 
                             expr="count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[                                                                    node:refexists(DemExtendedDataClassRef) and                                                                    as:name(as:ref(DemExtendedDataClassRef)) = as:name(node:current())]                                         ) = 0" 
                             true="Suboptimal configuration: This extended data class is not used by any event."/>
                      <a:tst 
                             expr="count(util:distinct(node:refs(DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[contains(as:ref(.)/DemInternalDataElement, &apos;DEM_AGINGCTR&apos;)]) &gt; 1" 
                             true="Suboptimal configuration: More than one aging counter is mapped to this Extended Data Class."/>
                    </a:da>
                    <v:lst name="DemExtendedDataRecordClassRef">
                      <a:a name="LABEL" value="Extended Data Record List"/>
                      <a:da name="MAX" value="253"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemExtendedDataRecordClassRef" 
                             type="REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Extended Data Record"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              This reference contains the link to an extended data class record.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Extended Data Record"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="true"/>
                        <a:a name="UUID" 
                             value="d1a21400-1fd0-4a71-bf58-3b8ff9ca7e4a"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The Extended Data Record Reference must be unique."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemExtendedDataRecordClass"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemExtendedDataRecordClass" type="MAP">
                  <a:a name="COLUMNS" value="DemExtendedDataRecordNumber"/>
                  <a:a name="LABEL" value="Extended Data Record List"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="Extended Data"/>
                  <a:da name="MAX" value="253"/>
                  <v:ctr name="DemExtendedDataRecordClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration (parameters) for an
                          extended data record class.&lt;/p&gt;

                          &lt;p&gt;It is assembled out of one or several data elements&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="EXTDATAREC_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="42615578-1bed-44bb-beb1-c7bdc1a702b1"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="((sum(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*))/DemDataElementDataSize)) +                                     (sum(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*)[(DemDataElementDataType = &apos;UINT8_N&apos;) or (DemDataElementDataType = &apos;SINT8_N&apos;)])/DemDataElementArraySize)) +                                     (sum(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*)[(DemDataElementDataType = &apos;UINT16_N&apos;) or (DemDataElementDataType = &apos;SINT16_N&apos;)])/DemDataElementArraySize)*2) +                                     (sum(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*)[(DemDataElementDataType = &apos;UINT32_N&apos;) or (DemDataElementDataType = &apos;SINT32_N&apos;) or (DemDataElementDataType = &apos;FLOAT32_N&apos;)])/DemDataElementArraySize)*4) +                                     (count(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*)[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;)and((DemDataElementDataType = &apos;BOOLEAN&apos;) or (DemDataElementDataType = &apos;UINT8&apos;) or (DemDataElementDataType = &apos;SINT8&apos;))]))) +                                     (count(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*)[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;)and((DemDataElementDataType = &apos;UINT16&apos;) or (DemDataElementDataType = &apos;SINT16&apos;))]))*2) +                                     (count(util:distinct(node:refs(./DemDataElementClassRef/eb-list::*)[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;)and((DemDataElementDataType = &apos;UINT32&apos;) or (DemDataElementDataType = &apos;SINT32&apos;) or (DemDataElementDataType = &apos;FLOAT32&apos;))]))*4)                                    ) &lt;= 255" 
                             false="The size of extended data record can not be more than 255."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_AGINGCTR&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_AGINGCTR&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_AGINGCTR_UPCNT&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_AGINGCTR_UPCNT&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_AGINGCTR_DOWNCNT&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_AGINGCTR_DOWNCNT&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OVFLIND&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OVFLIND&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCCCTR&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCCCTR&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_SI30&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_SI30&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_CURRENT_FDC&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_CURRENT_FDC&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_FDC12&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_FDC12&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC1&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC1&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC2&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC2&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC3&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC3&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC4&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC4&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC5&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC5&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC6&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC6&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC7&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_OCC7&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_PRIORITY&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_PRIORITY&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_SIGNIFICANCE&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_SIGNIFICANCE&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_EVENT_ID&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_EVENT_ID&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_ROOT_EVENT_ID&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_ROOT_EVENT_ID&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_CYCLES_SINCE_LAST_FAILED&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_CYCLES_SINCE_LAST_FAILED&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_CYCLES_SINCE_FIRST_FAILED&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_CYCLES_SINCE_FIRST_FAILED&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_FAILED_CYCLES&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_FAILED_CYCLES&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_MONITOR_ACTIVITY_DATA&apos;]) &gt; 1" 
                             true="The Internal Data Element &apos;DEM_MONITOR_ACTIVITY_DATA&apos; must be unique per Extended Data Record Class."/>
                      <a:tst 
                             expr="(node:value(DemExtendedDataRecordNumber) = &apos;147&apos;) and                                    ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                        (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) ) or                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                    (count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement != &apos;DEM_MONITOR_ACTIVITY_DATA&apos;]) != 0)" 
                             true="No other data than DEM_MONITOR_ACTIVITY_DATA is allowed for extended data record number 0x93."/>
                      <a:tst 
                             expr="(node:value(DemExtendedDataRecordNumber) != &apos;147&apos;) and                                    ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                        (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;) ) or                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                    (count(DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_MONITOR_ACTIVITY_DATA&apos;]) &gt; 0)" 
                             true="The data element configured with value DEM_MONITOR_ACTIVITY_DATA must not be referenced by other extended data record number than 0x93."/>
                    </a:da>
                    <a:da name="TITLE" value="Extended Data Record"/>
                    <a:da name="WARNING" type="XPath">
                      <a:tst 
                             expr="count(../../DemExtendedDataClass/eb-list::*/DemExtendedDataRecordClassRef/eb-list::*[                                                                         node:refexists(.) and                                                                         as:name(as:ref(.)) = as:name(node:current())]                                         ) = 0" 
                             true="Suboptimal configuration: This extended data record class is not used by any extended data class."/>
                      <a:tst 
                             expr="count(./DemDataElementClassRef/eb-list::*[node:name(as:ref(.)) = &apos;DemInternalDataElementClass&apos;]) != 0 and                                    (node:exists(./DemExtendedDataRecordUpdate) and ./DemExtendedDataRecordUpdate = &apos;DEM_UPDATE_RECORD_NO&apos;)" 
                             true="Even with DemExtendedDataRecordUpdate set to DEM_UPDATE_RECORD_NO, the current value is reported for the configured internal data elements &lt;DEM_AGINGCTR/DEM_AGINGCTR_UPCNT/DEM_AGINGCTR_DOWNCNT/DEM_OCCCTR/DEM_OVFLIND&gt;."/>
                    </a:da>
                    <v:var name="DemExtendedDataRecordNumber" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="Record Number"/>
                      <a:a name="DEFAULT_RADIX" value="HEX"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This configuration parameter specifies an unique identifier for an
                            &lt;code&gt;extended data record&lt;/code&gt;.&lt;/p&gt;

                            &lt;p&gt;One or more &lt;code&gt;extended data records&lt;/code&gt;
                            can be assigned to one diagnostic event/DTC.&lt;/p&gt;

                            &lt;p&gt;&lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0xF0 - 0xFF&lt;/code&gt; are resereved by ISO
                            (therefore the maximal value equals &lt;code&gt;0xEF&lt;/code&gt;).&lt;/p&gt;

                            &lt;p&gt;Note: When &lt;code&gt;OBDonUDS&lt;/code&gt; is supported the record number
                              &lt;code&gt;0x93&lt;/code&gt; can only be configured for Monitor Activity Data.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Extended Data Record Number"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="a387f9a1-5a6c-44a5-a08e-ddf196b46a7e"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..) + 1)"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=239"/>
                          <mt:tst expr="&gt;=1"/>
                        </mt:range>
                        <mt:xpath 
                                  false="The Extended Data Record Number must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemExtendedDataRecordNumber, .)"/>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and (. &gt;= 144) and (. &lt;= 239)" 
                            true="Extended data records within range 0x90 - 0xEF cannot be read via a request made with record number 0xFE, when OBD support is disabled."/>
                    </v:var>
                    <v:var name="DemExtendedDataRecordUpdate" 
                           type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            This parameter defines the case, when the extended data record is
                            stored/updated.
                            &lt;p&gt;&lt;em&gt;If the parameter is disabled, the value is taken as
                            &lt;code&gt;DEM_UPDATE_RECORD_YES&lt;/code&gt; by default.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;Range&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;DEM_UPDATE_RECORD_NO&lt;/code&gt;: This extended data record is only
                                  captured for new event memory entries.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_UPDATE_RECORD_YES&lt;/code&gt;: This extended data record is captured every time.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Extended Data Record Update"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="c4c2417e-4851-4fa2-9b79-5837ad0de419"/>
                      <a:da name="DEFAULT" value="DEM_UPDATE_RECORD_YES"/>
                      <a:da name="ENABLE" value="true"/>
                      <a:da name="RANGE">
                        <a:v>DEM_UPDATE_RECORD_NO</a:v>
                        <a:v>DEM_UPDATE_RECORD_YES</a:v>
                      </a:da>
                    </v:var>
                    <v:lst name="DemDataElementClassRef">
                      <a:a name="LABEL" value="Data Element Class List"/>
                      <a:a name="ROWS" value="6"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemDataElementClassRef" 
                             type="CHOICE-REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Data Element Class"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              This reference contains the link to a data element class.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Data Element Class"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="true"/>
                        <a:a name="UUID" 
                             value="cd4ab78a-e41f-4a1b-92c7-7b045f8e1afd"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The Data Element Class Reference must be unique."/>
                          <a:tst 
                                 expr="as:ref(.)/DemDataElementCaptureTrigger = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;" 
                                 true="An extended data record must not include Data Elements with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                        </a:da>
                        <a:da name="REF">
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemInternalDataElementClass</a:v>
                        </a:da>
                      </v:ref>
                    </v:lst>
                    <v:var name="DemExtendedDataRecordAlwaysAvailable" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Defines if the extended data record is available without an event memory entry.
                            &lt;/p&gt;
                            &lt;p&gt;
                              The value can be set to true only if all referenced data elements are available
                              without an event memory entry.
                            &lt;/p&gt;
                            &lt;p&gt;
                              The following internal data elements are always available:
                              &lt;ul&gt;
                                &lt;li&gt;DEM_CURRENT_FDC&lt;/li&gt;
                                &lt;li&gt;DEM_OVFLIND&lt;/li&gt;
                                &lt;li&gt;DEM_PRIORITY&lt;/li&gt;
                                &lt;li&gt;DEM_SIGNIFICANCE&lt;/li&gt;
                                &lt;li&gt;DEM_MONITOR_ACTIVITY_DATA&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/p&gt;
                            &lt;p&gt; An external CS data element is always available if it has its &lt;code&gt;
                                DemDataElementCaptureOnRetrieval&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/p&gt;
                            &lt;p&gt;
                              Note: Configuring the extended data record as always available has impact on
                              the following APIs:
                              &lt;ul&gt;
                                &lt;li&gt;Dem_GetEventExtendedDataRecord()&lt;/li&gt;
                                &lt;li&gt;Dem_GetEventExtendedDataRecordEx()&lt;/li&gt;
                                &lt;li&gt;Dem_GetNextExtendedDataRecord()&lt;/li&gt;
                                &lt;li&gt;Dem_GetSizeOfExtendedDataRecordSelection()&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Data Record always available"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="574eece0-70da-11e5-9d70-feff819cdc9f"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(node:existsAndTrue(.)) and                                      ( count(util:distinct(node:refs(../DemDataElementClassRef/eb-list::*))[DemInternalDataElement = &apos;DEM_CURRENT_FDC&apos; or DemInternalDataElement = &apos;DEM_OVFLIND&apos; or DemInternalDataElement = &apos;DEM_PRIORITY&apos;                                        or DemInternalDataElement = &apos;DEM_SIGNIFICANCE&apos; or DemInternalDataElement = &apos;DEM_MONITOR_ACTIVITY_DATA&apos; or node:existsAndTrue(DemDataElementCaptureOnRetrieval)]) &lt;                                        count(util:distinct(node:refs(../DemDataElementClassRef/eb-list::*)))                                      )" 
                               true="A data record can only be always available, if all contained data elements are always available."/>
                        <a:tst 
                               expr="(../DemExtendedDataRecordNumber = &apos;147&apos;) and (node:existsAndFalse(.)) and                                      (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                      (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc) or                                        (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;))" 
                               true="The extended data record number 0x93 must be always available."/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemFreezeFrameClass" type="MAP">
                  <a:a name="LABEL" value="Freeze Frame Class List"/>
                  <a:a name="ROWS" value="6"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:da name="MAX" value="65534"/>
                  <v:ctr name="DemFreezeFrameClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This container contains the combinations of DIDs for freeze frames of UDS
                          and emission related diagnostics over UDS.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0c5"/>
                    <a:da name="TITLE" value="Freeze Frame Class"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="Dem:FreezeFrameClassVerify(.)" 
                          false="Suboptimal configuration: This freeze frame class is not used."/>
                    <v:lst name="DemDidClassRef">
                      <a:a name="LABEL" value="Did Class List"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemDidClassRef" type="REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Did Class"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              For OBD-relevant data. Multiple PIDs can be relevant per freeze
                              frame.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Did Class"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="true"/>
                        <a:a name="UUID" 
                             value="43a1e491-db14-45f2-bd5f-e81ac7127df8"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The Did Class Reference must be unique."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDidClass"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemFreezeFrameRecNumClass" type="MAP">
                  <a:a name="LABEL" value="Freeze Frame Rec Num Class List"/>
                  <a:a name="ROWS" value="6"/>
                  <a:a name="TAB" value="Freeze Frames"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../DemTypeOfFreezeFrameRecordNumeration = &apos;DEM_FF_RECNUM_CONFIGURED&apos;"/>
                  <a:da name="MAX" value="255"/>
                  <v:ctr name="DemFreezeFrameRecNumClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains a list of dedicated, different freeze frame
                          record numbers assigned to an event. The order of record numbers in
                          this list is assigned to the chronological order of the respective
                          freeze frame records.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Freeze Frame Rec Num Class&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemTypeOfFreezeFrameRecordNumeration&quot;&gt;DemTypeOfFreezeFrameRecordNumeration&lt;/a&gt;: must be set to &lt;code&gt;DEM_FF_RECNUM_CONFIGURED&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="ff082749-98ff-4079-9d4d-897396371888"/>
                    <a:da name="TITLE" value="Freeze Frame Rec Num Class"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[                                                                    node:refexists(DemFreezeFrameRecNumClassRef) and                                                                    as:name(as:ref(DemFreezeFrameRecNumClassRef)) = as:name(node:current())]                                         ) = 0" 
                          true="Suboptimal configuration: This Freeze Frame Rec Num Class is not used by any event."/>
                    <v:lst name="DemFreezeFrameRecordNumber">
                      <a:a name="LABEL" value="Freeze Frame Record Number List"/>
                      <a:a name="TAB" value="Freeze Frame Record Number"/>
                      <a:da name="MAX" value="254"/>
                      <a:da name="MIN" value="1"/>
                      <v:var name="DemFreezeFrameRecordNumber" type="INTEGER">
                        <a:a name="DEFAULT_RADIX" value="HEX"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter defines a record number for a freeze frame
                              record. This record number is unique per freeze frame record
                              number class.&lt;/p&gt;

                              &lt;p&gt;The range of this value is defined by ISO 14229-1
                              (&lt;code&gt;0x01&lt;/code&gt; .. &lt;code&gt;0xFE&lt;/code&gt;).&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Freeze Frame Record"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="false"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="c904ae8a-4907-4344-9e17-0769d4e1c789"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=254"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    false="The freeze frame record numbers in a freeze frame record number class shall be unique." 
                                    expr="text:uniq(../eb-list::*, .)"/>
                            <mt:tst 
                                    true="DemFreezeFrameRecNumClass must not contain an entry with record number equal to 0xF0. When OBDonUDS freeze frame is enabled, the record number 0xF0 (240) is reserved for the last OBD freeze frame occurrence of the event." 
                                    expr="(. = 240) and                                           (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and                                           ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                             (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                             (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) ) and                                           (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                           (node:refvalid(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemUDSOBDFreezeFrameClassRef)) and                                           (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemTypeOfFreezeFrameRecordNumeration = &apos;DEM_FF_RECNUM_CONFIGURED&apos;)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemSPNClass" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>DemSPNId</a:v>
                    <a:v>DemSPNDataElementClassRef</a:v>
                  </a:a>
                  <a:a name="LABEL" value="SPN Class"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="J1939 Freeze Frames"/>
                  <a:da name="MAX" value="524287"/>
                  <v:ctr name="DemSPNClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This container contains the configuration (parameters) for a SPN.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="SPN Class"/>
                    <a:a name="NAME_PATTERN" value="J1939SPN_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="b957bda8-7aac-4852-b18a-c60d1c67ed8f"/>
                    <a:da name="TITLE" value="SPN Class"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="Dem:SPNClassVerify(.)" 
                          false="Suboptimal configuration: This SPN class is not used by any J1939 freeze frame class."/>
                    <v:var name="DemSPNId" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="SPN ID"/>
                      <a:a name="DEFAULT_RADIX" value="DEC"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Suspect parameter number
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Suspect Parameter Number"/>
                      <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="6cecd587-8eda-4153-9a42-2acca20f8389"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..))"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=524287"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath false="The SPN ID must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemSPNId, .)"/>
                      </a:da>
                    </v:var>
                    <v:ref name="DemSPNDataElementClassRef" 
                           type="CHOICE-REFERENCE">
                      <a:a name="COLUMN_TITLE" value="SPN Data Element"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            This reference contains the link to a data element class. Internal
                            data elements can not be referenced in the current implementation.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="SPN Data Element"/>
                      <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                      <a:a name="UUID" 
                           value="9b91358d-1d65-469b-a99e-a3d8f803073c"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference."/>
                        <a:tst expr="text:uniq(../eb-list::*, .)" 
                               false="The SPN Data Element Class Reference must be unique."/>
                        <a:tst 
                               expr="(../DemSPNId=&apos;899&apos; and                                       (not(((node:exists(as:ref(.)/DemDataElementDataSize)) and (as:ref(.)/DemDataElementDataSize=1)) or                                            ((node:exists(as:ref(.)/DemDataElementArraySize)) and (as:ref(.)/DemDataElementArraySize=1) and ((as:ref(.)/DemDataElementDataType = &apos;UINT8_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT8_N&apos;))) or                                             ((not(node:exists(as:ref(.)/DemDataElementArraySize))) and ((as:ref(.))[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;) and ((DemDataElementDataType = &apos;UINT8&apos;) or (DemDataElementDataType = &apos;BOOLEAN&apos;) or (DemDataElementDataType = &apos;SINT8&apos;))]))                                        )))" 
                               true="SPN 899 shall be configured with a Data element size of 1 byte."/>
                        <a:tst 
                               expr="(../DemSPNId=&apos;102&apos; and                                       (not(((node:exists(as:ref(.)/DemDataElementDataSize)) and (as:ref(.)/DemDataElementDataSize=1)) or                                            ((node:exists(as:ref(.)/DemDataElementArraySize)) and (as:ref(.)/DemDataElementArraySize=1) and ((as:ref(.)/DemDataElementDataType = &apos;UINT8_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT8_N&apos;))) or                                             ((not(node:exists(as:ref(.)/DemDataElementArraySize))) and ((as:ref(.))[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;) and ((DemDataElementDataType = &apos;UINT8&apos;) or (DemDataElementDataType = &apos;BOOLEAN&apos;) or (DemDataElementDataType = &apos;SINT8&apos;))]))                                         )))" 
                               true="SPN 102 shall be configured with a Data element size of 1 byte."/>
                        <a:tst 
                               expr="(../DemSPNId=&apos;190&apos; and                                       (not(((node:exists(as:ref(.)/DemDataElementDataSize)) and (as:ref(.)/DemDataElementDataSize=2)) or                                            ((node:exists(as:ref(.)/DemDataElementArraySize)) and ((as:ref(.)/DemDataElementArraySize=2) and ((as:ref(.)/DemDataElementDataType = &apos;UINT8_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT8_N&apos;)))                                              or ((as:ref(.)/DemDataElementArraySize=1) and ((as:ref(.)/DemDataElementDataType = &apos;UINT16_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT16_N&apos;)))) or                                             ((not(node:exists(as:ref(.)/DemDataElementArraySize))) and ((as:ref(.))[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;) and ((DemDataElementDataType = &apos;UINT16&apos;) or (DemDataElementDataType = &apos;SINT16&apos;))]))                                        )))" 
                               true="SPN 190 shall be configured with a Data element size of 2 bytes."/>
                        <a:tst 
                               expr="(../DemSPNId=&apos;92&apos; and                                       (not(((node:exists(as:ref(.)/DemDataElementDataSize)) and (as:ref(.)/DemDataElementDataSize=1)) or                                            ((node:exists(as:ref(.)/DemDataElementArraySize)) and (as:ref(.)/DemDataElementArraySize=1) and ((as:ref(.)/DemDataElementDataType = &apos;UINT8_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT8_N&apos;))) or                                             ((not(node:exists(as:ref(.)/DemDataElementArraySize))) and ((as:ref(.))[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;) and ((DemDataElementDataType = &apos;UINT8&apos;) or (DemDataElementDataType = &apos;BOOLEAN&apos;) or (DemDataElementDataType = &apos;SINT8&apos;))]))                                        )))" 
                               true="SPN 92 shall be configured with a Data element size of 1 byte."/>
                        <a:tst 
                               expr="(../DemSPNId=&apos;110&apos; and                                       (not(((node:exists(as:ref(.)/DemDataElementDataSize)) and (as:ref(.)/DemDataElementDataSize=1)) or                                            ((node:exists(as:ref(.)/DemDataElementArraySize)) and (as:ref(.)/DemDataElementArraySize=1) and ((as:ref(.)/DemDataElementDataType = &apos;UINT8_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT8_N&apos;))) or                                             ((not(node:exists(as:ref(.)/DemDataElementArraySize))) and ((as:ref(.))[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;) and ((DemDataElementDataType = &apos;UINT8&apos;) or (DemDataElementDataType = &apos;BOOLEAN&apos;) or (DemDataElementDataType = &apos;SINT8&apos;))]))                                        )))" 
                               true="SPN 110 shall be configured with a Data element size of 1 byte."/>
                        <a:tst 
                               expr="(../DemSPNId=&apos;84&apos; and                                       (not(((node:exists(as:ref(.)/DemDataElementDataSize)) and (as:ref(.)/DemDataElementDataSize=2)) or                                            ((node:exists(as:ref(.)/DemDataElementArraySize)) and ((as:ref(.)/DemDataElementArraySize=2) and ((as:ref(.)/DemDataElementDataType = &apos;UINT8_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT8_N&apos;)))                                              or ((as:ref(.)/DemDataElementArraySize=1) and ((as:ref(.)/DemDataElementDataType = &apos;UINT16_N&apos;) or (as:ref(.)/DemDataElementDataType = &apos;SINT16_N&apos;)))) or                                             ((not(node:exists(as:ref(.)/DemDataElementArraySize))) and ((as:ref(.))[(node:name(.) = &apos;DemExternalCSDataElementClass&apos;) and ((DemDataElementDataType = &apos;UINT16&apos;) or (DemDataElementDataType = &apos;SINT16&apos;))]))                                        )))" 
                               true="SPN 84 shall be configured with a Data element size of 2 bytes."/>
                      </a:da>
                      <a:da name="REF">
                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                      </a:da>
                    </v:ref>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemJ1939FreezeFrameClass" type="MAP">
                  <a:a name="LABEL" value="J1939 Freeze Frame Class List"/>
                  <a:a name="ROWS" value="6"/>
                  <a:a name="TAB" value="J1939 Freeze Frames"/>
                  <a:da name="MAX" value="254"/>
                  <v:ctr name="DemJ1939FreezeFrameClass" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This container contains the combinations of SPNs for a J1939
                          relevant freeze frame.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="eac8d3cf-4cc4-4de7-8012-d1737fb25833"/>
                    <a:da name="TITLE" value="J1939 Freeze Frame Class"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="Dem:J1939FreezeFrameClassVerify(.)" 
                          false="Suboptimal configuration: This J1939 freeze frame class is not used by any event."/>
                    <v:lst name="DemSPNClassRef">
                      <a:a name="LABEL" value="SPN Class List"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemSPNClassRef" type="REFERENCE">
                        <a:a name="COLUMN_TITLE" value="SPN Class"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              This container contains the combinations of SPNs for a J1939
                          relevant freeze frame.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="SPN Class"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="true"/>
                        <a:a name="UUID" 
                             value="ac1223ee-0933-427f-84e9-ea38d8371a0f"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The SPN Class Reference must be unique."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemSPNClass"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:var name="DemJ1939Support" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines
                        whether J1939 is supported or not.&lt;/p&gt;
                        &lt;p&gt;If OBD is disabled, the following DMs are unavailable:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;DM6: Emission-Related Pending Diagnostic Trouble Codes&lt;/li&gt;
                          &lt;li&gt;DM12: Emission-Related MIL-On Diagnostic Trouble Codes&lt;/li&gt;
                          &lt;li&gt;DM23: Emission-Related Previously MIL-On Diagnostic Trouble Codes&lt;/li&gt;
                          &lt;li&gt;DM28: Emission-Related Permanent Diagnostic Trouble Codes&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="J1939 Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="J1939"/>
                  <a:a name="UUID" value="244bd346-583f-468e-83b9-0ad706ad3633"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((node:existsAndTrue(.)) and                                   not(node:exists(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and as:ref(DemDTCClassRef)/DemJ1939DTCValue])))" 
                        true="If J1939 support is enabled, then at least one DemJ1939DTCValue must be configured."/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.)) and (node:existsAndFalse(../DemOBDSupport))" 
                        true="If OBD is disabled DM6, DM12, DM23 and DM28 are not available."/>
                </v:var>
                <v:ref name="DemAmberWarningLampIndicatorRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the indicator representing the Amber Warning.&lt;/p&gt;

                        &lt;p&gt;This parameter is optional for ECUs supporting J1939 (refer to
                           &lt;code&gt;DemJ1939Support&lt;/code&gt;).
                        &lt;/p&gt;
                        &lt;p&gt;If this parameter is enabled and calibration support is OFF,
                           it is expected that at least one event references it.
                           If this parameter is enabled and calibration support is ON,
                           it is expected that at least one indicator attribute is defined
                           so that later on the reference can be filled during calibration.
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Amber Warning Indicator&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Amber Warning Indicator"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                  <a:a name="TAB" value="J1939"/>
                  <a:a name="UUID" value="47c66f86-d156-45f2-8353-65e1fd5283d7"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemJ1939Support)"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (not(node:refvalid(.)))" 
                           true="Invalid reference."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndTrue(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*) = 0)" 
                           true="Please configure at least one indicator class."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemAmberWarningLampIndicatorRef]) = 0) " 
                           true="The Amber Warning indicator must be referenced by at least one event."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemProtectLampIndicatorRef)) and (node:value(.) = node:value(../DemProtectLampIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemRedStopLampIndicatorRef)) and (node:value(.) = node:value(../DemRedStopLampIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemMILIndicatorRef)) and (node:value(.) = node:value(../DemMILIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemIndicator"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939ReadingDtcSupport))" 
                        true="Please consider setting DemJ1939ReadingDtcSupport to true, if DemAmberWarningLampIndicatorRef is configured, to activate corresponding code implementation."/>
                </v:ref>
                <v:ref name="DemProtectLampIndicatorRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the indicator representing the Protect.&lt;/p&gt;

                        &lt;p&gt;This parameter is optional for ECUs supporting J1939 (refer to
                          &lt;code&gt;DemJ1939Support&lt;/code&gt;).
                        &lt;/p&gt;
                        &lt;p&gt;If this parameter is enabled and calibration support is OFF,
                           it is expected that at least one event references it.
                           If this parameter is enabled and calibration support is ON,
                           it is expected that at least one indicator attribute is defined
                           so that later on the reference can be filled during calibration.
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Protect Indicator&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Protect Indicator"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                  <a:a name="TAB" value="J1939"/>
                  <a:a name="UUID" value="123ebfca-6139-4823-8005-bb45686c58f0"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemJ1939Support)"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (not(node:refvalid(.)))" 
                           true="Invalid reference."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndTrue(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*) = 0)" 
                           true="Please configure at least one indicator class."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemProtectLampIndicatorRef]) = 0) " 
                           true="The Protect indicator must be referenced by at least one event."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemAmberWarningLampIndicatorRef)) and (node:value(.) = node:value(../DemAmberWarningLampIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemRedStopLampIndicatorRef)) and (node:value(.) = node:value(../DemRedStopLampIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemMILIndicatorRef)) and (node:value(.) = node:value(../DemMILIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemIndicator"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939ReadingDtcSupport))" 
                        true="Please consider setting DemJ1939ReadingDtcSupport to true, if a Protect Lamp Indicator Reference was configured, to activate corresponding code implementation."/>
                </v:ref>
                <v:ref name="DemRedStopLampIndicatorRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the indicator representing the Red Stop.&lt;/p&gt;

                        &lt;p&gt;This parameter is optional for ECUs supporting J1939 (refer to
                          &lt;code&gt;DemJ1939Support&lt;/code&gt;).
                        &lt;/p&gt;
                        &lt;p&gt;If this parameter is enabled and calibration support is OFF,
                           it is expected that at least one event references it.
                           If this parameter is enabled and calibration support is ON,
                           it is expected that at least one indicator attribute is defined
                           so that later on the reference can be filled during calibration.
                        &lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Red Stop Indicator&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Red Stop Indicator"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_422"/>
                  <a:a name="TAB" value="J1939"/>
                  <a:a name="UUID" value="3a25140b-f890-49cf-924c-633b4c71926e"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:existsAndTrue(../DemJ1939Support)"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (not(node:refvalid(.)))" 
                           true="Invalid reference."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndTrue(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*) = 0)" 
                           true="Please configure at least one indicator class."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(.././DemCalibrationSupport)) and                                  (count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/eb-list::*[1]/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*[DemIndicatorRef=as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRedStopLampIndicatorRef]) = 0) " 
                           true="The Red Stop indicator must be referenced by at least one event."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemAmberWarningLampIndicatorRef)) and (node:value(.) = node:value(../DemAmberWarningLampIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemProtectLampIndicatorRef)) and (node:value(.) = node:value(../DemProtectLampIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                    <a:tst 
                           expr="(node:existsAndTrue(../DemJ1939Support)) and (node:exists(../DemMILIndicatorRef)) and (node:value(.) = node:value(../DemMILIndicatorRef))" 
                           true="The indicator must not be referenced by another lamp."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemIndicator"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(../DemJ1939Support)) and                                  (node:refvalid(.)) and                                  (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939ReadingDtcSupport))" 
                        true="Please consider setting DemJ1939ReadingDtcSupport to true, if a Red Stop Lamp Indicator Reference was configured, to activate corresponding code implementation."/>
                </v:ref>
                <v:ctr name="DemGeneralOBD" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This container contains the general OBD-specific configuration
                        (parameters) of the Dem module.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:a name="UUID" value="72a4c763-9366-42e5-864a-511cb6c273de"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="TITLE" value="General OBD"/>
                  <v:var name="DemOBDEventDisplacement" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch activates/deactivates a particular
                          displacement behavior for OBD events.&lt;/p&gt;
                          &lt;p&gt;If enabled, an OBD event that&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;triggers the MIL indicator &lt;b&gt;or&lt;/b&gt;&lt;/li&gt;
                            &lt;li&gt;holds the legislative Freeze Frame &lt;b&gt;or&lt;/b&gt;&lt;/li&gt;
                            &lt;li&gt;has the Pending-DTC status bit set&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;will not be considered during the displacement mechanism.
                          Potential memory entries of such events will not be displaced
                          if the new reported event has the same priority.&lt;/p&gt;
                          &lt;p&gt;The OBD event condition will be ignored if the new reported event has
                          a higher priority.&lt;/p&gt;
                          &lt;p&gt;If the &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy&quot;&gt;
                          event displacement strategy&lt;/a&gt; is configured to
                          &lt;code&gt;DEM_DISPLACEMENT_PRIO_OCC&lt;/code&gt;, the activation of the OBD event
                          displacement behavior has no effect if
                          &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementCriterionTNCTOC&quot;&gt;DemEventDisplacementCriterionTNCTOC&lt;/a&gt;
                          is disabled, because in this case same prioritized event entries are
                          ignored anyway.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: OBD events with above listed special conditions
                            are protected from being displaced by reported events with the same
                            priority.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: The displacement mechanism will not take into
                            account the special OBD conditions i.e. OBD events might be considered
                            and displaced by reported events with the same (or higher) priority.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;If the vendor-specific extension &lt;code&gt;DEM_TRIGGER_ON_FDC_THRESHOLD&lt;/code&gt; is
                          selected for &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture&quot;&gt;DemExtendedDataCapture&lt;/a&gt;
                          and &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture&quot;&gt;DemFreezeFrameCapture&lt;/a&gt;, a
                          non-standard/vendor-specific displacement algorithm is activated. It is not recomended
                          to enable DemOBDEventDisplacement in this case.&lt;/p&gt;
                          &lt;p&gt;The overall support for event memory displacement is enabled/disabled by the
                          configuration parameter
                          &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementSupport&quot;&gt;DemEventDisplacementSupport&lt;/a&gt;.
                          There is an overview of all configuration parameters available which affect the
                          displacement behavior.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;OBD Event Displacement&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;: must be set to &lt;code&gt;DEM_OBD_MASTER_ECU&lt;/code&gt;
                              or &lt;code&gt;DEM_OBD_PRIMARY_ECU&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="OBD Event Displacement"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="80e67980-d21e-11e8-a8d5-f2801f1b9fd1"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_MASTER_ECU&apos;) or                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_PRIMARY_ECU&apos;)"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="(node:existsAndTrue(.)) and                         (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementCriterionTNCTOC)) and                         (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemEventDisplacementStrategy = &apos;DEM_DISPLACEMENT_PRIO_OCC&apos;)" 
                          true="Suboptimal configuration: If displacement strategy is configured                         to DEM_DISPLACEMENT_PRIO_OCC, the activation of the OBD event displacement behavior has no                         effect if DemGeneral/DemEventDisplacementCriterionTNCTOC is disabled."/>
                  </v:var>
                  <v:var name="DemSupportedObdUdsDtcSeparation" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether a separate 3-byte
                          OBD DTC is used for OBDonUDS based UDS communication or not.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;true: A separate 3-byte OBD DTC configured via &lt;code&gt;DemDtcValue3Byte&lt;/code&gt; is used.&lt;/li&gt;
                            &lt;li&gt;false: The UDS DTC configured via &lt;code&gt;DemUdsDTC&lt;/code&gt; is used.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;OBD UDS DTC separation&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt;:
                                        must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                                &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt;:
                                        must be configured.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="OBD/UDS DTC separation"/>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="OBD"/>
                    <a:a name="UUID" 
                         value="e30d9424-f1a2-426b-ae80-debd674c80cd"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemOBDSupport)) and                                 ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) and                                   (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                   node:exists(../../DemCalloutObdVariantFnc) )"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="( (node:existsAndFalse(.)) and                                      node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/eb-list::*[1]/DcmDsp/DcmDspReadDTCInformation/DcmDspReadDTCInformationSupportedObdUdsDtcSeparation) and                                      (node:existsAndTrue(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/eb-list::*[1]/DcmDsp/DcmDspReadDTCInformation/DcmDspReadDTCInformationSupportedObdUdsDtcSeparation)) ) or                                    ( (node:existsAndTrue(.)) and                                      node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/eb-list::*[1]/DcmDsp/DcmDspReadDTCInformation/DcmDspReadDTCInformationSupportedObdUdsDtcSeparation) and                                      (node:existsAndFalse(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/eb-list::*[1]/DcmDsp/DcmDspReadDTCInformation/DcmDspReadDTCInformationSupportedObdUdsDtcSeparation)) )" 
                          true="The configuration of parameter DemSupportedObdUdsDtcSeparation must match with the corresponding configuration of Dcm parameter DcmDspReadDTCInformationSupportedObdUdsDtcSeparation."/>
                  </v:var>
                  <v:var name="DemOBDCentralizedPID21Handling" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Enables centralized calculation of PID $21 retrieved from the OBD Master or Primary ECU.&lt;/p&gt;
                            &lt;p&gt;Note: The parameter option &lt;code&gt;true&lt;/code&gt; (according to R4.2) is not supported in the current implementation.&lt;/p&gt;
                            &lt;p&gt;
                              &lt;code&gt;true:&lt;/code&gt; Centralized calculation: Not supported. The interfaces &lt;code&gt;Dem_SetDataOfPID21()&lt;/code&gt; and
                              &lt;code&gt;Dem_GetDataOfPID21()&lt;/code&gt; are not supported. &lt;code&gt;Dem_DcmReadDataOfPID21()&lt;/code&gt; will always return 0.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;code&gt;false:&lt;/code&gt; Local calculation: PID $21 will be calculated Dem internally
                              independent of &lt;a href=&quot;path:../../DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;.
                            &lt;/p&gt;
                            &lt;p&gt;The interface for the Dem_DcmReadDataOfPID21() API is not exported to RTE.&lt;/p&gt;
                            &lt;p&gt;To enable the Dem internal calculation, proceed as follows:&lt;/p&gt;
                               &lt;ol&gt;
                                 &lt;li&gt;
                                   Set the parameter &lt;a href=&quot;path:../DemOBDInputVehicleSpeed&quot;&gt;DemOBDInputVehicleSpeed&lt;/a&gt;
                                   as DemExternalCSDataElementClass or DemExternalSRDataElementClass and provide the
                                   application SWC that calculates the values for Vehicle Input Speed (PID $0D).&lt;/li&gt;
                                 &lt;li&gt;
                                   Enable the parameter &lt;a href=&quot;path:../DemOBDTimeSinceEngineStart&quot;&gt;DemOBDTimeSinceEngineStart&lt;/a&gt;,
                                   set it as DemExternalCSDataElementClass or DemExternalSRDataElementClass and provide
                                   the application SWC that calculates the values for Time Since Engine Start (PID $1F).
                                 &lt;/li&gt;
                                 &lt;li&gt;
                                   Enable the parameter &lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef&quot;&gt;DemMILIndicatorRef&lt;/a&gt;.
                                 &lt;/li&gt;
                               &lt;/ol&gt;
                            &lt;p&gt;The PID $21 information can be cleared using service $04, independent of the ClearEventAllowed setting.&lt;/p&gt;
                            &lt;p&gt;Note: This parameter was introduced with AUTOSAR R4.2.2.&lt;/p&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;Centralized PID21 Handling&lt;/em&gt;,&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;: must be set to &lt;code&gt;DEM_OBD_MASTER_ECU&lt;/code&gt;
                                or &lt;code&gt;DEM_OBD_PRIMARY_ECU&lt;/code&gt;.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Centralized PID21 Handling"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:fd5a0bb6-54d2-4124-85b4-316cc364f4f4"/>
                    <a:da name="DEFAULT" value="true"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_MASTER_ECU&apos;) or                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_PRIMARY_ECU&apos;)"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDTimeSinceEngineStart)) and (node:existsAndFalse(.))" 
                             true="Please configure parameter DemOBDTimeSinceEngineStart, when Centralized PID21 Handling is set to false."/>
                      <a:tst 
                             expr="not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDInputVehicleSpeed)) and (node:existsAndFalse(.))" 
                             true="Please configure parameter DemOBDInputVehicleSpeed, when Centralized PID21 Handling is set to false."/>
                      <a:tst 
                             expr="not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMILIndicatorRef)) and (node:existsAndFalse(.))" 
                             true="Please configure parameter DemMILIndicatorRef, in order to have calculated the PID $21 (Distance Traveled While MIL is Activated)."/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="(node:existsAndTrue(.))" 
                          true="Centralized calculation of PID21 is not supported. API Dem_DcmReadDataOfPID21() will always return 0."/>
                  </v:var>
                  <v:var name="DemOBDCentralizedPID31Handling" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Enables centralized calculation of PID $31 retrieved from the OBD Master ECU.&lt;/p&gt;
                          &lt;p&gt;Note: The parameter option &lt;code&gt;true&lt;/code&gt; (according to R4.2) is not supported
                          in the current implementation.&lt;/p&gt;
                          &lt;p&gt;&lt;code&gt;true:&lt;/code&gt; Centralized calculation: &lt;code&gt;Dem_SetDataOfPID31()&lt;/code&gt; is not
                          supported (according to R4.2). &lt;code&gt;Dem_DcmReadDataOfPID31()&lt;/code&gt; will always return 0.&lt;/p&gt;
                          &lt;p&gt;&lt;code&gt;false:&lt;/code&gt; Local calculation: PID $31 will be calculated Dem internally
                          independent of &lt;a href=&quot;path:../../DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;.&lt;/p&gt;
                          &lt;p&gt;To enable the Dem internal calculation, proceed as follows:&lt;/p&gt;
                          &lt;ol&gt;
                            &lt;li&gt;Set the parameter &lt;a href=&quot;path:../DemOBDInputVehicleSpeed&quot;&gt;DemOBDInputVehicleSpeed&lt;/a&gt;
                            as DemExternalCSDataElementClass and provide the application SWC that calculates
                            the values for Vehicle Input Speed (PID $0D).&lt;/li&gt;
                            &lt;li&gt;Enable the parameter &lt;a href=&quot;path:../DemOBDTimeSinceEngineStart&quot;&gt;DemOBDTimeSinceEngineStart&lt;/a&gt;,
                            set it as DemExternalCSDataElementClass and provide the application SWC that calculates
                            the values for Time Since Engine Start (PID $1F).&lt;/li&gt;
                          &lt;/ol&gt;
                          &lt;p&gt;Note: This parameter was introduced with AUTOSAR R4.2.1.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Centralized PID31 Handling&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;: must be set to &lt;code&gt;DEM_OBD_MASTER_ECU&lt;/code&gt;
                              or &lt;code&gt;DEM_OBD_PRIMARY_ECU&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Centralized PID31 Handling"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:fd5a0bb6-54d2-4124-85b4-316cc364f4f3"/>
                    <a:da name="DEFAULT" value="true"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_MASTER_ECU&apos;) or                                 (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_PRIMARY_ECU&apos;)"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDTimeSinceEngineStart)) and (node:existsAndFalse(.))" 
                             true="Please configure parameter DemOBDTimeSinceEngineStart, when Centralized PID31 Handling is set to false."/>
                      <a:tst 
                             expr="not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDInputVehicleSpeed)) and (node:existsAndFalse(.))" 
                             true="Please configure parameter DemOBDInputVehicleSpeed, when Centralized PID31 Handling is set to false."/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="(node:existsAndTrue(.))" 
                          true="Centralized calculation of PID31 is not supported. API Dem_DcmReadDataOfPID31() will always return 0."/>
                  </v:var>
                  <v:var name="DemOBDCompliancy" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration value to define the appropriate value to PID$1C &quot;OBD
                          requirements to which vehicle or engine is certified.&quot; according to the
                          respective standards, e.g. OBD, OBDII, JOBD etc. &lt;/p&gt;

                          &lt;p&gt;Notice as well J1979 or the &quot;DiagnosticReadiness 1&quot; DM5 message of
                          J1939-73&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;OBD Compliancy&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind&quot;&gt;DemOBDSupportKind&lt;/a&gt;/&lt;a href=&quot;path:as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939Readiness1Support&quot;&gt;DemJ1939Readiness1Support&lt;/a&gt;:&lt;br/&gt;
                              &lt;code&gt;DemOBDSupportKind&lt;/code&gt; must be set to &lt;code&gt;DEM_OBD_MASTER_ECU&lt;/code&gt; or &lt;code&gt;DEM_OBD_PRIMARY_ECU&lt;/code&gt;.&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemJ1939Readiness1Support&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="OBD Compliancy"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:cfcbf5d3-1309-4a84-ac7c-247c321b34f1"/>
                    <a:da name="DEFAULT" value="5"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_MASTER_ECU&apos;) or                               (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupportKind = &apos;DEM_OBD_PRIMARY_ECU&apos;) or                               (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralJ1939/DemJ1939Readiness1Support))                              "/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=255"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="DemOBDCompliancy must be set to 5 if DemOBDSupport is off." 
                                expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and (. != 5)"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and (. = 5)" 
                          true="Please set the correct OBD Compliancy Level if OBD support is enabled."/>
                  </v:var>
                  <v:var name="DemOBDDelayedDCYConfirmedAndMIL" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration parameter controls the delayed calculation of the
                             confirmed status for the OBD driving cycle.&lt;/p&gt;
                          &lt;p&gt;If this parameter is enabled, events having the driving cycle
                             configured as operation/failure cycle will only be confirmed, if the
                             driving cycle was qualified via Dem_SetCycleQualified().&lt;/p&gt;
                          &lt;p&gt;Note: This configuration parameter is not editable. To disable
                             the delayed confirmation, the driving cycle can be qualified directly
                             after each start of the driving cycle.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Enable Delayed Event Confirmation"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="c0139755-55d4-4057-8c10-040b95110a7f"/>
                    <a:da name="DEFAULT" value="true"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)" 
                          true="This switch has no effect, if OBD is not supported."/>
                  </v:var>
                  <v:ref name="DemOBDInputAcceleratorPaddleInformation" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the accelerator paddle information, which is assigned
                          to a specific data element used as interface for the Dem-internal PID
                          calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Input Accelerator Paddle Information"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="3f05aa9d-954f-432f-bc40-8424931a6401"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputAmbientPressure" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the ambient pressure, which is assigned to a
                          specific data element used as interface for the Dem-internal PID
                          calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Ambient Pressure"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="ad0b9aab-0ddd-4429-a428-21749f4a30cd"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputAmbientTemperature" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the ambient temperature, which is assigned to a
                          specific data element used as interface for the Dem-internal PID
                          calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Ambient Temperature"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="7b4e0143-34ef-4593-b330-4a67ac43cfd1"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputDistanceInformation" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the distance information, which is assigned to a
                          specific data element used as interface for the Dem-internal PID
                          calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Distance Information"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="f25a0cc6-2eb6-4b2d-9088-1ecb18c43e27"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputEngineSpeed" type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the engine speed, which is assigned to a specific
                          data element used as interface for the Dem-internal PID calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Engine Speed"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="217274d8-bbde-4682-ad47-059f7e91f380"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputEngineTemperature" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the engine temperature, which is assigned to a
                          specific data element used as interface for the Dem-internal PID
                          calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Engine Temperature"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="f7930871-0f2b-46e3-a02c-29f5277ccf13"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputProgrammingEvent" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Input variable for the programming event, which is assigned to a
                          specific data element used as interface for the Dem-internal PID
                          calculations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Programming Event"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="cda15f00-6abd-4aff-85a7-d671a81885ae"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                          false="Invalid reference."/>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDInputVehicleSpeed" type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Input variable for the vehicle speed, which is assigned to a specific
                          data element used as interface for the Dem-internal PID calculations.&lt;/p&gt;
                          &lt;p&gt;This parameter is required for Dem internal PID $31 and PID $21 calculation.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Input Vehicle Speed&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemOBDCentralizedPID31Handling&quot;&gt;DemOBDCentralizedPID31Handling&lt;/a&gt;/&lt;a href=&quot;path:../DemOBDCentralizedPID21Handling&quot;&gt;DemOBDCentralizedPID21Handling&lt;/a&gt;:
                              must be set to &lt;code&gt;false&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DemExternalCSDataElementClass&lt;/code&gt; and &lt;code&gt;DemDataElementInterfaceWithEventParameter&lt;/code&gt;:
                              &lt;code&gt;DemExternalCSDataElementClass&lt;/code&gt; container must be configured and &lt;code&gt;DemDataElementInterfaceWithEventParameter&lt;/code&gt;
                              must be set to &lt;code&gt;false&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Input Vehicle Speed"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="7dc8bb36-27e0-4d3d-9a46-1678e38108a7"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling))                            or (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling))"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="node:refvalid(.)" false="Invalid reference."/>
                      <a:tst 
                             expr="(node:value(node:ref(.)) = DemExternalCSDataElementClass) and                            (node:existsAndTrue(node:ref(.)/DemDataElementInterfaceWithEventParameter))" 
                             true="External Data Elements with DemDataElementInterfaceWithEventParameter enabled cannot be used for DemOBDInputVehicleSpeed."/>
                      <a:tst 
                             expr="(node:ref(.)/DemDataElementCaptureTrigger) = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;" 
                             true="DemOBDInputVehicleSpeed must not reference a data element with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                    </a:da>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:ref name="DemOBDTimeSinceEngineStart" 
                         type="CHOICE-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Input variable for the Time Since Engine Start information, which is assigned to a
                          specific data element used as interface for the Dem-internal PID calculations.&lt;/p&gt;
                          &lt;p&gt;This parameter is required for Dem internal PID $31 and PID $21 calculation.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemOBDCentralizedPID31Handling&quot;&gt;DemOBDCentralizedPID31Handling&lt;/a&gt;/&lt;a href=&quot;path:../DemOBDCentralizedPID21Handling&quot;&gt;DemOBDCentralizedPID21Handling&lt;/a&gt;:&lt;br/&gt;
                              &lt;code&gt;DemOBDCentralizedPID31Handling&lt;/code&gt; must be set to &lt;code&gt;false&lt;/code&gt; to enable the Dem internal PID $31 calculation&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemOBDCentralizedPID21Handling&lt;/code&gt; must be set to &lt;code&gt;false&lt;/code&gt; to enable the Dem internal PID $21 calculation.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DemExternalCSDataElementClass&lt;/code&gt; and &lt;code&gt;DemDataElementInterfaceWithEventParameter&lt;/code&gt;:
                              &lt;code&gt;DemExternalCSDataElementClass&lt;/code&gt; container must be configured and &lt;code&gt;DemDataElementInterfaceWithEventParameter&lt;/code&gt;
                              must be set to &lt;code&gt;false&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note: This parameter was introduced with AUTOSAR R4.2.1.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Time Since Engine Start"/>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="ECUC:2edc7ce5-2f3c-4ce3-a381-1feb57738843"/>
                    <a:da name="EDITABLE" type="XPath" 
                          expr="(node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling)) or                               (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling)) "/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="node:refvalid(.)" false="Invalid reference."/>
                      <a:tst 
                             expr="(node:value(node:ref(.)) = DemExternalCSDataElementClass) and                         (node:existsAndTrue(node:ref(.)/DemDataElementInterfaceWithEventParameter))" 
                             true="External Data Elements with DemDataElementInterfaceWithEventParameter enabled cannot be used for DemOBDTimeSinceEngineStart."/>
                      <a:tst 
                             expr="( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID21Handling = &apos;false&apos;) or                                      (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGeneralOBD/DemOBDCentralizedPID31Handling = &apos;false&apos;) ) and                                    (node:ref(.)/DemDataElementCaptureTrigger) = &apos;DEM_TRIGGER_ON_DEQUALIFICATION&apos;" 
                             true="DemOBDTimeSinceEngineStart must not reference a data element with DemDataElementCaptureTrigger DEM_TRIGGER_ON_DEQUALIFICATION."/>
                    </a:da>
                    <a:da name="REF">
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass</a:v>
                      <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemDataElementClass/DemExternalSRDataElementClass</a:v>
                    </a:da>
                  </v:ref>
                  <v:var name="DemOBDEngineType" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Switch to provide either Gasoline or Diesel parameters.&lt;/p&gt;
                          &lt;p&gt;Range&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DEM_IGNITION_COMPRESSION&lt;/code&gt;: Diesel engine type.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_IGNITION_SPARK&lt;/code&gt;: Gasoline engine type.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;OBD Engine Type&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                             &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="OBD Engine Type"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="f25a0cc6-2eb6-4b2d-9088-1ecb18c43e28"/>
                    <a:da name="DEFAULT" value="DEM_IGNITION_COMPRESSION"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                    <a:da name="RANGE">
                      <a:v>DEM_IGNITION_COMPRESSION</a:v>
                      <a:v>DEM_IGNITION_SPARK</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemGeneralJ1939" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container contains the general J1939-specific configuration
                        (parameters) of the Dem module.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="J1939"/>
                  <a:a name="UUID" value="19be519d-0e42-4266-a9f5-959926a9e6a9"/>
                  <a:da name="TITLE" value="General J1939"/>
                  <v:var name="DemJ1939ReadingDtcSupport" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether J1939 DTC readout
                          is supported or not.&lt;/p&gt;
                          &lt;p&gt;This switches on and off the APIs Dem_J1939DcmSetDTCFilter,
                          Dem_J1939DcmGetNumberOfFilteredDTC and
                          Dem_J1939DcmGetNextFilteredDTC.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;J1939 Reading DTC Support&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Reading DTC Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="7b5fce4c-3a5a-4e5e-acc8-2ebcc9ef302b"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))"/>
                  </v:var>
                  <v:var name="DemJ1939RatioSupport" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether J1939 ratio
                          is supported or not.&lt;/p&gt;
                          &lt;p&gt;This switches on and off the APIs Dem_J1939DcmSetRatioFilter and
                          Dem_J1939DcmGetNextFilteredRatio.&lt;/p&gt;
                          &lt;p&gt;Note: This configuration parameter is enabled only if OBD support is enabled.&lt;/p&gt;
                          &lt;p&gt;Note: The functionality related to this parameter
                            is not supported by the current implementation. The corresponding APIs are
                            implemented as stubs only.&lt;/p&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;J1939 Ratio Support&lt;/em&gt;,&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                              &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Ratio Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9ab5ee91-b9b7-4164-be25-7082d5054969"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)))"/>
                  </v:var>
                  <v:var name="DemJ1939Readiness1Support" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether J1939 diagnostic readiness 1
                          is supported or not.&lt;/p&gt;
                          &lt;p&gt;This switches on and off the API
                          Dem_J1939DcmReadDiagnosticReadiness1.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;J1939 Readiness 1 Support&lt;/em&gt;,
                            &lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt; must be set to &lt;code&gt;true.&lt;/code&gt;&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Readiness 1 Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="a78acee4-f83b-4709-ad35-aa87e151963f"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))"/>
                  </v:var>
                  <v:var name="DemJ1939Readiness2Support" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether J1939 diagnostic readiness 2
                          is supported or not.&lt;/p&gt;
                          &lt;p&gt;This switches on and off the API Dem_J1939DcmReadDiagnosticReadiness2.&lt;/p&gt;
                          &lt;p&gt;Note: This API is implemented only as stub.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;J1939 Readiness 2 Support&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Readiness 2 Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="62d00f23-43e6-4de7-ada0-7dceda305e2a"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)))"/>
                  </v:var>
                  <v:var name="DemJ1939Readiness3Support" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether J1939 diagnostic readiness 3
                          is supported or not.&lt;/p&gt;
                          &lt;p&gt;This switches on and off the API Dem_J1939DcmReadDiagnosticReadiness3.&lt;/p&gt;
                          &lt;p&gt;Note: This API is implemented only as stub.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;J1939 Readiness 3 Support&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Readiness 3 Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="58ac9fd5-f66b-4ae4-8cac-35a5b58ab1da"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)))"/>
                  </v:var>
                  <v:var name="DemJ1939ClearDTCSupport" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This configuration switch defines whether J1939 Clear DTC
                          is supported or not.&lt;/p&gt;
                          &lt;p&gt;This switches on and off the APIs Dem_J1939DcmClearDTC&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;J1939 Clear DTC Support&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Clear DTC Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="c4a9529a-cebd-4153-9397-1232d43a4c24"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))"/>
                  </v:var>
                  <v:var name="DemJ1939FreezeFrameSupport" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;This configuration switch defines whether J1939 freeze frames are supported or not.&lt;/p&gt;
                              &lt;p&gt;This switches on and off the following APIs:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmSetFreezeFrameFilter&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmGetNextFreezeFrame&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;1939 Freeze Frame Support&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Freeze Frame Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="94a78b3e-0cab-4cbb-80b5-c7ac9b152f8c"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support)) and                                    ((node:existsAndTrue(.))) and                                    (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939FreezeFrameClass/eb-list::*) = 0)" 
                          true="Suboptimal configuration: DemJ1939FreezeFrameSupport is ON but no J1939 freeze frame defined."/>
                  </v:var>
                  <v:var name="DemJ1939Dm31Support" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;This configuration switch defines whether J1939 DM31 is supported or not.&lt;/p&gt;
                              &lt;p&gt;This switches on and off the APIs&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmFirstDTCwithLampStatus&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmGetNextDTCwithLampStatus&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;J1939 Dm31 Support&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="J1939 Dm31 Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="261f626c-d74e-4e64-a7b7-41c8823417b4"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))"/>
                  </v:var>
                  <v:var name="DemJ1939ExpandedFreezeFrameSupport" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;This configuration switch defines whether J1939 expanded freeze frames are supported or not.&lt;/p&gt;
                              &lt;p&gt;This switches on and off the APIs&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmSetFreezeFrameFilter&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmGetNextFreezeFrame&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;Dem_J1939DcmGetNextSPNInFreezeFrame&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;J1939 Expanded Freeze Frame Support&lt;/em&gt;,&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../../DemJ1939Support&quot;&gt;DemJ1939Support&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="J1939 Expanded Freeze Frame Support"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="aabca5d7-ce61-4dc7-805a-16f9378f33e2"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemJ1939Support))"/>
                  </v:var>
                </v:ctr>
                <v:var name="DemOBDForceMisfireMonitoringReady" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;When this parameter is set to true, continuously monitored readiness
                        group Misfire is forced to complete for OBD PID $01, PID $41,
                        OBDonUDS PID $F501 and J1939 Readiness1.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Force ReadinessGroup Misfire Monitoring&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Force ReadinessGroup Misfire Monitoring"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                </v:var>
                <v:var name="DemOBDForceFuelSysMonitoringReady" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;When this parameter is set to true, continuously monitored readiness
                        group Fuel System is forced to complete for OBD PID $01, PID $41,
                        OBDonUDS PID $F501 and J1939 Readiness1.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Force ReadinessGroup Fuel System Monitoring&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Force ReadinessGroup Fuel System Monitoring"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                </v:var>
                <v:var name="DemOBDForceCCMonitoringReady" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;When this parameter is set to true, continuously monitored readiness
                        group Comprehensive component is forced to complete for OBD PID $01, PID $41,
                        OBDonUDS PID $F501 and J1939 Readiness1.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Force ReadinessGroup Comprehensive component Monitoring&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Force ReadinessGroup Comprehensive component Monitoring"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="OBD"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                </v:var>
                <v:lst name="DemGroupOfDTC" type="MAP">
                  <a:a name="COLUMNS" value="DemGroupDTCs"/>
                  <a:a name="LABEL" value="Group Of DTC List"/>
                  <a:da name="MAX" value="30"/>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="count(eb-list::*[as:name(.) = &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;]) = 0" 
                           true="No group of DTC with name &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;."/>
                    <a:tst 
                           expr="count(eb-list::*[as:name(.) = &apos;DEM_DTC_GROUP_POWERTRAIN_DTCS&apos;]) = 0" 
                           true="No group of DTC with name &apos;DEM_DTC_GROUP_POWERTRAIN_DTCS&apos;."/>
                    <a:tst 
                           expr="count(eb-list::*[as:name(.) = &apos;DEM_DTC_GROUP_CHASSIS_DTCS&apos;]) = 0" 
                           true="No group of DTC with name &apos;DEM_DTC_GROUP_CHASSIS_DTCS&apos;."/>
                    <a:tst 
                           expr="count(eb-list::*[as:name(.) = &apos;DEM_DTC_GROUP_BODY_DTCS&apos;]) = 0" 
                           true="No group of DTC with name &apos;DEM_DTC_GROUP_BODY_DTCS&apos;."/>
                    <a:tst 
                           expr="count(eb-list::*[as:name(.) = &apos;DEM_DTC_GROUP_NETWORK_COM_DTCS&apos;]) = 0" 
                           true="No group of DTC with name &apos;DEM_DTC_GROUP_NETWORK_COM_DTCS&apos;."/>
                  </a:da>
                  <v:ctr name="DemGroupOfDTC" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration
                          (parameters) for DTC groups.&lt;/p&gt;

                          &lt;p&gt;At least the following
                          DTC groups should exist:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DEM_DTC_GROUP_EMISSION_REL_DTCS&lt;/code&gt;:
                                with Group DTC Value = 0&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_DTC_GROUP_POWERTRAIN_DTCS&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_DTC_GROUP_CHASSIS_DTCS&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_DTC_GROUP_BODY_DTCS&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DEM_DTC_GROUP_NETWORK_COM_DTCS&lt;/code&gt;&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Events which are not assigned to any DTC group
                             will be deleted, if DEM_DTC_GROUP_ALL_DTCS is
                             requested.&lt;/p&gt;

                          &lt;em&gt;Remark:&lt;/em&gt; &lt;code&gt;DEM_DTC_GROUP_ALL_DTCS&lt;/code&gt;
                          must not be configured.

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DemOBDSupport&lt;/code&gt;: &lt;code&gt;DEM_DTC_GROUP_EMISSION_REL_DTCS&lt;/code&gt; DTC group must be configured,
                              if &lt;code&gt;DemOBDSupport&lt;/code&gt; is enabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_DTC_GROUP_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="050d6f74-11c0-44b9-97ac-5bcee6a9fc92"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="text:match(as:name(.), &apos;^DEM_DTC_GROUP_[A-Z0-9_]+$&apos;)" 
                             false="Invalid name. (must be upper-case and prefixed with &apos;DEM_DTC_GROUP_&apos;)"/>
                      <a:tst 
                             expr="(DemGroupDTCs = 0) and (as:name(.) != &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;)" 
                             true="The group of DTC name must be &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;, if the value is zero (0)."/>
                      <a:tst expr="as:name(.) = &apos;DEM_DTC_GROUP_ALL_DTCS&apos;" 
                             true="The group of DTC name &apos;DEM_DTC_GROUP_ALL_DTCS&apos; must not be configured."/>
                      <a:tst 
                             expr="(node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport)) and (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGroupOfDTC/eb-list::*[as:name(.) = &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;]) = 0)" 
                             true="If DemOBDSupport is enabled, the &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos; DTC group must be configured."/>
                    </a:da>
                    <a:da name="TITLE" value="Group Of DTC"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="(count(../../../DemConfigSet/eb-list::*/DemDTCClass/eb-list::*[DemUdsDTC &gt; node:current()/DemGroupDTCs]) = 0) or                                    ( (count(../eb-list::*[DemGroupDTCs &gt; node:current()/DemGroupDTCs]) &gt; 0) and                                      ( ( (count(../../../DemConfigSet/eb-list::*/DemDTCClass/eb-list::*[DemUdsDTC &gt; node:current()/DemGroupDTCs])) -                                          (count(../../../DemConfigSet/eb-list::*/DemDTCClass/eb-list::*[DemUdsDTC &gt; num:integer(util:distinct(node:order(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemGroupOfDTC/eb-list::*[DemGroupDTCs &gt; node:current()/DemGroupDTCs], &apos;./DemGroupDTCs&apos;))[position() = 1]/DemGroupDTCs)]))                                        ) = 0                                      )                                    )" 
                          true="There are no DTCs assigned to this DTC group."/>
                    <v:var name="DemGroupDTCs" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="Group DTC"/>
                      <a:a name="DEFAULT_RADIX" value="HEX"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;DTC value of the selected group of DTC.&lt;/p&gt;

                            &lt;p&gt;(Range 3 byte, &lt;code&gt;0x000000&lt;/code&gt; is only available for the
                            emission-related DTC group, &lt;code&gt;0xFFFFFF&lt;/code&gt; is reserved for
                            &apos;all DTCs&apos;, according to ISO14229-1 Annex D.1,)&lt;/p&gt;

                            &lt;p&gt;The DTC group &apos;all DTCs&apos; is always available and will
                            not be configured.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Group DTC Value"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="4d51c04d-ab5e-4836-88dd-bea3f3bb263a"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..) * 2)"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=16777214"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst 
                                  false="The group of DTC values must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemGroupDTCs, .)"/>
                          <mt:tst 
                                  true="The group of DTC values must not be equal to DTC values." 
                                  expr="count(../../../../DemConfigSet/eb-list::*/DemDTCClass/eb-list::*[DemUdsDTC = node:current()]) &gt; 0"/>
                          <mt:tst 
                                  true="The group of DTC value must be zero (0), if the name is &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;." 
                                  expr="(as:name(..) = &apos;DEM_DTC_GROUP_EMISSION_REL_DTCS&apos;) and (. != 0)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemIndicator" type="MAP">
                  <a:a name="COLUMNS" value="DemIndicatorID"/>
                  <a:a name="LABEL" value="Indicator List"/>
                  <a:da name="MAX" value="255"/>
                  <v:ctr name="DemIndicator" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration (parameters) for
                          Indicators.&lt;/p&gt;

                          &lt;p&gt;Note that this container definition does not explicitly define a
                          symbolic name parameter. Instead, the short name of the container will
                          be used in the Ecu Configuration Description to specify the symbolic
                          name of the INDICATOR_NAME.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_INDICATOR_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="924cefbf-4f3c-4a2b-a029-e9eea56670b0"/>
                    <a:da name="TITLE" value="Indicator"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*[                                                                    node:refexists(DemIndicatorRef) and                                                                    as:name(as:ref(DemIndicatorRef)) = as:name(node:current())]                                         ) = 0" 
                          true="Suboptimal configuration: This warning indicator is not used by any event."/>
                    <v:var name="DemIndicatorID" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="Indicator ID"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Unique identifier of an indicator.&lt;/p&gt;

                            &lt;p&gt;The indicator Ids shall be sequentially ordered beginning with 0
                            and no gaps in between.&lt;/p&gt;

                            &lt;p&gt;The Handle-Id Wizard can be used to set this value automatically.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Indicator Id"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="e9f556aa-4108-42f4-881f-b066c3f8d6d2"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..))"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=254"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst false="The Indicator ID must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemIndicatorID, .)"/>
                          <mt:tst 
                                  false="Indicator IDs must be zero-based and consecutive. The Id value preceding this one is missing." 
                                  expr="(. = 0) or                                 (count(../../eb-list::*[DemIndicatorID = (node:current() - 1)]) &gt; 0)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemNvRamBlockId" type="MAP">
                  <a:a name="COLUMNS" value="DemNvramBlockIdRef"/>
                  <a:a name="LABEL" value="NVRAM Block List"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) = 0) and                                  (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) and                                  (../DemClearDTCBehavior = &apos;DEM_CLRRESP_VOLATILE&apos;) and                                  not(node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent) and                                    (num:integer(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent) != 0) ) and                                  (count(eb-list::*) &gt; 1)" 
                           true="If permanent memory is disabled and immediate storage is unused and DemClearDTCBehavior is set to DEM_CLRRESP_VOLATILE: Only DEM_NVM_BLOCK_ID_DEFAULT (or none) NvM block reference must be used."/>
                    <a:tst 
                           expr="(count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) = 0) and                                  (node:existsAndFalse(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) and                                  (../DemClearDTCBehavior = &apos;DEM_CLRRESP_VOLATILE&apos;) and                                  (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent) and                                    (num:integer(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent) != 0) ) and                                  (count(eb-list::*) != 2)" 
                           true="If permanent memory is enabled (DemMaxNumberEventEntryPermanent != 0) and immediate storage is unused and DemClearDTCBehavior is set to DEM_CLRRESP_VOLATILE: Only DEM_NVM_BLOCK_ID_DEFAULT and DEM_NVM_BLOCK_ID_PERMANENT NvM block references must be used."/>
                    <a:tst 
                           expr="( (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) or                                    (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) ) and                                  (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_DEFAULT shall be configured if DemImmediateNvStorage is enabled for any event or DemImmediateStorageInternalEvents is enabled."/>
                    <a:tst 
                           expr="( (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) or                                    (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) ) and                                  (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_PRIMARY shall be configured if DemImmediateNvStorage is enabled for any event or DemImmediateStorageInternalEvents is enabled."/>
                    <a:tst 
                           expr="( (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) or                                    (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) ) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) &gt; 0) and                                  (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_SECONDARY shall be configured if DemImmediateNvStorage is enabled for any event or DemImmediateStorageInternalEvents is enabled and there is at least one event with secondary origin."/>
                    <a:tst 
                           expr="( (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) or                                    (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) ) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) &gt; 0) and                                  (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_MIRROR shall be configured if DemImmediateNvStorage is enabled for any event or DemImmediateStorageInternalEvents is enabled and there is at least one event with mirror origin."/>
                    <a:tst 
                           expr="(count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;]) != 1) and (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent)) and                                  (num:integer(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemMaxNumberEventEntryPermanent) != 0)" 
                           true="DEM_NVM_BLOCK_ID_PERMANENT shall be configured if size of permanent memory is different than 0"/>
                    <a:tst 
                           expr="(../DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_DEFAULT shall be configured if DemClearDTCBehavior is set to DEM_CLRRESP_NONVOLATILE."/>
                    <a:tst 
                           expr="(../DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_PRIMARY shall be configured if DemClearDTCBehavior is set to DEM_CLRRESP_NONVOLATILE."/>
                    <a:tst 
                           expr="(../DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) &gt; 0) and                                  (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_SECONDARY shall be configured if DemClearDTCBehavior is set to DEM_CLRRESP_NONVOLATILE and there is at least one event with secondary origin."/>
                    <a:tst 
                           expr="(../DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                  (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) &gt; 0) and                                  (count(./eb-list::*[as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;]) != 1)" 
                           true="DEM_NVM_BLOCK_ID_MIRROR shall be configured if DemClearDTCBehavior is set to DEM_CLRRESP_NONVOLATILE and there is at least one event with mirror origin."/>
                  </a:da>
                  <a:da name="MIN" value="0"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(count(as:modconf(&apos;NvM&apos;)) &gt; 0) or (count(eb-list::*) = 0)" 
                        false="Verification of singleBlockCallback, required block types, dataset numbers and explicit synchronization mechanism configuration can not be performed for DemNvRamBlockId as NvM module is not available."/>
                  <v:ctr name="DemNvRamBlockId" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;b&gt;NvM Block Configuration&lt;/b&gt;
                          &lt;p&gt;This container contains the configuration (parameters) for a
                            non-volatile memory block reference, which is used from the Dem. If the permanent
                            storage of event memory entries is required, at least the DEM_NVM_BLOCK_ID_DEFAULT reference
                            (refer for details below) needs to be configured.
                            Otherwise no NvM block and block reference need to be configured, so the data are stored only volatile.
                            The Nv data will be stored in SEC_VAR_SAVED_ZONE, see R4.0.3 MemMap SWS: [MEMMAP022]&lt;/p&gt;

                          &lt;p&gt;Permanent storage is required in any of the following Dem configurations:
                            &lt;ul&gt;
                              &lt;li&gt;DemImmediateNvStorage is enabled for at least one event&lt;br/&gt;
                                  In this case &lt;a href=&quot;path:../../DemCallbackMemStackMainFuncTrigger&quot;&gt;DemCallbackMemStackMainFuncTrigger&lt;/a&gt;
                                  must be configured to call the memory stack main functions.
                              &lt;/li&gt;
                              &lt;li&gt;&lt;a href=&quot;path:../../DemClearDTCBehavior&quot;&gt;Clear DTC Behavior&lt;/a&gt; is set to one of the NONVOLATILE options&lt;br/&gt;
                                  Also in this case &lt;a href=&quot;path:../../DemCallbackMemStackMainFuncTrigger&quot;&gt;DemCallbackMemStackMainFuncTrigger&lt;/a&gt; must be configured.
                              &lt;/li&gt;
                              &lt;li&gt;Permanent memory entries are configured &lt;a href=&quot;path:../../DemMaxNumberEventEntryPermanent&quot;&gt;DemMaxNumberEventEntryPermanent&lt;/a&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            The number of blocks that are necessary depends on the
                            implementation and configuration (e.g. number of used event memories)
                            of the Dem module.
                          &lt;/p&gt;

                          &lt;b&gt;Service needs calculator&lt;/b&gt;
                          &lt;p&gt;The required NvM block references (DemNvRamBlockId&apos;s) need to be configured by the user (first).&lt;/p&gt;
                          All required NvM blocks will be configured and referenced with DemNvRamBlockIdRef automatically,
                          as per the current configuration of Dem.
                          The user does not need to create the NvM blocks for Dem, nor configure these parameters of those
                          created blocks again:
                          &lt;ul&gt;
                            &lt;li&gt;NvMBlockManagementType&lt;/li&gt;
                            &lt;li&gt;NvMBlockCrcType&lt;/li&gt;
                            &lt;li&gt;NvMBlockUseCrc&lt;/li&gt;
                            &lt;li&gt;NvMRamBlockDataAddress&lt;/li&gt;
                            &lt;li&gt;NvMBlockWriteProt&lt;/li&gt;
                            &lt;li&gt;NvMResistantToChangedSw&lt;/li&gt;
                            &lt;li&gt;NvMSelectBlockForReadAll&lt;/li&gt;
                            &lt;li&gt;NvMSelectBlockForWriteAll&lt;/li&gt;
                            &lt;li&gt;NvMWriteBlockOnce&lt;/li&gt;
                            &lt;li&gt;NvMBlockJobPriority&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;b&gt;NvM Block Configurations&lt;/b&gt;
                          &lt;p&gt;For all NvM blocks, a block CRC is recommended.&lt;/p&gt;
                          &lt;p&gt;For all NvM blocks, the block length (depending on the Dem configuration) can be gathered from the map-file based on the RAM block variable.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DEM_NVM_BLOCK_ID_DEFAULT reference:&lt;br/&gt;
                              One native/redundant NvM block is required,
                                with &lt;code&gt;NvM_ReadAll()&lt;/code&gt; and &lt;code&gt;NvM_WriteAll()&lt;/code&gt; enabled.&lt;br/&gt;
                              The RAM block data address shall be &lt;code&gt;&amp;Dem_NvData&lt;/code&gt;.&lt;br/&gt;
                              In case &lt;a href=&quot;path:../../DemClearDTCBehavior&quot;&gt;DemClearDTCBehavior&lt;/a&gt; is set to one of the NONVOLATILE options,
                                the NvM option NvMBlockUseSyncMechanism has to be enabled and the callbacks&lt;br/&gt;
                              NvMReadRamBlockFromNvCallback, NvMWriteRamBlockToNvCallback and NvMSingleBlockCallback have to be configured.&lt;br/&gt;
                              NvMReadRamBlockFromNvCallback shall be &lt;code&gt;Dem_NvMReadCopyEventStatusBlock&lt;/code&gt;.&lt;br/&gt;
                              NvMWriteRamBlockToNvCallback shall be &lt;code&gt;Dem_NvMWriteCopyEventStatusBlock&lt;/code&gt;.
                              The NvM single block callback shall be &lt;code&gt;Dem_NvMEventStatusBlockCallback&lt;/code&gt; configured manually.
                              The parameter NvMBlockUseSetRamBlockStatus should be enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DEM_NVM_BLOCK_ID_PRIMARY reference:&lt;br/&gt;
                              One dataset NvM block shall be configured,
                                with &lt;code&gt;NvM_ReadAll()&lt;/code&gt; and &lt;code&gt;NvM_WriteAll()&lt;/code&gt; disabled.&lt;br/&gt;
                              The RAM block data address shall be &lt;code&gt;&amp;Dem_NvGateEntryPrimaryData&lt;/code&gt;.&lt;br/&gt;
                              The NvM single block callback shall be &lt;code&gt;Dem_NvMGateEntryPrimaryBlockCallback&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DEM_NVM_BLOCK_ID_SECONDARY reference:&lt;br/&gt;
                              One dataset NvM block shall be configured if there is at least one event with origin DEM_DTC_ORIGIN_SECONDARY_MEMORY,
                                with &lt;code&gt;NvM_ReadAll()&lt;/code&gt; and &lt;code&gt;NvM_WriteAll()&lt;/code&gt; disabled.&lt;br/&gt;
                              The RAM block data address shall be &lt;code&gt;&amp;Dem_NvGateEntrySecondaryData&lt;/code&gt;.&lt;br/&gt;
                              The NvM single block callback shall be &lt;code&gt;Dem_NvMGateEntrySecondaryBlockCallback&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DEM_NVM_BLOCK_ID_MIRROR reference:&lt;br/&gt;
                              One dataset NvM block shall be configured if there is at least one event with origin DEM_DTC_ORIGIN_MIRROR_MEMORY,
                                with &lt;code&gt;NvM_ReadAll()&lt;/code&gt; and &lt;code&gt;NvM_WriteAll()&lt;/code&gt; disabled.&lt;br/&gt;
                              The RAM block data address shall be &lt;code&gt;&amp;Dem_NvGateEntryMirrorData&lt;/code&gt;.&lt;br/&gt;
                              The NvM single block callback shall be &lt;code&gt;Dem_NvMGateEntryMirrorBlockCallback&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DEM_NVM_BLOCK_ID_PERMANENT reference:&lt;br/&gt;
                              One native/redundant NvM block shall be configured if the permanent memory for OBD is used (&lt;a href=&quot;path:../../DemMaxNumberEventEntryPermanent&quot;&gt;DemMaxNumberEventEntryPermanent&lt;/a&gt; &gt; 0),
                                with &lt;code&gt;NvM_ReadAll()&lt;/code&gt; enabled and &lt;code&gt;NvM_WriteAll()&lt;/code&gt; disabled.&lt;br/&gt;
                              The explicit synchronization mechanism shall be enabled for this NvM block.&lt;br/&gt;
                              The RAM block data address is not used.&lt;br/&gt;
                              The NvM block size shall be (&lt;a href=&quot;path:../../DemMaxNumberEventEntryPermanent&quot;&gt;DemMaxNumberEventEntryPermanent&lt;/a&gt; * 2) bytes.&lt;br/&gt;
                              The NvM single block callback shall be &lt;code&gt;Dem_NvMWriteFinishedPermanentMemory&lt;/code&gt;.&lt;br/&gt;
                              NvMReadRamBlockFromNvCallback shall be &lt;code&gt;Dem_NvMReadCopyPermanentMemory&lt;/code&gt;.&lt;br/&gt;
                              NvMWriteRamBlockToNvCallback shall be &lt;code&gt;Dem_NvMWriteCopyPermanentMemory&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;For more information on the NvM configuration, see the &lt;em&gt;AutoCore Generic Memory Stack documentation&lt;/em&gt;
                            and consider the Dem integration issues in the &lt;em&gt;AutoCore Generic Diagnostic Stack documentation&lt;/em&gt;.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_NVM_BLOCK_ID_?"/>
                    <a:a name="UUID" 
                         value="e7223894-329d-4dd7-b20b-75d7b3902c2c"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="(as:name(.) != &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos; and                                     as:name(.) != &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos; and                                     as:name(.) != &apos;DEM_NVM_BLOCK_ID_MIRROR&apos; and                                     as:name(.) != &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos; and                                     as:name(.) != &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;)" 
                             true="The Name of DemNvRamBlockId can be DEM_NVM_BLOCK_ID_DEFAULT, DEM_NVM_BLOCK_ID_PRIMARY, DEM_NVM_BLOCK_ID_MIRROR, DEM_NVM_BLOCK_ID_PERMANENT or DEM_NVM_BLOCK_ID_SECONDARY only."/>
                      <a:tst 
                             expr="node:refexists(DemNvRamBlockIdRef) and node:exists(as:ref(DemNvRamBlockIdRef)/NvMRomBlockDataAddress)" 
                             true="The ROM block data address shall not be configured for the referenced block. The block-initialization is handled by the Dem itself."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior = &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress)) or                                      ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress) and                                        (as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress != &apos;&amp;Dem_NvData&apos;) ) )" 
                             true="The RAM block data address shall be &apos;&amp;Dem_NvData&apos; for block DEM_NVM_BLOCK_ID_DEFAULT."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForReadAll)) or                                      ( node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForReadAll) and                                        (node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForReadAll)) ) )" 
                             true="The block DEM_NVM_BLOCK_ID_DEFAULT shall be selected for NvM_ReadAll(). (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForWriteAll)) or                                      ( node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForWriteAll) and                                        (node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForWriteAll)) ) )" 
                             true="The block DEM_NVM_BLOCK_ID_DEFAULT shall be selected for NvM_WriteAll(). (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior = &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (node:existsAndTrue(as:ref(DemNvRamBlockIdRef)/NvMBlockUseSyncMechanism))" 
                             true="Explicit synchronization mechanism shall be disabled for block DEM_NVM_BLOCK_ID_DEFAULT."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMBlockUseSyncMechanism))" 
                             true="Explicit synchronization mechanism shall be enabled for block DEM_NVM_BLOCK_ID_DEFAULT."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:exists(as:ref(DemNvRamBlockIdRef)/NvMReadRamBlockFromNvCallback) and                                    (node:value(as:ref(DemNvRamBlockIdRef)/NvMReadRamBlockFromNvCallback) != &apos;Dem_NvMReadCopyEventStatusBlock&apos;)" 
                             true="The parameter &apos;NvMReadRamBlockFromNvCallback&apos;, used for explicit synchronization mechanism, shall be set to &apos;Dem_NvMReadCopyEventStatusBlock&apos;."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:exists(as:ref(DemNvRamBlockIdRef)/NvMWriteRamBlockToNvCallback) and                                    (node:value(as:ref(DemNvRamBlockIdRef)/NvMWriteRamBlockToNvCallback) != &apos;Dem_NvMWriteCopyEventStatusBlock&apos;)" 
                             true="The parameter &apos;NvMWriteRamBlockToNvCallback&apos;, used for explicit synchronization mechanism, shall be set to &apos;Dem_NvMWriteCopyEventStatusBlock&apos;."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback)) or                                      ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback) and                                        (as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback != &apos;Dem_NvMEventStatusBlockCallback&apos;) ) )" 
                             true="In case of DemClearDTCBehavior is set to &apos;DEM_CLRRESP_NONVOLATILE_TRIGGER&apos; or &apos;DEM_CLRRESP_NONVOLATILE_FINISH&apos;, SingleBlockCallback with value &apos;Dem_NvMEventStatusBlockCallback&apos; shall be configured for the referenced block of DEM_NVM_BLOCK_ID_DEFAULT."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior = &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback)" 
                             true="In case of DemClearDTCBehavior is set to &apos;DEM_CLRRESP_VOLATILE&apos; SingleBlockCallback shall not be configured for the referenced block of DEM_NVM_BLOCK_ID_DEFAULT."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    (node:refexists(DemNvRamBlockIdRef)) and                                    (node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMBlockUseSetRamBlockStatus))" 
                             true="The parameter NvMBlockUseSetRamBlockStatus should be enabled for the Dem default block."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForReadAll)) or                                    node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForReadAll))" 
                             true="The block DEM_NVM_BLOCK_ID_PERMANENT shall be selected for NvM_ReadAll(). (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForWriteAll)) or                                    node:existsAndTrue(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForWriteAll) )" 
                             true="The block DEM_NVM_BLOCK_ID_PERMANENT shall not be selected for NvM_WriteAll(). (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (node:existsAndFalse(as:ref(DemNvRamBlockIdRef)/NvMBlockUseSyncMechanism))" 
                             true="Explicit synchronization mechanism shall be enabled for block DEM_NVM_BLOCK_ID_PERMANENT."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:exists(as:ref(DemNvRamBlockIdRef)/NvMReadRamBlockFromNvCallback) and                                    (node:value(as:ref(DemNvRamBlockIdRef)/NvMReadRamBlockFromNvCallback) != &apos;Dem_NvMReadCopyPermanentMemory&apos;)" 
                             true="The parameter &apos;NvMReadRamBlockFromNvCallback&apos;, used for explicit synchronization mechanism, shall be set to &apos;Dem_NvMReadCopyPermanentMemory&apos;."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:exists(as:ref(DemNvRamBlockIdRef)/NvMWriteRamBlockToNvCallback) and                                    (node:value(as:ref(DemNvRamBlockIdRef)/NvMWriteRamBlockToNvCallback) != &apos;Dem_NvMWriteCopyPermanentMemory&apos;)" 
                             true="The parameter &apos;NvMWriteRamBlockToNvCallback&apos;, used for explicit synchronization mechanism, shall be set to &apos;Dem_NvMWriteCopyPermanentMemory&apos;."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback)) or                                      ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback) and                                        (as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback != &apos;Dem_NvMWriteFinishedPermanentMemory&apos;) ) )" 
                             true="SingleBlockCallback with value &apos;Dem_NvMWriteFinishedPermanentMemory&apos; shall be configured for the referenced block of DEM_NVM_BLOCK_ID_PERMANENT. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="( (as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) ) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (as:ref(DemNvRamBlockIdRef)/NvMBlockManagementType != &apos;NVM_BLOCK_DATASET&apos;)" 
                             true="Only dataset NvM block type shall be configured for the referenced block. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="( (as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) ) and                                    (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:existsAndTrue(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForReadAll)" 
                             true="The referenced block shall not be selected for NvM_ReadAll(). (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="( (as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) ) and                                    (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) and                                    node:refexists(DemNvRamBlockIdRef) and                                    node:existsAndTrue(as:ref(DemNvRamBlockIdRef)/NvMSelectBlockForWriteAll)" 
                             true="The referenced block shall not be selected for NvM_WriteAll(). (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="( (as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) or (as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) ) and                                    (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (node:existsAndTrue(as:ref(DemNvRamBlockIdRef)/NvMBlockUseSyncMechanism))" 
                             true="Explicit synchronization mechanism shall be disabled for this block."/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress)) or                                      ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress) and                                        (as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress != &apos;&amp;Dem_NvGateEntryPrimaryData&apos;) ) )" 
                             true="The RAM block data address shall be &apos;&amp;Dem_NvGateEntryPrimaryData&apos; for the referenced block of DEM_NVM_BLOCK_ID_PRIMARY. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress)) or                                      ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress) and                                        (as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress != &apos;&amp;Dem_NvGateEntrySecondaryData&apos;) ) )" 
                             true="The RAM block data address shall be &apos;&amp;Dem_NvGateEntrySecondaryData&apos; for the referenced block of DEM_NVM_BLOCK_ID_SECONDARY. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    ( not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress)) or                                      ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress) and                                        (as:ref(DemNvRamBlockIdRef)/NvMRamBlockDataAddress != &apos;&amp;Dem_NvGateEntryMirrorData&apos;) ) )" 
                             true="The RAM block data address shall be &apos;&amp;Dem_NvGateEntryMirrorData&apos; for the referenced block of DEM_NVM_BLOCK_ID_MIRROR. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (as:ref(DemNvRamBlockIdRef)/NvMNvBlockNum != (../../DemMaxNumberEventEntryPrimary))" 
                             true="For block DEM_NVM_BLOCK_ID_PRIMARY, dataset number shall be equal to DemMaxNumberEventEntryPrimary. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (as:ref(DemNvRamBlockIdRef)/NvMNvBlockNum != (../../DemMaxNumberEventEntrySecondary))" 
                             true="For block DEM_NVM_BLOCK_ID_SECONDARY, dataset number shall be equal to DemMaxNumberEventEntrySecondary. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (as:ref(DemNvRamBlockIdRef)/NvMNvBlockNum != (../../DemMaxNumberEventEntryMirror))" 
                             true="For block DEM_NVM_BLOCK_ID_MIRROR, dataset number shall be equal to DemMaxNumberEventEntryMirror. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PRIMARY&apos;) and                                    ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) or                                      ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) and (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[not(node:refexists(DemDTCClassRef))]/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;]) &gt; 0)) or                                      (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_PRIMARY_MEMORY&apos;]) &gt; 0)) and                                    (node:refexists(DemNvRamBlockIdRef)) and                                    (not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback)) or                                      (node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback) and (as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback != &apos;Dem_NvMGateEntryPrimaryBlockCallback&apos;)))" 
                             true="SingleBlockCallback with value &apos;Dem_NvMGateEntryPrimaryBlockCallback&apos; shall be configured for the referenced block of DEM_NVM_BLOCK_ID_PRIMARY. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_SECONDARY&apos;) and                                    (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) &gt; 0) and                                    ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) or                                      ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) and (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[not(node:refexists(DemDTCClassRef))]/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) &gt; 0)) or                                      (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_SECONDARY_MEMORY&apos;]) &gt; 0)) and                                    (node:refexists(DemNvRamBlockIdRef)) and                                      (not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback)) or ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback) and                                      (as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback != &apos;Dem_NvMGateEntrySecondaryBlockCallback&apos;)))" 
                             true="SingleBlockCallback with value &apos;Dem_NvMGateEntrySecondaryBlockCallback&apos; shall be configured for the referenced block of DEM_NVM_BLOCK_ID_SECONDARY. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_MIRROR&apos;) and                                    (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) &gt; 0) and                                    ( (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior != &apos;DEM_CLRRESP_VOLATILE&apos;) or                                      ((node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemImmediateStorageInternalEvents)) and (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[not(node:refexists(DemDTCClassRef))]/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) &gt; 0)) or                                      (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:refexists(DemDTCClassRef) and node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]/DemEventClass[DemEventDestination = &apos;DEM_DTC_ORIGIN_MIRROR_MEMORY&apos;]) &gt; 0)) and                                    (node:refexists(DemNvRamBlockIdRef)) and                                      (not(node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback)) or ( node:exists(as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback) and                                      (as:ref(DemNvRamBlockIdRef)/NvMSingleBlockCallback != &apos;Dem_NvMGateEntryMirrorBlockCallback&apos;)))" 
                             true="SingleBlockCallback with value &apos;Dem_NvMGateEntryMirrorBlockCallback&apos; shall be configured for the referenced block of DEM_NVM_BLOCK_ID_MIRROR. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                    </a:da>
                    <a:da name="TITLE" value="NVRAM Block"/>
                    <a:da name="WARNING" type="XPath">
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_DEFAULT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (as:ref(DemNvRamBlockIdRef)/NvMBlockManagementType = &apos;NVM_BLOCK_DATASET&apos;)" 
                             true="Native/redundant NvM block type is recommended for block DEM_NVM_BLOCK_ID_DEFAULT. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      <a:tst 
                             expr="(as:name(.) = &apos;DEM_NVM_BLOCK_ID_PERMANENT&apos;) and                                    node:refexists(DemNvRamBlockIdRef) and                                    (as:ref(DemNvRamBlockIdRef)/NvMBlockManagementType = &apos;NVM_BLOCK_DATASET&apos;)" 
                             true="Native/redundant NvM block type is recommended for block DEM_NVM_BLOCK_ID_PERMANENT. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                    </a:da>
                    <v:ref name="DemNvRamBlockIdRef" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="COLUMN_TITLE" value="NVRAM Block"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;This parameter references to the
                            NvmBlockDescriptor for NVRAM Blocks.&lt;/p&gt;

                            &lt;p&gt;Index of the NvmBlockDescriptor will be
                            used by the DEM module for the identification
                            of the NVM block&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="NVRAM Block Reference"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="9cb61908-1fb1-4660-8236-ccac7e0efbff"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(count(as:modconf(&apos;NvM&apos;)) &gt; 0) and not(node:refvalid(.))" 
                               true="Invalid reference. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                        <a:tst expr="text:uniq(../../eb-list::*/eb-list::*, .)" 
                               false="The NvmBlockDescriptor Reference must be unique. (Run the &apos;Calculate Service Needs&apos; Wizard.)"/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                    </v:ref>
                  </v:ctr>
                </v:lst>
                <v:var name="DemNvDataConfigSignatureUsed" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration parameter enables a module-internal mechanism for the
                          validation of the non-volatile data used by the DEM module.&lt;/p&gt;
                        &lt;p&gt;This mechanism calculates a signature of the current DEM configuration
                          to store it non volatile.&lt;/p&gt;
                        &lt;p&gt;Once the calculated signature differs from the stored one,
                          all non-volatile data used by the DEM are deleted/initialized during
                          &lt;code&gt;Dem_Init()&lt;/code&gt;.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Validation of non-volatile data is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Validation of non-volatile data is disabled&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Note: If this parameter is changed from disabled to enabled,
                          the NvM data is corrupted. This implies a signature mismatch and
                          the Dem performs a reset of the NvM data.&lt;/p&gt;
                        &lt;p&gt;If this parameter is changed from enabled to disabled, then NvM
                          data is corrupted as well. But this could not be identified by the Dem module.
                          The NvM data have to be adjusted manually as described below.&lt;/p&gt;
                        &lt;p&gt;Note: Devices without a shutdown phase shall NOT use this feature.
                          It is not ensured that the actual valid signature is successfully stored in
                          the default NvM block.&lt;/p&gt;
                        &lt;p&gt;Note: Be aware that the content of the permanent memory (OBD-relevant events)
                          is also deleted in case of a signature mismatch.
                          Evaluate the relevant impact to all legislative requirements!&lt;/p&gt;
                        &lt;p&gt;Note: If you revert to a former SW version, the Dem may not be able to correctly
                          discard the NvM data. In that case, manually clear the non-volatile data. For more
                          information see chapter &quot;Reset of Dem NvM data after an incompatible configuration
                          update&quot; in the Diagnostic Stack user&apos;s guide.&lt;/p&gt;
                        &lt;p&gt;Note: If this feature can NOT be used for various reasons,
                          you have to process a manual adjustment of the non-volatile data as follows:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;Lock event memories&lt;/li&gt;
                          &lt;li&gt;Clear event memories&lt;/li&gt;
                          &lt;li&gt;Update Dem Configuration&lt;/li&gt;
                          &lt;li&gt;Update related block size configurations in NVRAM, if necessary&lt;/li&gt;
                          &lt;li&gt;Update Block IDs of all Dem NVRAM blocks (by using the &quot;Static Block ID Check&quot;, see NvMStaticBlockIDCheck)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Nv Data configuration signature&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemNvRamBlockId&quot;&gt;DemNvRamBlockId&lt;/a&gt;: NvM Block Configuration must be configured with at least one NvM block.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Nv Data configuration signature"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:a name="UUID" value="e8661c9e-2148-441f-84d7-6e886bc3fb75"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="count(../DemNvRamBlockId/eb-list::*) &gt; 0"/>
                </v:var>
                <v:var name="DemNvDataConfigSignatureCalcSet" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration parameter defines how the signature used in
                          &lt;a href=&quot;path:DemNvDataConfigSignatureUsed&quot;&gt; DemNvDataConfigSignatureUsed&lt;/a&gt; is calculated.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;DEM_NVM_SIGNATURE_MIN&lt;/code&gt;: Calculation over all configuration parameters which
                            affects the size and the structure of the NvM data&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DEM_NVM_SIGNATURE_ALL&lt;/code&gt;: Calculation over all existing DEM configuration parameters&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Following configuration parameters affect the size and the structure of the NvM data:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;DemFreezeFrameCapture&lt;/li&gt;
                            &lt;li&gt;DemExtendedDataCapture&lt;/li&gt;
                            &lt;li&gt;DemNvRamBlockIdRef&lt;/li&gt;
                            &lt;li&gt;DemResetConfirmedBitOnOverflow&lt;/li&gt;
                            &lt;li&gt;DemGetDTCByOccurrenceTimeSupport&lt;/li&gt;
                            &lt;li&gt;DemMaxNumberEventEntryPrimary&lt;/li&gt;
                            &lt;li&gt;DemMaxNumberEventEntrySecondary&lt;/li&gt;
                            &lt;li&gt;DemMaxNumberEventEntryMirror&lt;/li&gt;
                            &lt;li&gt;DemMaxNumberEventEntryPermanent&lt;/li&gt;
                            &lt;li&gt;DemClearDTCBehavior&lt;/li&gt;
                            &lt;li&gt;DemImmediateStorageInternalEvents&lt;/li&gt;
                            &lt;li&gt;DemOperationCycleStatusStorage&lt;/li&gt;
                            &lt;li&gt;DemIndicator&lt;/li&gt;
                            &lt;li&gt;DemMaxNumberDevFreezeFrameAEntry&lt;/li&gt;
                            &lt;li&gt;DemMaxNumberDevFreezeFrameBEntry&lt;/li&gt;
                            &lt;li&gt;DemEventCombinationSupport&lt;/li&gt;
                            &lt;li&gt;DemOBDSupport&lt;/li&gt;
                            &lt;li&gt;DemIgnoreResetEventStatusForEventRelatedDataCapturing&lt;/li&gt;
                            &lt;li&gt;DemOperationCycleType&lt;/li&gt;
                            &lt;li&gt;DemOBDCentralizedPID21Handling&lt;/li&gt;
                            &lt;li&gt;DemOBDCentralizedPID31Handling&lt;/li&gt;
                            &lt;li&gt;DemPidClass&lt;/li&gt;
                            &lt;li&gt;DemEventParameter&lt;/li&gt;
                            &lt;li&gt;DemEventId&lt;/li&gt;
                            &lt;li&gt;DemExtendedDataClassRef&lt;/li&gt;
                            &lt;li&gt;DemExtendedDataRecordClassRef&lt;/li&gt;
                            &lt;li&gt;DemDataElementClassRef&lt;/li&gt;
                            &lt;li&gt;DemDataElementReadFnc&lt;/li&gt;
                            &lt;li&gt;DemDataElementUsePort&lt;/li&gt;
                            &lt;li&gt;DemInternalDataElement&lt;/li&gt;
                            &lt;li&gt;DemFreezeFrameClassRef&lt;/li&gt;
                            &lt;li&gt;DemDidClassRef&lt;/li&gt;
                            &lt;li&gt;DemDidIdentifier&lt;/li&gt;
                            &lt;li&gt;DemDidDataElementClassRef&lt;/li&gt;
                            &lt;li&gt;DemDataElementDataSize&lt;/li&gt;
                            &lt;li&gt;DemDataElementArraySize&lt;/li&gt;
                            &lt;li&gt;DemDevFreezeFrameAClassRef&lt;/li&gt;
                            &lt;li&gt;DemDevFreezeFrameBClassRef&lt;/li&gt;
                            &lt;li&gt;DemDTCClassRef&lt;/li&gt;
                            &lt;li&gt;DemImmediateNvStorage&lt;/li&gt;
                            &lt;li&gt;DemEventFailureCycleCounterThreshold&lt;/li&gt;
                            &lt;li&gt;DemIndicatorAttribute&lt;/li&gt;
                            &lt;li&gt;DemEventAvailable&lt;/li&gt;
                            &lt;li&gt;DemEventDestination&lt;/li&gt;
                            &lt;li&gt;DemEvtCmbCommonParamMaster&lt;/li&gt;
                            &lt;li&gt;DemDebounceCounterStorage&lt;/li&gt;
                            &lt;li&gt;DemUDSOBDFreezeFrameClassRef&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;In case of &lt;code&gt;DEM_NVM_SIGNATURE_MIN&lt;/code&gt;, any change to these parameters leads to
                          an update of the configuration signature and consequently, to the reset of the NvM data.&lt;/p&gt;
                        &lt;p&gt;In case of &lt;code&gt;DEM_NVM_SIGNATURE_ALL&lt;/code&gt;, each change of the configuration
                          would lead to a reset of the NvM data, also a change of &lt;a href=&quot;path:SwMajorVersion&quot;&gt;SwMajorVersion&lt;/a&gt;,
                          &lt;a href=&quot;path:SwMinorVersion&quot;&gt;SwMinorVersion&lt;/a&gt; or &lt;a href=&quot;path:SwPatchVersion&quot;&gt;SwPatchVersion
                          &lt;/a&gt; which is caused by a module update.&lt;/p&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Nv Data configuration signature for all parameters&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemNvDataConfigSignatureUsed&quot;&gt;DemNvDataConfigSignatureUsed&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Nv Data configuration signature for all parameters"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:a name="UUID" value="00e69396-c16a-4b22-990d-acb94951ca58"/>
                  <a:da name="DEFAULT" value="DEM_NVM_SIGNATURE_MIN"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemNvDataConfigSignatureUsed)"/>
                  <a:da name="RANGE">
                    <a:v>DEM_NVM_SIGNATURE_MIN</a:v>
                    <a:v>DEM_NVM_SIGNATURE_ALL</a:v>
                  </a:da>
                </v:var>
                <v:var name="DemCallbackMemStackMainFuncTrigger" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;User-defined name of the Memory stack main function triggering
                          callout function.
                          If this parameter is enabled, the Dem indirectly triggers the Memory stack
                          by calling this callout function.
                          This is required as &lt;code&gt;Dem_Init()&lt;/code&gt; and &lt;code&gt;Dem_Shutdown()&lt;/code&gt;
                          are synchronous.&lt;/p&gt;
                          &lt;p&gt;The function must have a prototype compatible to &lt;code&gt;
                          extern void Appl_TriggerMemoryStack(NvM_BlockIdType BlockId);&lt;/code&gt;,
                          which is declared in &lt;code&gt;Dem_Cfg.h&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;An integration code example can be found in the template file
                          &lt;code&gt;Dem_Callouts.c&lt;/code&gt; together with a description of the recommended
                          integration approach.&lt;/p&gt;
                          &lt;b&gt;Integration note:&lt;/b&gt;
                          &lt;p&gt;Dependent on the integration approach, related measures for &lt;em&gt;concurrency protection&lt;/em&gt;
                          and other aspects (like project-specific integration requirements,
                          Watchdog integration requirements, etc.) have to be applied!
                          The implementation of this callout has always to be checked and adapted against
                          all integration aspects and requirements, which &lt;em&gt;cannot be known/provided by a
                          generic BSW&lt;/em&gt; module implementation.&lt;/p&gt;
                          &lt;p&gt;Consult the related documentation (such as your project integration manual,
                          the &lt;em&gt;AutoCore_Generic_Memory_Stack_documentation&lt;/em&gt;, etc.) for correct
                          integration of the memory stack main functions (according to reentrancy characteristics,
                          possible trigger contexts, etc.).&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;NVRAM Storage&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DemImmediateNvStorage&lt;/code&gt;/&lt;a href=&quot;path:../DemImmediateStorageInternalEvents&quot;&gt;DemImmediateStorageInternalEvents&lt;/a&gt;/&lt;a href=&quot;path:../DemClearDTCBehavior&quot;&gt;DemClearDTCBehavior&lt;/a&gt;:&lt;br/&gt;
                              &lt;code&gt;DemImmediateNvStorage&lt;/code&gt; is enabled for any event&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemImmediateStorageInternalEvents&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemClearDTCBehavior&lt;/code&gt; is set to one of the &lt;code&gt;NONVOLATILE&lt;/code&gt; options.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="&apos;Main function trigger&apos; Function Name"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="NVRAM Storage"/>
                  <a:da name="DEFAULT" value="Appl_TriggerMemoryStack"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[                                 node:refexists(DemDTCClassRef) and                                 node:existsAndTrue(as:ref(DemDTCClassRef)/DemImmediateNvStorage)]) &gt; 0) or                               (node:existsAndTrue(DemGeneral/DemImmediateStorageInternalEvents)) or                               contains(node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemClearDTCBehavior), &apos;NONVOLATILE&apos;)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                        false="Invalid name. (no prefixed C function name)"/>
                </v:var>
                <v:var name="DemUserControlledWIRBitSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;This configuration parameter defines if user controlled WarningIndicatorRequested-bit is supported.&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;This feature allows the parallel Dem internal handling and the external handling (e.g by an especial &lt;em&gt;fail-safe SW-C&lt;/em&gt;)
                          of the WIR-bit of an event in Dem, by offering of the API &lt;em&gt;Dem_SetWIRStatus()&lt;/em&gt;.&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Dem provides the API &lt;em&gt;Dem_SetWIRStatus()&lt;/em&gt; to control (set/reset)
                          the WarningIndicatorRequested-bit of a configured event (in Dem) regarding to e.g. fail-safe state.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: The setting of the WIR-bit of an event is exclusively controlled by
                          the Dem internal WIR-bit handling.&lt;/li&gt;
                          &lt;li&gt;The user controlled WarningIndicatorRequested-bit is only stored volatile, therefore after a restart
                          of the Dem module, the SW-C is reponsible to re-inform the Dem about the requested failsafe status, if this
                          is the case. If the former requested WIR bit is no longer needed after the restart, the failsafe SW-C must
                          trigger the reset of the WIR-bit by calling the &lt;em&gt;Dem_SetWIRStatus()&lt;/em&gt; API.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;User controlled WarningIndicatorRequested(WIR)-bit&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="User controlled WarningIndicatorRequested(WIR)-bit"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1671b6e4-e123-4761-9339-86ae7e242c0b"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.) and (not(node:exists(../DemRteUsage )) or (node:existsAndFalse(../DemRteUsage))))" 
                        true="Suboptimal configuration: The external API Dem_SetWIRStatus() can only be used through the RTE and therefore the configuration parameter DemRteUsage should be enabled."/>
                </v:var>
                <v:var name="DemDataElementDefaultEndianness" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the default endianness of the data belonging to a data element which is
                           applicable if the DemExternalSRDataElementClass does not define a endianness.&lt;/p&gt;
                        &lt;p&gt;&lt;code&gt;DemDataElementDefaultEndianness&lt;/code&gt; defines the endianness of the data which will be read
                           by the Sender Receiver read function. Only in case of Sender Receiver read function
                           &lt;code&gt;DemDataElementDefaultEndianness&lt;/code&gt; could be different from the local ECU endianness, In such
                           case an endianness conversion is necessary. The configured &lt;code&gt;DemDataElementDataSize&lt;/code&gt; is applied
                           only after the endianness conversion and then data is written into the memory. Data in the memory
                           is always in little endian format i.e. first least significant byte is written to address n, and the next
                           more significant byte to address n+1 and so on.
                           Description of &lt;code&gt;DemDataElementEndianness&lt;/code&gt; provides example for the above use-case.
                        &lt;/p&gt;
                        &lt;p&gt;Range&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;: Most significant byte shall come at the lowest address.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt;: Most significant byte shall come highest address.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;OPAQUE&lt;/code&gt;: opaque data endianness (copy bytes in the order they are represented).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable support for &lt;em&gt;Type Of Default Data Element Endianness&lt;/em&gt;,&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;path:../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;DemExternalSRDataElementClass&lt;/code&gt;: At least one external sender/receiver based data element class must be configured.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Type Of Default Data Element Endianness"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Data Elements"/>
                  <a:a name="UUID" value="ade7968d-c88c-4774-85e6-26ba493d81e4"/>
                  <a:da name="DEFAULT" value="OPAQUE"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:existsAndTrue(../DemRteUsage)) and                                       (count(../DemDataElementClass/eb-choice::*[1]/eb-list::*[node:name(.) = &apos;DemExternalSRDataElementClass&apos;]) &gt; 0)"/>
                  <a:da name="RANGE">
                    <a:v>BIG_ENDIAN</a:v>
                    <a:v>LITTLE_ENDIAN</a:v>
                    <a:v>OPAQUE</a:v>
                  </a:da>
                </v:var>
                <v:lst name="DemOperationCycle" type="MAP">
                  <a:a name="COLUMNS" value="DemOperationCycle"/>
                  <a:a name="LABEL" value="Operation Cycle List"/>
                  <a:a name="TAB" value="Operation Cycles"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[DemOperationCycleType = &apos;DEM_OPCYC_WARMUP&apos;]) != 1) and (count(util:distinct(node:refs(../DemExtendedDataClass/eb-list::*/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC5&apos;]) &gt; 0)" 
                        true="If DEM_OCC5 is configured then there must be declared exactly one operation cycle having DemOperationCycleType configured to DEM_OPCYC_WARMUP."/>
                  <a:da name="MAX" value="255"/>
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="DemOperationCycle" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          Note that this container definition does not explicitly define a
                          symbolic name parameter. Instead, the short name of the container
                          will be used in the Ecu Configuration Description to specify the
                          symbolic name of the operation cycle name.
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DemOBDSupport&lt;/code&gt;: is set to true, then &lt;code&gt;DEM_OPCYC_OBD_DCY&lt;/code&gt;
                              and &lt;code&gt;DEM_OPCYC_IGNITION&lt;/code&gt; must be configured.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DemEventOBDReadinessGroup&lt;/code&gt;: if configured to a readiness group other than &lt;code&gt;DEM_OBD_RDY_NONE&lt;/code&gt;,
                              then &lt;code&gt;DEM_OPCYC_OBD_DCY&lt;/code&gt; must be configured.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_OPCYCLE_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="29eb80dd-0193-4372-b8d9-6078736f1692"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:xpath>
                        <mt:tst 
                                true="If OBD support is activated then DEM_OPCYC_OBD_DCY and DEM_OPCYC_IGNITION must be declared." 
                                expr="((count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[DemOperationCycleType = &apos;DEM_OPCYC_OBD_DCY&apos;]) = 0) or (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[DemOperationCycleType = &apos;DEM_OPCYC_IGNITION&apos;]) = 0)) and (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                        <mt:tst 
                                true="If the DemEventOBDReadinessGroup is configured different of DEM_OBD_RDY_NONE, DEM_OPCYC_OBD_DCY should be declared." 
                                expr="(count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[DemEventOBDReadinessGroup != &apos;DEM_OBD_RDY_NONE&apos;])!= 0) and (count(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOperationCycle/eb-list::*[DemOperationCycleType = &apos;DEM_OPCYC_OBD_DCY&apos;]) = 0) and (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemOBDSupport))"/>
                      </mt:xpath>
                    </a:da>
                    <a:da name="TITLE" value="Operation Cycle"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="(count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[                                                                       (node:refexists(DemOperationCycleRef) and                                                                       as:name(as:ref(DemOperationCycleRef)) = as:name(node:current()))                                                                       or                                                                       (node:refexists(DemEventFailureCycleRef) and                                                                       as:name(as:ref(DemEventFailureCycleRef)) = as:name(node:current()))]                                          ) = 0) and                                    (count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*[                                                                       (node:refexists(DemIndicatorFailureCycleRef) and                                                                       as:name(as:ref(DemIndicatorFailureCycleRef)) = as:name(node:current()))                                                                       or                                                                       (node:refexists(DemIndicatorHealingCycleRef) and                                                                       as:name(as:ref(DemIndicatorHealingCycleRef)) = as:name(node:current()))]                                          ) = 0) and                                    (( ./DemOperationCycleType != &apos;DEM_OPCYC_WARMUP&apos;) or                                     (( ./DemOperationCycleType = &apos;DEM_OPCYC_WARMUP&apos;) and                                      (count(util:distinct(node:refs(../../DemExtendedDataClass/eb-list::*/DemExtendedDataRecordClassRef/eb-list::*))/DemDataElementClassRef/eb-list::*[as:ref(.)/DemInternalDataElement = &apos;DEM_OCC5&apos;]) = 0)))" 
                          true="Suboptimal configuration: This operation cycle is not used from any event."/>
                    <v:var name="DemOperationCycleType" type="ENUMERATION">
                      <a:a name="COLUMN_TITLE" value="Type"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Operation cycles types for the Dem to be supported by cycle-state
                            APIs.&lt;/p&gt;

                            &lt;p&gt;Further cycle types can be specified as part of the Dem
                            delivery.&lt;/p&gt;

                            &lt;p&gt;Range&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;DEM_OPCYC_IGNITION&lt;/code&gt;: Ignition ON / OFF cycle.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_OPCYC_OBD_DCY&lt;/code&gt;: OBD Driving cycle.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_OPCYC_OTHER&lt;/code&gt;: further operation cycle.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_OPCYC_POWER&lt;/code&gt;: Power ON / OFF cycle.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_OPCYC_TIME&lt;/code&gt;: Time-based operation cycle.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_OPCYC_WARMUP&lt;/code&gt;: OBD Warm up cycle.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Operation Cycle Type"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="7e320182-c52e-487b-b9e8-74e18ab9ef10"/>
                      <a:da name="DEFAULT" value="DEM_OPCYC_POWER"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="text:uniq(../../eb-list::*[DemOperationCycleType != &apos;DEM_OPCYC_OTHER&apos;]/DemOperationCycleType, .)" 
                            false="The Operation cycle type must be unique."/>
                      <a:da name="RANGE">
                        <a:v>DEM_OPCYC_IGNITION</a:v>
                        <a:v>DEM_OPCYC_OBD_DCY</a:v>
                        <a:v>DEM_OPCYC_OTHER</a:v>
                        <a:v>DEM_OPCYC_POWER</a:v>
                        <a:v>DEM_OPCYC_TIME</a:v>
                        <a:v>DEM_OPCYC_WARMUP</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="DemOperationCycleAutomaticEnd" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;If this configuration parameter is set to TRUE, the dedicated operation cycle
                              will be ended automatically at system shutdown.&lt;/p&gt;
                            &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                              To enable support for &lt;em&gt;Automatic ending&lt;/em&gt;,&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;DemOperationCycleType&lt;/code&gt;: of type &lt;code&gt;DEM_OPCYC_OBD_DCY&lt;/code&gt; must not be configured.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Automatic ending"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="1a9e3410-5892-4c69-b33a-91e4ba06c123"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(node:existsAndTrue(.)) and (../DemOperationCycleType=&apos;DEM_OPCYC_OBD_DCY&apos;)" 
                            true="Automatic ending not allowed for driving cycle"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemAgingCycle" type="MAP">
                  <a:a name="COLUMNS" value="DemAgingCycle"/>
                  <a:a name="LABEL" value="Aging Cycle List"/>
                  <a:da name="MAX" value="256"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="DemAgingCycle" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Note that this container definition does not explicitly define a symbolic
                          name parameter. Instead, the short name of the container will be used in
                          the Ecu Configuration Description to specify the symbolic name of the aging
                          cycle name. These aging cycles are reported via API
                          &lt;code&gt;Dem_SetAgingCycleState&lt;/code&gt; only.&lt;/p&gt;
                          &lt;p&gt;
                            Note that when DemExtendedDataCapture and DemFreezeFrameCapture are set to
                            DEM_TRIGGER_ON_FDC_THRESHOLD and DemAgingAllowed is enabled, aging through
                            aging cycles is not allowed therefore it is meaningless to configure aging cycles
                            if the above preconditions are met.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="NAME_PATTERN" value="DEM_AGCYCLE_?"/>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:25f625cb-f3db-4091-922d-c554992647c4"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="text:match(as:name(.), &apos;^DEM_AGCYCLE_[A-Z0-9_]+$&apos;)" 
                          false="Invalid name. (must be upper-case and start with &apos;DEM_AGCYCLE_&apos;)"/>
                    <a:da name="TITLE" value="Aging Cycle"/>
                    <a:da name="WARNING" type="XPath">
                      <a:tst 
                             expr="count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[                                                                      (node:refexists(DemAgingCycleRef) and                                                                      as:name(as:ref(DemAgingCycleRef)) = as:name(node:current()))]                                         ) = 0" 
                             true="Suboptimal configuration: This aging cycle is not used from any event."/>
                      <a:tst 
                             expr="( (../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[(node:existsAndTrue(DemAgingAllowed))]) and                                     (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemFreezeFrameCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;) and                                     (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemExtendedDataCapture = &apos;DEM_TRIGGER_ON_FDC_THRESHOLD&apos;)                                    )" 
                             true="Suboptimal configuration: It is not meaningful to configure aging cycles, since DemFreezeFrameCapture and                                    DemExtendedDataCapture are set to DEM_TRIGGER_ON_FDC_THRESHOLD. Aging through aging cycles is not possible."/>
                    </a:da>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemRatioId" type="MAP">
                  <a:a name="LABEL" value="Ratio Id List"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="MAX" value="65535"/>
                  <v:ctr name="DemRatioId" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This container contains the OBD specific ratio Id configuraiton. It
                          is related to a specific event, a FID, and an IUMPR group.&lt;/p&gt;

                          &lt;p&gt;Note that this container definition does not explicitly define a
                          symbolic name parameter. Instead, the short name of the container will
                          be used in the Ecu Configuration Description to specify the symbolic
                          name of the ratio Id name.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="04d06411-85a5-41e7-8e35-8e7c60c27ca8"/>
                    <a:da name="TITLE" value="Ratio Id"/>
                    <v:var name="DemIUMPRGroup" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;This parameter specifies the assigned IUMPR group of the ratio Id.&lt;/p&gt;

                            &lt;p&gt;Range&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_BOOSTPRS&lt;/code&gt;: Boost Pressure&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_CAT1&lt;/code&gt;: Catalyst 1&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_CAT2&lt;/code&gt;: Catalyst 2&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_EGR&lt;/code&gt;: exhaust gas recirculation&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_EGSENSOR&lt;/code&gt;: exhaust gas sensor&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_EVAP&lt;/code&gt;: System Vapor Pressure&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_NMHCCAT&lt;/code&gt;: non-methane hydrocarbons catalyst&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_NOXADSORB&lt;/code&gt;: NOx adsorber&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_NOXCAT&lt;/code&gt;: NOx catalyst&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_OXS1&lt;/code&gt;: Oxygen sensor 1&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_OXS2&lt;/code&gt;: Oxygen sensor 2&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_PMFILTER&lt;/code&gt;: Particulate matter filter&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_PRIVATE&lt;/code&gt;: &lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_SAIR&lt;/code&gt;: Secondary air system&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_SECOXS1&lt;/code&gt;: secondary oxygen sensor 1&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_IUMPR_SECOXS2&lt;/code&gt;: secondary oxygen sensor 2&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="IUMPR Group"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="b0938415-b4c7-4dc6-9b13-f520eefb478e"/>
                      <a:da name="DEFAULT" value="DEM_IUMPR_BOOSTPRS"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="RANGE">
                        <a:v>DEM_IUMPR_BOOSTPRS</a:v>
                        <a:v>DEM_IUMPR_CAT1</a:v>
                        <a:v>DEM_IUMPR_CAT2</a:v>
                        <a:v>DEM_IUMPR_EGR</a:v>
                        <a:v>DEM_IUMPR_EGSENSOR</a:v>
                        <a:v>DEM_IUMPR_EVAP</a:v>
                        <a:v>DEM_IUMPR_NMHCCAT</a:v>
                        <a:v>DEM_IUMPR_NOXADSORB</a:v>
                        <a:v>DEM_IUMPR_NOXCAT</a:v>
                        <a:v>DEM_IUMPR_OXS1</a:v>
                        <a:v>DEM_IUMPR_OXS2</a:v>
                        <a:v>DEM_IUMPR_PMFILTER</a:v>
                        <a:v>DEM_IUMPR_PRIVATE</a:v>
                        <a:v>DEM_IUMPR_SAIR</a:v>
                        <a:v>DEM_IUMPR_SECOXS1</a:v>
                        <a:v>DEM_IUMPR_SECOXS2</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="DemRatioIdType" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;This parameter defines whether the ratio Id will be calculated API or
                            observer based.&lt;/p&gt;

                            &lt;p&gt;Range&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;DEM_RATIO_API&lt;/code&gt;: API based ratio Id.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;DEM_RATIO_OBSERVER&lt;/code&gt;: Observer based ratio Id.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Ratio Id Type"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="cbf7a84a-d64c-4afc-a782-fad2da7ea7c1"/>
                      <a:da name="DEFAULT" value="DEM_RATIO_API"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="RANGE">
                        <a:v>DEM_RATIO_API</a:v>
                        <a:v>DEM_RATIO_OBSERVER</a:v>
                      </a:da>
                    </v:var>
                    <v:ref name="DemDiagnosticEventRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;This reference contains the link to a diagnostic event.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Diagnostic Event"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="a29f36dd-62c0-45d9-b346-cfee9e674357"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                            false="Invalid reference."/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="DemFunctionIdRef" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;This reference contains the link to a function identifier within the
                            FiM which is used as a primary FID.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Primary Function Id"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="1232d984-d5cb-4475-aaf0-7ecbf4b3bda4"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                            false="Invalid reference."/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/FiM/FiMConfigSet/FiMFID"/>
                    </v:ref>
                    <v:lst name="DemSecondaryFunctionIdRef" type="MAP">
                      <a:a name="LABEL" value="Secondary Function Id List"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:ref name="DemSecondaryFunctionIdRef" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;This reference contains the link to a function identifier within the
                              FiM which is used as a secondary FID.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Secondary Function Id"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="ECUC:48718548-1795-412d-a803-72c0e418f233"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" false="Invalid reference."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/FiM/FiMConfigSet/FiMFID"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:ctr name="DemEventStatusPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the EventStatus Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e7"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="TITLE" value="OperationCycle Port"/>
                  <v:var name="DemCSQueueLengthSetWIRStatusRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the EventStatus Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of EventStatus Port&lt;/em&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemUserControlledWIRBitSupport&quot;&gt;DemUserControlledWIRBitSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of EventStatus Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e8"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                           (node:existsAndTrue(../../DemUserControlledWIRBitSupport))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetWIRStatus" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetWIRStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetWIRStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemUserControlledWIRBitSupport&quot;&gt;DemUserControlledWIRBitSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetWIRStatusRteCalculated&quot;&gt;DemCSQueueLengthSetWIRStatusRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_SetWIRStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda02a"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemUserControlledWIRBitSupport))                           and (node:existsAndFalse(../DemCSQueueLengthSetWIRStatusRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemOpCyclePort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the OpCycle Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d0"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="TITLE" value="OperationCycle Port"/>
                  <v:var 
                         name="DemCSQueueLengthSetOperationCycleStateRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the OpCycle Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of DemOpCycle Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of DemOpCycle Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d7"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetOperationCycleState" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operations&lt;/em&gt; SetOperationCycleState.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;SetOperationCycleState Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetOperationCycleStateRteCalculated&quot;&gt;DemCSQueueLengthSetOperationCycleStateRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_40&lt;/code&gt;, &lt;code&gt;AUTOSAR_42&lt;/code&gt; or &lt;code&gt;AUTOSAR_43&lt;/code&gt; or&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemEnableASR40ServiceAPI&quot;&gt;DemEnableASR40ServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt; or&lt;/li&gt;
                                &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemEnableASR42ServiceAPI&quot;&gt;DemEnableASR42ServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="SetOperationCycleState Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda032"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (node:existsAndFalse(../DemCSQueueLengthSetOperationCycleStateRteCalculated))                           and ((../../DemServiceAPI/DemDefaultASRServiceAPI != &apos;AUTOSAR_2011&apos;)                             or (node:existsAndTrue(../../DemServiceAPI/DemEnableASR40ServiceAPI))                             or (node:existsAndTrue(../../DemServiceAPI/DemEnableASR42ServiceAPI)))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthRestartOperationCycle" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operations&lt;/em&gt; RestartOperationCycle.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RestartOperationCycle Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetOperationCycleStateRteCalculated&quot;&gt;DemCSQueueLengthSetOperationCycleStateRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="RestartOperationCycle Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e293e5d1-ea92-4fb9-b28c-af785fd5d73a"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) and                           (node:existsAndFalse(../DemCSQueueLengthSetOperationCycleStateRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetCycleQualified" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter which allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operations&lt;/em&gt; SetCycleQualified.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;SetCycleQualified Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetOperationCycleStateRteCalculated&quot;&gt;DemCSQueueLengthSetOperationCycleStateRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="SetCycleQualified Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="9c8fe31c-1bf8-4b42-a05d-e83e76b3a84f"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (node:existsAndFalse(../DemCSQueueLengthSetOperationCycleStateRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemAgingCyclePort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the AgingCycle Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e4"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthSetAgingCycleRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the AgingCycle Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of AgingCycle Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of AgingCycle Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d8"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage) )"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetAgingCycleState" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetAgingCycleState.&lt;/p&gt;

                          &lt;p&gt;This parameter is available only if &lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;
                          is enabled and &lt;a href=&quot;path:../../DemAgingCycleCounterProcessing&quot;&gt;DemAgingCycleCounterProcessing&lt;/a&gt;
                          is set to DEM_PROCESS_AGINGCTR_INTERN.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_SetAgingCycleState Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda033"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (../../DemAgingCycleCounterProcessing = &apos;DEM_PROCESS_AGINGCTR_INTERN&apos;)                           and (node:existsAndFalse(../DemCSQueueLengthSetAgingCycleRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetAgingCycleCounterValue" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetAgingCycleCounterValue.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetAgingCycleCounterValue Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemAgingCycleCounterProcessing&quot;&gt;DemAgingCycleCounterProcessing&lt;/a&gt;: must
                              be set to &lt;code&gt;DEM_PROCESS_AGINGCTR_EXTERN&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetAgingCycleRteCalculated&quot;&gt;DemCSQueueLengthSetAgingCycleRteCalculated&lt;/a&gt;: must
                              be set to &lt;code&gt;false&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_SetAgingCycleCounterValue Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda034"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (../../DemAgingCycleCounterProcessing = &apos;DEM_PROCESS_AGINGCTR_EXTERN&apos;)                           and (node:existsAndFalse(../DemCSQueueLengthSetAgingCycleRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemEnableCondPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the EnableCond Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e5"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthSetEnableConditionRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the StorageCond Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of EnableCond Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of EnableCond Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e9"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetEnableCondition" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetEnableCondition.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetEnableCondition Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetEnableConditionRteCalculated&quot;&gt;DemCSQueueLengthSetEnableConditionRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_SetEnableCondition Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda035"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (node:existsAndFalse(../DemCSQueueLengthSetEnableConditionRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemStorageCondPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the StorageCond Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e2"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var 
                         name="DemCSQueueLengthSetStorageConditionRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the StorageCond Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of StorageCond Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of StorageCond Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e3"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetStorageCondition" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetStorageCondition.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetStorageCondition Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetStorageConditionRteCalculated&quot;&gt;DemCSQueueLengthSetStorageConditionRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_SetStorageCondition Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda046"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (node:existsAndFalse(../DemCSQueueLengthSetStorageConditionRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemIndStatusPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the IndStatus Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e0"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthGetIndicatorStatusRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the IndStatus Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of ControlDTCSuppression Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of ControlDTCSuppression Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0e1"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetIndicatorStatus" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetIndicatorStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetIndicatorStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthGetIndicatorStatusRteCalculated&quot;&gt;DemCSQueueLengthGetIndicatorStatusRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetIndicatorStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda036"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                           (node:existsAndFalse(../DemCSQueueLengthGetIndicatorStatusRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemControlDTCSuppressionPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the ControlDTCSuppression Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0dc"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthSetDTCSuppressionRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the ControlDTCSuppression Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of ControlDTCSuppression Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of ControlDTCSuppression Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0dd"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetDTCSuppression" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetDTCSuppression.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetDTCSuppression Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetDTCSuppressionRteCalculated&quot;&gt;DemCSQueueLengthSetDTCSuppressionRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_SetDTCSuppression Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda03e"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (node:existsAndFalse(../DemCSQueueLengthSetDTCSuppressionRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemCddIfPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the CddIf Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d6"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthClearDTCRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the CddIf Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of CddIf Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_42&lt;/code&gt;, &lt;code&gt;AUTOSAR_43&lt;/code&gt; or &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of CddIf Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d9"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and ( (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;) or                                 (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;) or                                 (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) )"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthClearDTC" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_ClearDTC.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_ClearDTC Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_42&lt;/code&gt;, &lt;code&gt;AUTOSAR_43&lt;/code&gt; or &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthClearDTCRteCalculated&quot;&gt;DemCSQueueLengthClearDTCRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_ClearDTC Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda041"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                             ( (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;) or                               (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;) or                               (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) ) and                             (node:existsAndFalse(../DemCSQueueLengthClearDTCRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemClearDTCPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the ClearDTC Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba96c3bd0d6"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthClearDTCR2011RteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the ClearDTC Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of ClearDTC Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of ClearDTC Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-baa8-450d-a6aa-7ba95c3bd0d9"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))                           and (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;)"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthClearDTCR2011" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_ClearDTC.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_ClearDTC Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthClearDTCR2011RteCalculated&quot;&gt;DemCSQueueLengthClearDTCR2011RteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_ClearDTC Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-baaf-8472a2cda041"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                             (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) and                             (node:existsAndFalse(../DemCSQueueLengthClearDTCR2011RteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthSelectDTCR2011" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SelectDTC.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SelectDTC Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must be set to &lt;code&gt;AUTOSAR_2011&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthClearDTCR2011RteCalculated&quot;&gt;DemCSQueueLengthClearDTCR2011RteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_SelectDTC Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472b2cda041"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                             (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) and                             (node:existsAndFalse(../DemCSQueueLengthClearDTCR2011RteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemResetReadinessPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the ResetReadiness Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d2"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthResetReadinessRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the ResetReadiness Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of ResetReadiness Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of ResetReadiness Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d3"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthResetReadiness" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_ResetReadiness.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_ResetReadiness Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthResetReadinessRteCalculated&quot;&gt;DemCSQueueLengthResetReadinessRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_ResetReadiness Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda044"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                           (node:existsAndTrue(../../DemOBDSupport)) and                           (node:existsAndFalse(../DemCSQueueLengthResetReadinessRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemPowerTakeOffStatusPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the PowerTakeOffStatus Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d4"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSQueueLengthSetPtoStatusRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the PowerTakeOffStatus Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for the operation of PowerTakeOffStatus Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for the operation of PowerTakeOffStatus Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0d1"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetPtoStatus" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetPtoStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetPtoStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthSetPtoStatusRteCalculated&quot;&gt;DemCSQueueLengthSetPtoStatusRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_SetPtoStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda045"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))                           and (node:existsAndFalse(../DemCSQueueLengthSetPtoStatusRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemEventPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the Event Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0c6"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSEventGroupRteCalculated" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the EventInfo Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of Event Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of Event Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0c7"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetEventStatus" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetEventStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetEventStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventGroupRteCalculated&quot;&gt;DemCSEventGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_SetEventStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda01e"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthResetEventDebounceStatus" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_ResetEventDebounceStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_ResetEventDebounceStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventGroupRteCalculated&quot;&gt;DemCSEventGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_ResetEventDebounceStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda01f"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthResetEventStatus" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_ResetEventStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_ResetEventStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventGroupRteCalculated&quot;&gt;DemCSEventGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_ResetEventStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda01f"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthPrestoreFreezeFrame" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_PrestoreFreezeFrame.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_PrestoreFreezeFrame Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventGroupRteCalculated&quot;&gt;DemCSEventGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_PrestoreFreezeFrame Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda020"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthClearPrestoredFreezeFrame" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_ClearPrestoredFreezeFrame.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_ClearPrestoredFreezeFrame Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventGroupRteCalculated&quot;&gt;DemCSEventGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_ClearPrestoredFreezeFrame Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda021"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetEventDisabled" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetEventDisabled.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetEventDisabled Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventGroupRteCalculated&quot;&gt;DemCSEventGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_SetEventDisabled Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda022"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))                           and (node:existsAndFalse(../DemCSEventGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemEventInfoPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the EventInfo Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0c8"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="TITLE" value="EventInfo Port"/>
                  <v:var name="DemCSEventInfoGroupRteCalculated" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the EventInfo Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of EventInfo Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of EventInfo Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0c9"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventStatus" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventStatus.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventStatus Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_GetEventStatus Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda023"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventFailed" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventFailed.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventFailed Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_GetEventFailed Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda024"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventTested" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventFailed.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventFailed Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_GetEventFailed Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda025"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetDTCOfEvent" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetDTCOfEvent.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetDTCOfEvent Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem_GetDTCOfEvent Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda026"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetFaultDetectionCounter" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetFaultDetectionCounter.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetFaultDetectionCounter Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetFaultDetectionCounter Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda027"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventFreezeFrameData" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventFreezeFrameData.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventFreezeFrameData Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must not be set to &lt;code&gt;AUTOSAR_43&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetEventFreezeFrameData Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda028"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                             (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated)) and                             (../../DemServiceAPI/DemDefaultASRServiceAPI != &apos;AUTOSAR_43&apos;)"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventExtendedDataRecord" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventExtendedDataRecord.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventExtendedDataRecord Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;: must not be set to &lt;code&gt;AUTOSAR_43&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetEventExtendedDataRecord Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda029"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated)) and                             (../../DemServiceAPI/DemDefaultASRServiceAPI != &apos;AUTOSAR_43&apos;)"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventFreezeFrameDataEx" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventFreezeFrameDataEx.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventFreezeFrameDataEx Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;/&lt;a href=&quot;path:../../DemServiceAPI/DemEnableASR42ServiceAPI&quot;&gt;DemEnableASR42ServiceAPI&lt;/a&gt;:&lt;br/&gt;
                              &lt;code&gt;DemDefaultASRServiceAPI&lt;/code&gt; must be set to &lt;code&gt;AUTOSAR_42&lt;/code&gt;, &lt;code&gt;AUTOSAR_43&lt;/code&gt; or &lt;code&gt;AUTOSAR_2011&lt;/code&gt;
                              to enable support for &lt;em&gt;Dem_GetEventFreezeFrameDataEx Queue Length&lt;/em&gt;.&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemEnableASR42ServiceAPI&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetEventFreezeFrameDataEx Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda02b"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                             ( (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;) or                               (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;) or                               (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) or                               (node:existsAndTrue(../../DemServiceAPI/DemEnableASR42ServiceAPI))) and                             (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventExtendedDataRecordEx" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventExtendedDataRecordEx.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventExtendedDataRecordEx Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;/&lt;a href=&quot;path:../../DemServiceAPI/DemEnableASR42ServiceAPI&quot;&gt;DemEnableASR42ServiceAPI&lt;/a&gt;:&lt;br/&gt;
                              &lt;code&gt;DemDefaultASRServiceAPI&lt;/code&gt; must be set to &lt;code&gt;AUTOSAR_42&lt;/code&gt;, &lt;code&gt;AUTOSAR_43&lt;/code&gt; or &lt;code&gt;AUTOSAR_2011&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemEnableASR42ServiceAPI&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetEventExtendedDataRecordEx Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda02c"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                           ( (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;) or                             (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;) or                             (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) or                             (node:existsAndTrue(../../DemServiceAPI/DemEnableASR42ServiceAPI)) ) and                           (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetDebouncingOfEvent" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetDebouncingOfEvent.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetDebouncingOfEvent Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemServiceAPI/DemDefaultASRServiceAPI&quot;&gt;DemDefaultASRServiceAPI&lt;/a&gt;/&lt;a href=&quot;path:../../DemServiceAPI/DemEnableASR42ServiceAPI&quot;&gt;DemEnableASR42ServiceAPI&lt;/a&gt;:&lt;br/&gt;
                              &lt;code&gt;DemDefaultASRServiceAPI&lt;/code&gt; must be set to &lt;code&gt;AUTOSAR_42&lt;/code&gt;, &lt;code&gt;AUTOSAR_43&lt;/code&gt; or &lt;code&gt;AUTOSAR_2011&lt;/code&gt;&lt;br/&gt;or&lt;br/&gt;
                              &lt;code&gt;DemEnableASR42ServiceAPI&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSEventInfoGroupRteCalculated&quot;&gt;DemCSEventInfoGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetDebouncingOfEvent Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda02d"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                             ( (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;) or (node:existsAndTrue(../../DemServiceAPI/DemEnableASR42ServiceAPI)) or                               (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_43&apos;) or                               (../../DemServiceAPI/DemDefaultASRServiceAPI = &apos;AUTOSAR_2011&apos;) ) and                             (node:existsAndFalse(../DemCSEventInfoGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemPfcCycleQualifiedPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the PfcCycleQualified Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0cc"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSPfcCycleQualifiedGroupRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the PfcCycleQualified Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of PfcCycleQualified Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of PfcCycleQualified Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0cd"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetPfcCycleSetPfcCycleQualified" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_SetPfcCycleQualified.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_SetPfcCycleQualified Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSPfcCycleQualifiedGroupRteCalculated&quot;&gt;DemCSPfcCycleQualifiedGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_SetPfcCycleQualified Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda042"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))                           and (node:existsAndFalse(../DemCSPfcCycleQualifiedGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetPfcCycleQualified" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetPfcCycleQualified.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetPfcCycleQualified Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSPfcCycleQualifiedGroupRteCalculated&quot;&gt;DemCSPfcCycleQualifiedGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetPfcCycleQualified Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda043"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport))                           and (node:existsAndFalse(../DemCSPfcCycleQualifiedGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemIUMPRDenominatorConditionPort" 
                       type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the IUMPRDenominatorCondition Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0ce"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var 
                         name="DemCSQueueLengthIUMPRDenominatorConditionRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the IUMPRDenominatorCondition Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of IUMPRDenominatorCondition Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of IUMPRDenominatorCondition Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0cf"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport)) and                                                            ( ((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)) and                                                            (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                                            (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthSetIUMPRDenCondition" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; SetIUMPRDenCondition.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;SetIUMPRDenCondition Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthIUMPRDenominatorConditionRteCalculated&quot;&gt;DemCSQueueLengthIUMPRDenominatorConditionRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="SetIUMPRDenCondition Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda047"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport)) and                                                            (node:existsAndFalse(../DemCSQueueLengthIUMPRDenominatorConditionRteCalculated)) and                                                            ( ((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)) and                                                            (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                                            (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetIUMPRDenCondition" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; GetIUMPRDenCondition.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;GetIUMPRDenCondition Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthIUMPRDenominatorConditionRteCalculated&quot;&gt;DemCSQueueLengthIUMPRDenominatorConditionRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="GetIUMPRDenCondition Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda048"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndTrue(../../DemOBDSupport)) and                                                            (node:existsAndFalse(../DemCSQueueLengthIUMPRDenominatorConditionRteCalculated)) and                                                            ( ((node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant)) and                                                            (node:value(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemObdVariant) = &apos;DEM_OBD_VARIANT_OBDONUDS&apos;)) or                                                            (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemCalloutObdVariantFnc)) )"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemPerformanceCountersPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the PerformanceCounters Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="faef9dd4-e7e6-435b-b934-3e7cafe2fef5"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var 
                         name="DemCSQueueLengthResetPerformanceCountersRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the PerformanceCounters Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of PerformanceCounters Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemResetPerformanceCountersAPI&quot;&gt;DemResetPerformanceCountersAPI&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of PerformanceCounters Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="068a50aa-97db-49eb-8ee2-8ec61119cb70"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                                                            ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemResetPerformanceCountersAPI)) and                                                              (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemResetPerformanceCountersAPI)))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthResetPerformanceCounters" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; ResetPerformanceCounters.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;ResetPerformanceCounters Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemOBDSupport&quot;&gt;DemOBDSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemObdVariant&quot;&gt;DemObdVariant&lt;/a&gt; must be set to &lt;code&gt;DEM_OBD_VARIANT_OBDONUDS&lt;/code&gt; or
                                &lt;a href=&quot;path:../../DemCalloutObdVariantFnc&quot;&gt;DemCalloutObdVariantFnc&lt;/a&gt; must be enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemResetPerformanceCountersAPI&quot;&gt;DemResetPerformanceCountersAPI&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSQueueLengthResetPerformanceCountersRteCalculated&quot;&gt;DemCSQueueLengthResetPerformanceCountersRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="ResetPerformanceCounters Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="0c7950e1-7d4e-4b3c-95f9-bcd0a69d38ff"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and                                                            ( (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemResetPerformanceCountersAPI)) and                                                              (node:existsAndTrue(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemResetPerformanceCountersAPI))) and                                                            (node:existsAndFalse(../DemCSQueueLengthResetPerformanceCountersRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="DemOverflowIndPort" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This container is used for grouping the parameters used for setting the queue length
                        of the Client/Server ComSpec Operations for the OverflowInd Port.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="CSPorts Queue Length"/>
                  <a:a name="UUID" value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0ca"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:var name="DemCSOverflowIndicationGroupRteCalculated" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows to set the queue length to all operations
                          of the OverflowIndication Port to values calculated by RTE.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;RTE calculated Queue Length for all operations of OverflowIndication Port&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="RTE calculated Queue Length for all operations of OverflowIndication Port"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="428ef4de-bfa8-450d-a6aa-7ba95c3bd0cb"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage))"/>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetEventMemoryOverflow" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetEventMemoryOverflow.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetEventMemoryOverflow Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSOverflowIndicationGroupRteCalculated&quot;&gt;DemCSOverflowIndicationGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetEventMemoryOverflow Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda037"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSOverflowIndicationGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="DemCSQueueLengthGetNumberOfEventMemoryEntries" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration parameter that allows defining the queue
                          length of the &lt;em&gt;Client / Server ComSpec Operation&lt;/em&gt; Dem_GetNumberOfEventMemoryEntries.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                          To enable support for &lt;em&gt;Dem_GetNumberOfEventMemoryEntries Queue Length&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../../DemRteUsage&quot;&gt;DemRteUsage&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemCSOverflowIndicationGroupRteCalculated&quot;&gt;DemCSOverflowIndicationGroupRteCalculated&lt;/a&gt;: must be set to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" 
                         value="Dem_GetNumberOfEventMemoryEntries Queue Length"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="ECU"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="CSPorts Queue Length"/>
                    <a:a name="UUID" 
                         value="e58736a1-7c13-4011-ba0f-8472a2cda038"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:existsAndTrue(../../DemRteUsage)) and (node:existsAndFalse(../DemCSOverflowIndicationGroupRteCalculated))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:var name="DemIncludeProjectSpecificCustomizationSupport" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This configuration switch defines whether support for project-specific customization
                        is enabled or not.
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: support for project-specific customization is enabled&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: support for project-specific customization is disabled&lt;/li&gt;
                        &lt;/ul&gt;

                        When this parameter is enabled, the template header-file Dem_Customization.h
                        will be included in the Dem-internal header files structure.
                        This template file can be edited by the user for the inclusion of project-specific customization.
                        Note: The project-specific APIs must not access any Dem-internal data structures and
                        functions because of concurrence limitations.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Project Specific Customization Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e1b6f667-badd-4ff3-881d-d47553346c8d"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(node:existsAndTrue(.)) and (count(../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[(DemEventKind = &apos;DEM_EVENT_KIND_BSW&apos;)]) != 0)" 
                        true="Information: Dem_ReportErrorStatus API is internally defined as there are BSW events configured, but Project Specific Customization Support is enabled."/>
                </v:var>
                <v:lst name="DemStorageCondition" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>DemStorageConditionId</a:v>
                    <a:v>DemStorageConditionStatus</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Storage Condition List"/>
                  <a:a name="ROWS" value="12"/>
                  <a:a name="TAB" value="Storage Conditions"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="MAX" value="255"/>
                  <v:ctr name="DemStorageCondition" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This container contains the configuration (parameters) for storage
                          conditions.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                            To enable support for &lt;em&gt;Storage Condition&lt;/em&gt;,&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;a href=&quot;path:../DemStorageConditionSupport&quot;&gt;DemStorageConditionSupport&lt;/a&gt;: must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;

                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="61c2049a-9885-454f-b3ca-dfb4de8ead7d"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:existsAndFalse(../../DemStorageConditionSupport)" 
                          true="DemGeneral/DemStorageConditionSupport is not set, hence the Storage Condition cannot be supported."/>
                    <a:da name="TITLE" value="Storage Condition"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../DemStorageConditionGroup/eb-list::*/DemStorageConditionRef/eb-list::*[                                                                             node:refexists(.) and                                                                             as:name(as:ref(.)) = as:name(node:current())]                                         ) = 0" 
                          true="Suboptimal configuration: This Storage Condition is not used by any Storage Condition Group."/>
                    <v:var name="DemStorageConditionId" type="INTEGER">
                      <a:a name="COLUMN_TITLE" value="Storage Condition Id"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;Defines a unique storage condition Id. This parameter should not be
                            changeable by user, because the Id should be generated by Dem itself
                            to prevent gaps and multiple use of an Id.&lt;/p&gt;

                            &lt;p&gt;The storage condition Ids should be sequentially ordered beginning with 0
                            and no gaps in between.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Storage Condition Id"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="37fce3e1-7c61-46bb-aa36-af9cdd1116e8"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:integer(node:pos(..))"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=255"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst 
                                  false="The Storage Condition Ids must be unique." 
                                  expr="text:uniq(../../eb-list::*/DemStorageConditionId, .)"/>
                          <mt:tst 
                                  true="The Storage Condition Ids must be zero-based and consecutive." 
                                  expr=". &gt;= count(../../eb-list::*)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                    <v:var name="DemStorageConditionStatus" type="BOOLEAN">
                      <a:a name="COLUMN_TITLE" value="Initial Status"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;Defines the initial status for enable or disable of storage of a
                            diagnostic event.&lt;/p&gt;

                            &lt;p&gt;The value is the initialization after power up (before this
                            condition is reported the first time).&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: storage of a diagnostic event enabled&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: storage of a diagnostic event disabled&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Initial Storage Condition Status"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="bfbb669d-6b58-440d-a9ef-535d0ce8c78a"/>
                      <a:da name="DEFAULT" value="true"/>
                      <a:da name="EDITABLE" value="false"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="DemStorageConditionGroup" type="MAP">
                  <a:a name="LABEL" value="Storage Condition Group List"/>
                  <a:a name="ROWS" value="6"/>
                  <a:a name="TAB" value="Storage Conditions"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="MAX" value="255"/>
                  <v:ctr name="DemStorageConditionGroup" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This container contains the configuration (parameters) for storage
                          condition groups.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="REQUIRES-INDEX" value="false"/>
                    <a:a name="UUID" 
                         value="7f37029b-d195-4945-8470-a9071657c5c9"/>
                    <a:da name="TITLE" value="Storage Condition Group"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../../DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass[                                                                    node:refexists(DemStorageConditionGroupRef) and                                                                    as:name(as:ref(DemStorageConditionGroupRef)) = as:name(node:current())]                                         ) = 0" 
                          true="Suboptimal configuration: This Storage Condition Group is not used by any event."/>
                    <v:lst name="DemStorageConditionRef">
                      <a:a name="LABEL" value="Dem Storage Condition List"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="DemStorageConditionRef" type="REFERENCE">
                        <a:a name="COLUMN_TITLE" value="Dem Storage Condition"/>
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;References a storage condition.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Dem Storage Condition"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="REQUIRES-INDEX" value="false"/>
                        <a:a name="UUID" 
                             value="c1c22f9d-ddbb-4055-b5ec-0cc4748d4470"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Invalid reference."/>
                          <a:tst expr="text:uniq(../eb-list::*, .)" 
                                 false="The Dem Storage Condition Reference must be unique."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemStorageCondition"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
                <v:var name="DemReportBSWEventsViaSetEventStatus" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This configuration switch defines if the BSW events shall be reported
                        via the Dem_SetEventStatus() API or not.&lt;/p&gt;

                        &lt;p&gt;Range
                          &lt;ul&gt;
                            &lt;li&gt;true:  The BSW events shall be reported via the Dem_SetEventStatus()
                                       API.
                            &lt;/li&gt;
                            &lt;li&gt;false: The BSW events shall be reported via the Dem_ReportErrorStatus()
                                       API and not via the Dem_SetEventStatus() API.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;

                        &lt;p&gt;Dependency on parameter(s):&lt;br/&gt;
                        To enable this configuration parameter:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;There must be at least one event with a configued DemEventKind as &lt;code&gt;DEM_EVENT_KIND_BSW&lt;/code&gt;.&lt;/li&gt;
                        &lt;/ul&gt;

                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Report BSW Events Via Dem_SetEventStatus()"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(count(as:modconf(&apos;Dem&apos;)[1]/DemConfigSet/*/DemEventParameter/*[(DemEventKind = &apos;DEM_EVENT_KIND_BSW&apos;)]) != 0)"/>
                </v:var>
              </v:ctr>
              <v:ctr name="DemDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="DemDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module Dem.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../DemGeneral/DemDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DemPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module Dem.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DemDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DemDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DemGeneral/DemDevErrorDetect = &apos;true&apos;) and (../DemDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DemPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module Dem.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DemDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DemDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DemGeneral/DemDevErrorDetect = &apos;true&apos;) and (../DemDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DemStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module Dem.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DemDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DemDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DemGeneral/DemDevErrorDetect = &apos;true&apos;) and (../DemDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DemUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module Dem.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DemDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DemDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DemGeneral/DemDevErrorDetect = &apos;true&apos;) and (../DemDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DemInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module Dem.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DemDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DemDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DemGeneral/DemDevErrorDetect = &apos;true&apos;) and (../DemDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Dem"/>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
