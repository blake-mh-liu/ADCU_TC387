<?xml version="1.0" encoding="ISO-8859-1"?>
[!AUTOSPACING!][!//
[!INCLUDE "../../generate_common/Dem_Include.m"!]
[!VAR "NumberIndicatorAttribute" = "count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*/DemEventClass/DemIndicatorAttribute/eb-list::*)"!][!//
[!CALL "CREATE_DTCCLASS_LIST_FROM_EVENTS"!][!//
[!IF "DemGeneral/DemEventCombinationSupport = 'DEM_EVCOMB_TYPE1'"!][!//
  [!CALL "CALC_DESCRIPTION", "Array" = "$DTCDescStr"!][!//
[!ENDIF!][!//
[!CALL "CALC_DESCRIPTION", "Array" = "$EventDescStr"!][!//
[!CALL "CALCULATE_MULTICORE_SETTINGS"!][!//
[!IF "$CalibrationSupport = 'true'"!][!//
  [!CALL "DEBOUNCE_COUNTER_GET_CLASS_COUNT"!][!//
  [!CALL "DEBOUNCE_TIME_GET_CLASS_COUNT"!][!//
  [!CALL "GET_NUMBER_RG_EVENTS"!]
  [!IF "node:existsAndTrue(as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementSupport)"!]
    [!CALL "GET_NUMBER_OF_EVENT_PRIORITIES"!][!//
  [!ENDIF!]
  [!CALL "GET_NUMBER_OF_INDICATOR_CLASSES_WITH_DEMMAXNUMBERINDICATORCLASSES"!][!//
[!ENDIF!]

<AUTOSAR xmlns="http://autosar.org/schema/r4.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://autosar.org/schema/r4.0 AUTOSAR_4-1-3.xsd">
  <AR-PACKAGES>
    <AR-PACKAGE>
      <SHORT-NAME>AUTOSAR_Dem</SHORT-NAME>
      <AR-PACKAGES>
        <AR-PACKAGE>
          <SHORT-NAME>CompuMethods</SHORT-NAME>
          <ELEMENTS>
[!IF "$CalibrationSupport = 'true'"!]
  [!VAR "OBDSupport" = "node:value('DemGeneral/DemOBDSupport')"!]
  [!VAR "FreezeFrameRecordCapture" = "node:value('DemGeneral/DemFreezeFrameCapture')"!]
  [!IF "($OBDSupport = 'true') or ($FreezeFrameRecordCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD')"!][!//
            <COMPU-METHOD>
              <SHORT-NAME>CM_MinRatioEvent</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_MIN_RATIO_EVENT_FALSE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_MIN_RATIO_EVENT_TRUE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_FreezeFrameUpdate</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_FREEZE_FRAME_UPDATE_FALSE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_FREEZE_FRAME_UPDATE_TRUE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
  [!ENDIF!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemDTCSeverity</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_SEV_NO_SEVERITY</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_SEV_MAINTENANCE_ONLY</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">2</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">2</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_SEV_CHECK_AT_NEXT_HALT</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">3</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">3</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_SEV_IMMEDIATELY</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
  [!IF "$OBDSupport = 'true'"!]
    [!IF "((node:exists(DemGeneral/DemObdVariant)) and (DemGeneral/DemObdVariant = 'DEM_OBD_VARIANT_OBD_CLASSIC')) and
      (not(node:exists(DemGeneral/DemCalloutObdVariantFnc))) and
      (DemGeneral/DemReadinessGroupCalibrationConfigKind = 'DEM_NUMBER_OF_SLOTS_COMMON_CONFIG')"!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemOBDEngineType</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_IGNITION_SPARK</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_IGNITION_COMPRESSION</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
    [!ENDIF!]
    [!IF "$DTCClassAvailable = 'true'"!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemWWHOBDDTCClass</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_WWHOBD_CLASS_UNSUPPORTED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_WWHOBD_CLASS_NOCLASS</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">2</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">2</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_WWHOBD_CLASS_A</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">3</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">3</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_WWHOBD_CLASS_B1</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">4</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">4</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_WWHOBD_CLASS_B2</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">5</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">5</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DTC_WWHOBD_CLASS_C</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
    [!ENDIF!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemOBDForceMisfireMonitoringReady</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_FORCE_MISFIRE_MONITORING_READY_TRUE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_FORCE_MISFIRE_MONITORING_READY_FALSE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemOBDForceFuelSysMonitoringReady</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_FORCE_FUEL_SYS_MONITORING_READY_TRUE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_FORCE_FUEL_SYS_MONITORING_READY_FALSE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemOBDForceCCMonitoringReady</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_FORCE_CC_MONITORING_READY_TRUE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_FORCE_CC_MONITORING_READY_FALSE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemOBDSetCCMenabled</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_SET_CCM_DISABLED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_OBD_SET_CCM_ENABLED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
  [!ENDIF!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemEventEnabled</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_EVENT_AVAILABILITY_DISABLED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_EVENT_AVAILABILITY_ENABLED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_OperationCycle</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
  [!VAR "CycCtr" = "0"!]
  [!LOOP "DemGeneral/DemOperationCycle/eb-list::*"!]
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($CycCtr)"!]</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($CycCtr)"!]</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>[!"as:name(.)"!]</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
    [!VAR "CycCtr" = "$CycCtr + 1"!]
  [!ENDLOOP!]
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemIndicatorClassEnabled</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATORCLASS_DISABLED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATORCLASS_ENABLED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemIndicatorClassBehaviour</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATOR_OFF</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATOR_CONTINUOUS</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">2</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">2</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATOR_BLINKING</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">3</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">3</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATOR_BLINK_CONT</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">4</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">4</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATOR_SLOW_FLASH</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">5</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">5</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_INDICATOR_FAST_FLASH</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
  [!IF "$AgingAllowedSeperateFlag = 'true'"!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemAgingAllowed</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_AGING_ALLOWED_FALSE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_AGING_ALLOWED_TRUE</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
  [!ENDIF!]
  [!IF "$DebounceCounterClassCount > 0"!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_DemDebounceCounterJumpActiviationMethod</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DEBOUNCECOUNTER_JUMPMETHOD_DEACTIVATED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DEM_DEBOUNCECOUNTER_JUMPMETHOD_ACTIVATED</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
  [!ENDIF!]
[!ENDIF!]
          </ELEMENTS>
        </AR-PACKAGE>
        <AR-PACKAGE>
          <SHORT-NAME>DataConstrs</SHORT-NAME>
          <ELEMENTS>
[!IF "$CalibrationSupport = 'true'"!]
  [!IF "$DebounceTimeClassCount > 0"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DebounceTimeClassIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($DebounceTimeClassCount - 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemUdsDTC</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0x00000000</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0x00FFFFFF</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!IF "$ObdUdsDtcSeparationSupport = 'true'"!][!//
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDtcValue3Byte</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0x00000000</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0x00FFFEFF</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
  [!IF "(num:integer($EventFailureClassIdx) > 0)"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_EventFailureCycleCounterThreshold</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">254</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
    [!IF "($CalibrationWithEvCombSupport = 'true')"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_EventFailureClassIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($EventFailureClassIdx)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
    [!ENDIF!]
  [!ENDIF!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemFFClassIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(bit:shl(1,$CalFFClassIdxWidth)-1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!IF "$CalibrationWithoutEvCombSupport = 'true'"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemEventClassIndex</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(bit:shl(1,$CalEventClassWidth)-1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDTCFunctionalUnit</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(bit:shl(1,$CalFunctionalUnitWidth)-1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!IF "node:existsAndTrue(as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementSupport)"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_EventPriorityIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($NumberOfPriorities - 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_IndicatorClassIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($NumberOfIndicatorClasses + 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!IF "$NumberOfIndicatorClasses > 0"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_IndicatorId</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(count(DemGeneral/DemIndicator/eb-list::*) - 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_HealingCycleThreshold</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
  [!IF "(DemGeneral/DemFreezeFrameCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD') or
      (DemGeneral/DemExtendedDataCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD')"!]
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
  [!ELSE!]
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
  [!ENDIF!]
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">255</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!IF "$DebounceCounterClassCount > 0"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DebounceCounterClassIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($DebounceCounterClassCount - 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDebounceCounterDecrementStepSize</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">32768</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDebounceCounterIncrementStepSize</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">32767</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDebounceCounterPassedThreshold</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">-32768</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">-1</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDebounceCounterFailedThreshold</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">32767</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDebounceCounterUnconfirmedThreshold</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">32767</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemValidEventIdRange</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($NumberOfConfiguredDemEvents)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!IF "$EventIdSlots > 0"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemAllEventIdRange</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($NumberOfConfiguredDemEvents)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
  [!IF "(node:refexists(DemGeneral/DemCommonFFDataClassRef)) or
      (node:existsAndTrue(DemGeneral/DemDevFreezeFrameSupport))"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_DemDevFFClassIdx</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($NumFFCls)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
  [!IF "node:exists(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:existsAndTrue(DemEventClass/DemAgingAllowed)])"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_AgingCycleThreshold</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(bit:shl(1,$CalAgingCycleIdWidth)-1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
  [!IF "node:exists(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:exists(DemEventClass/DemEnableConditionGroupRef)])"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_EnableConditionGroup</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($DemNumEnCondGroups)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
  [!ENDIF!]
[!ENDIF!]
          </ELEMENTS>
        </AR-PACKAGE>
        <AR-PACKAGE>
          <SHORT-NAME>BswModuleDescriptions</SHORT-NAME>
          <ELEMENTS>
            <BSW-MODULE-DESCRIPTION>
              <SHORT-NAME>Dem</SHORT-NAME>
              <MODULE-ID>54</MODULE-ID>
              <PROVIDED-ENTRYS>
                <BSW-MODULE-ENTRY-REF-CONDITIONAL>
                  <BSW-MODULE-ENTRY-REF DEST="BSW-MODULE-ENTRY">/AUTOSAR_Dem/BswModuleEntrys/Dem_MainFunction</BSW-MODULE-ENTRY-REF>
                </BSW-MODULE-ENTRY-REF-CONDITIONAL>
              </PROVIDED-ENTRYS>
              <INTERNAL-BEHAVIORS>
                <!-- BSW Internal Behaviour of the Master Dem instance -->
                <BSW-INTERNAL-BEHAVIOR>
                  <SHORT-NAME>InternalBehavior_[!"$MasterCoreId"!]</SHORT-NAME>
                  <ENTITYS>
                    <BSW-SCHEDULABLE-ENTITY>
                      <SHORT-NAME>Dem_MainFunction</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0.0</MINIMUM-START-INTERVAL>
                      <IMPLEMENTED-ENTRY-REF DEST="BSW-MODULE-ENTRY">/AUTOSAR_Dem/BswModuleEntrys/Dem_MainFunction</IMPLEMENTED-ENTRY-REF>
                    </BSW-SCHEDULABLE-ENTITY>
                  </ENTITYS>
                  <EVENTS>
                    <BSW-TIMING-EVENT>
                      <SHORT-NAME>TimingEvent_MainFunction</SHORT-NAME>
                      <STARTS-ON-EVENT-REF DEST="BSW-SCHEDULABLE-ENTITY">/AUTOSAR_Dem/BswModuleDescriptions/Dem/InternalBehavior_[!"$MasterCoreId"!]/Dem_MainFunction</STARTS-ON-EVENT-REF>
                      <PERIOD>[!"DemGeneral/DemTaskTime"!]</PERIOD>
                    </BSW-TIMING-EVENT>
                  </EVENTS>
                </BSW-INTERNAL-BEHAVIOR>
              </INTERNAL-BEHAVIORS>
            </BSW-MODULE-DESCRIPTION>
          </ELEMENTS>
        </AR-PACKAGE>
        <AR-PACKAGE>
          <SHORT-NAME>BswModuleEntrys</SHORT-NAME>
          <ELEMENTS>
            <BSW-MODULE-ENTRY>
              <SHORT-NAME>Dem_MainFunction</SHORT-NAME>
              <!-- ADMIN-DATA For ACG-6 compatibility -->
              <ADMIN-DATA>
                <SDGS>
                  <SDG GID="EB:DnT">
                    <SD GID="FunctionGroup">Extern</SD>
                    <SD GID="EnableTracing">false</SD>
                  </SDG>
                </SDGS>
              </ADMIN-DATA>
              <SERVICE-ID>85</SERVICE-ID>
              <IS-REENTRANT>false</IS-REENTRANT>
              <IS-SYNCHRONOUS>true</IS-SYNCHRONOUS>
              <CALL-TYPE>SCHEDULED</CALL-TYPE>
              <EXECUTION-CONTEXT>TASK</EXECUTION-CONTEXT>
              <SW-SERVICE-IMPL-POLICY>STANDARD</SW-SERVICE-IMPL-POLICY>
              <ARGUMENTS>
              </ARGUMENTS>
            </BSW-MODULE-ENTRY>
          </ELEMENTS>
        </AR-PACKAGE>
      </AR-PACKAGES>
    </AR-PACKAGE>
    <AR-PACKAGE>
      <SHORT-NAME>EB_Dem</SHORT-NAME>
      <AR-PACKAGES>
        <AR-PACKAGE>
          <SHORT-NAME>Implementations</SHORT-NAME>
          <ELEMENTS>
            <BSW-IMPLEMENTATION>
              <SHORT-NAME>BswImplementation_[!"$MasterCoreId"!]</SHORT-NAME>
              <CODE-DESCRIPTORS>
                <CODE>
                  <SHORT-NAME>Files</SHORT-NAME>
                  <ARTIFACT-DESCRIPTORS>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_BSW_Types.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_Int.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_Int_Stc.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_NvMCbk.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_Stc.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_Trace.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_Types.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::include::Dem_Version.h</SHORT-LABEL>
                      <CATEGORY>SWHDR</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_Core.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_DcmIfAccess.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_DcmIfFFandED.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_DcmIfOBD.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_DcmIfStatusInfo.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_J1939Dcm.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>Autosar::src::Dem_J1939FF.c</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>make::Dem_defs.mak</SHORT-LABEL>
                      <CATEGORY>SWMAKE</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>make::Dem_rules.mak</SHORT-LABEL>
                      <CATEGORY>SWMAKE</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                  </ARTIFACT-DESCRIPTORS>
                </CODE>
              </CODE-DESCRIPTORS>
              <MC-SUPPORT>
                <MC-PARAMETER-INSTANCES>
[!IF "$CalibrationSupport = 'true'"!]
  [!/*  - Generate calibration data independent of DemEventCombination - */!][!//
  [!/* NumberOfIndicatorClasses shall be increamented by 1 to also inlcude
       maximum value (DEM_NUM_INDICATOR_GROUPS) for disabling an indicator */!][!//
  [!IF "($NumberOfIndicatorClasses + 1) < 256"!]
    [!VAR "DemIndicatorGrpIdxType" = "'uint8'"!]
  [!ELSEIF "($NumberOfIndicatorClasses + 1) < 65536"!]
    [!VAR "DemIndicatorGrpIdxType" = "'uint16'"!]
  [!ELSE!]
    [!VAR "DemIndicatorGrpIdxType" = "'uint32'"!]
  [!ENDIF!]
  [!IF "$NumberOfIndicatorClasses > 0"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_IndicatorClasses</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i($NumIndicatorLinks)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!VAR "ClassIndex" = "0"!]
    [!VAR "LinkIndex" = "0"!]
    [!LOOP "text:split($IndicatorClassList, '#')"!]
      [!VAR "SubClassIndex" = "0"!]
      [!VAR "NumSubClasses" = "count(text:split(., '+'))"!]
      [!LOOP "text:split(., '+')"!]
                      <MC-DATA-INSTANCE>
        [!IF "$NumSubClasses = 1"!]
                        <SHORT-NAME>IndicatorClasses_[!"num:i($ClassIndex)"!]</SHORT-NAME>
        [!ELSE!]
                        <SHORT-NAME>IndicatorClasses_[!"num:i($ClassIndex)"!]_[!"num:i($SubClassIndex)"!]</SHORT-NAME>
        [!ENDIF!]
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>Enabled</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Enabled state of the Indicator class.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/boolean</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemIndicatorClassEnabled</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/boolean</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Enabled</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>IndicatorId</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Id of the indicator referenced by Indicator class. If MIL indicator is referenced then the ObdDTC of the respective event shall be enabled.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_IndicatorId</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>IndicatorId</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>Behaviour</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Behaviour of the Indicator class.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemIndicatorClassBehaviour</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Behaviour</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>HealingCycleThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                HealingCycleThreshold of Indicator class. Calibration of this value is only allowed before Dem_PreInit() is called. If the threshold will be re-calibrated the effect will be considered at the next processing and not during initialization.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_HealingCycleThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>HealingCycleThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>FailureCycleThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                FailureCycleThreshold of Indicator class. Calibration of this value is only allowed before Dem_PreInit() is called. If the threshold will be re-calibrated the effect will be considered at the next processing and not during initialization.
                                <!--Range is limited to 0..255. For rationale see deviation "Fault
                                Confirmation and Warning Indicator behavior". Value 0 is only limited
                                to the MIL of events assigned to a driving cycle i.e. Zero-trip events.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>FailureCycleThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
        [!IF "$CommonOperationCycleEnabled = 'false'"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>HealingCycle</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                OperationCycle type used as HealingCycle for the Indicator class. It has to reference a configured operation cycle.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_OperationCycle</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>HealingCycle</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>FailureCycle</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                OperationCycle type used as FailureCycle for the Indicator class. It has to reference a configured operation cycle.
                                <!-- If parameter DemIndicatorFailureCycleSource is set to
                                DEM_FAILURE_CYCLE_EVENT then FailureCycle is disabled.
                                Range of allowed values is 0..254, as maximum operation cycles that
                                can be configured is limited to 255.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_OperationCycle</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>FailureCycle</SYMBOL>
                          </MC-DATA-INSTANCE>
        [!ENDIF!]
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($LinkIndex)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
        [!VAR "SubClassIndex" = "$SubClassIndex + 1"!]
        [!VAR "LinkIndex" = "$LinkIndex + 1"!]
      [!ENDLOOP!]
      [!VAR "ClassIndex" = "$ClassIndex + 1"!]
    [!ENDLOOP!]
    [!IF "$NumIndicatorLinks > $LinkIndex"!]
      [!FOR "DummyClassIndex" = "$LinkIndex" TO "$NumIndicatorLinks - 1"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>IndicatorClasses_[!"num:i($ClassIndex)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>Enabled</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Enabled state of the Indicator class (enabled == 1, disabled == 0).
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemIndicatorClassEnabled</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/boolean</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Enabled</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>IndicatorId</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Id of the indicator referenced by Indicator class. If MIL indicator is referenced then the ObdDTC of the respective event shall be enabled.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_IndicatorId</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>IndicatorId</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>Behaviour</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Behaviour of Indicator class has the range 0..3 corresponding to the indicator modes DEM_INDICATOR_OFF, DEM_INDICATOR_CONTINUOUS, DEM_INDICATOR_BLINKING and DEM_INDICATOR_BLINK_CONT.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemIndicatorClassBehaviour</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Behaviour</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>HealingCycleThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                HealingCycleThreshold of Indicator class. Calibration of this value is only allowed before Dem_PreInit() is called. If the threshold will be re-calibrated the effect will be considered at the next processing and not during initialization.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_HealingCycleThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>HealingCycleThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>FailureCycleThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                FailureCycleThreshold of Indicator class. Calibration of this value is only allowed before Dem_PreInit() is called. If the threshold will be re-calibrated the effect will be considered at the next processing and not during initialization.
                                <!--Range is limited to 0..255. For rationale see deviation "Fault
                                Confirmation and Warning Indicator behavior". Value 0 is only limited
                                to the MIL of events assigned to a driving cycle i.e. Zero-trip events.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>FailureCycleThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
        [!IF "$CommonOperationCycleEnabled = 'false'"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>HealingCycle</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                OperationCycle type used as HealingCycle for the Indicator class. It has to reference a configured operation cycle.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_OperationCycle</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>HealingCycle</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>FailureCycle</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                OperationCycle type used as FailureCycle for the Indicator class. It has to reference a configured operation cycle.
                                <!-- If parameter DemIndicatorFailureCycleSource is set to
                                DEM_FAILURE_CYCLE_EVENT then FailureCycle is disabled.
                                Range of allowed values is 0..254, as maximum operation cycles that
                                can be configured is limited to 255.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_OperationCycle</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>FailureCycle</SYMBOL>
                          </MC-DATA-INSTANCE>
        [!ENDIF!]
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($DummyClassIndex)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
        [!VAR "ClassIndex" = "$ClassIndex + 1"!]
      [!ENDFOR!]
    [!ENDIF!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_IndicatorClasses</SYMBOL>
                  </MC-DATA-INSTANCE>
  [!ENDIF!]

  [!IF "$EventIdSlots > 0"!]
    [!CALL "CREATE_READINESSGROUPS_CONFIG_LIST"!]
                  <!-- !LINKSTO VCC_DEM_006_Req102v1,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_OBDReadinessGroup</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
    [!IF "node:exists(DemGeneral/DemMaxNumEventsPerReadinessGroup)
          and (DemGeneral/DemGeneralOBD/DemOBDEngineType = 'DEM_IGNITION_COMPRESSION')"!][!//
                    <!-- !LINKSTO dsn.Dem.Calibration.ReadinessGroup.UNUSED,1 -->
                    <ARRAY-SIZE>[!"num:integer($EventIdSlots - (2 * (DemGeneral/DemMaxNumEventsPerReadinessGroup)))"!]</ARRAY-SIZE>
    [!ELSE!]
                    <ARRAY-SIZE>[!"$EventIdSlots"!]</ARRAY-SIZE>
    [!ENDIF!][!//
                    <SUB-ELEMENTS>
    [!VAR "ReadinessEventSlotNumber" = "0"!]
    [!LOOP "text:split($ReadinessGroupsConfigList, '#')"!][!//
      [!VAR "GroupName" = "text:split(., ':')[position() = 2]"!][!//
      [!IF "starts-with($GroupName, 'UNUSED')"!][!//
        [!VAR "RGName" = "$GroupName"!]
      [!ELSE!]
        [!VAR "RGName" = "concat('DEM_OBD_RDY_',$GroupName)"!]
      [!ENDIF!][!//
      [!VAR "MaxNumEventsInRG" = "text:split(., ':')[position() = 3]"!][!//
      [!VAR "GroupCounter" = "0"!]
      [!FOR "GroupCounter" = "0" TO "$MaxNumEventsInRG - 1"!]
        [!IF "not(starts-with($RGName, 'UNUSED'))"!][!//
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"$RGName"!]_Slot_[!"$GroupCounter"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Event of slot [!"$GroupCounter"!] from [!"$MaxNumEventsInRG"!] slots for Readiness Group [!"$RGName"!]. The event can be assigned to multiple groups.
                            <!--Being an EventId the calibrated value must be within the DemEventId limits.
          [!IF "((node:exists(DemGeneral/DemObdVariant)) and (DemGeneral/DemObdVariant = 'DEM_OBD_VARIANT_OBDONUDS')) or
                (node:exists(DemGeneral/DemCalloutObdVariantFnc)) or
                (DemGeneral/DemReadinessGroupCalibrationConfigKind = 'DEM_NUMBER_OF_SLOTS_INDIVIDUAL_CONFIG')"!]
                            Only master events can be calibrated if event combination is enabled.
                            The calibration of this array is only allowed before Dem_Init() is called. If it is re-calibrated, the reports w.r.t. events assigned to readiness group NONE will be synchronized with the calibrated values only after the Dem re-initialization.
          [!ENDIF!]            -->
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemAllEventIdRange</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:integer($ReadinessEventSlotNumber)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
        [!ENDIF!]
        [!VAR "ReadinessEventSlotNumber" = "$ReadinessEventSlotNumber + 1"!][!//
      [!ENDFOR!]
    [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_OBDReadinessGroup</SYMBOL>
                  </MC-DATA-INSTANCE>
  [!ENDIF!]

  <!-- !LINKSTO Dem.Calibration.DebounceCounterBased,1 -->
  [!IF "$DebounceCounterClassCount > 0"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_DebounceCounterClassIdx</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i(count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceCounterBased']))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!IF "$DebounceCounterClassCount <= 127"!]
      [!VAR "BitWidth" = "7"!]
      [!VAR "Type" = "'uint8'"!]
    [!ELSE!]
      [!VAR "BitWidth" = "15"!]
      [!VAR "Type" = "'uint16'"!]
    [!ENDIF!]
    [!VAR "Index" = "0"!]
    [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceCounterBased'], 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Debounce counter based class index must be in range of 0 to [!"$DebounceCounterClassCount - 1"!]. Depending on configuration, a maximum value of 32767, displayable on 15 bits can be referenced.
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/[!"$Type"!]</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                                <BIT-POSITION>0</BIT-POSITION>
                                <NUMBER-OF-BITS>[!"num:i($BitWidth)"!]</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DebounceCounterClassIdx</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!VAR "Index" = "$Index + 1"!]
    [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_DebounceCounterClassIdx</SYMBOL>
                  </MC-DATA-INSTANCE>


                  <MC-DATA-INSTANCE>
                    <!-- !LINKSTO VCC_DEM_006_Req105v1,1 -->
                    <SHORT-NAME>Dem_DebounceCounterClass</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i($DebounceCounterClassCount)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!VAR "DebounceIdx" = "0"!]
    [!FOR "DebounceCtrIndex" = "0" TO "$DebounceCounterClassCount - 1"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemDebounceCounterBasedClass_[!"num:i($DebounceIdx)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterDecrementStepSize</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Defines the step size for decrementing the internal fault detection counter (PREPASSED).
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDebounceCounterDecrementStepSize</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>CountDecStepSize</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterIncrementStepSize</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Defines the step size for incrementing the internal fault detection counter (PREFAILED).
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDebounceCounterIncrementStepSize</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>CountIncStepSize</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterPassedThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Defines the value of the internal fault detection counter, which indicates the passed status.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDebounceCounterPassedThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>CounterPassedThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterFailedThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Defines the value of the internal fault detection counter, which indicates the failed status.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDebounceCounterFailedThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>CounterFailedThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!IF "(DemGeneral/DemFreezeFrameCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD') or
            (DemGeneral/DemExtendedDataCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD')"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterUnconfirmedThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Value of internal fault detection counter, which indicates unconfirmedDTC status. In case unconfirmedDTC threshold is set to be same as failed threshold, the unconfirmedDTC threshold is deactivated for this event.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDebounceCounterUnconfirmedThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>CounterUnconfirmedThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterJumpDownValue</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Jump-Down value of the internal fault detection counter. Range is -32768..32767.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/sint16</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>JumpDownValue</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterJumpUpValue</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Jump-Up value of the internal fault detection counter. Range is -32768..32767.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/sint16</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>JumpUpValue</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterJumpDown</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Switch for the activation of Jump-Down.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/boolean</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemDebounceCounterJumpActiviationMethod</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/boolean</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>JumpDown</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDebounceCounterJumpUp</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Switch for the activation of Jump-Up.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/boolean</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemDebounceCounterJumpActiviationMethod</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/boolean</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>JumpUp</SYMBOL>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($DebounceIdx)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!VAR "DebounceIdx" = "$DebounceIdx + 1"!]
    [!ENDFOR!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_DebounceCounterClass</SYMBOL>
                  </MC-DATA-INSTANCE>
  [!ENDIF!]

  <!-- !LINKSTO Dem.Calibration.DemTimeBasedDebounceClassConcept.arxml,1 -->
  [!IF "$DebounceTimeClassCount > 0"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_DebounceTimeClassIdx</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i(count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceTimeBase']))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!IF "$DebounceTimeClassCount <= 255"!]
      [!VAR "BitWidth" = "8"!]
      [!VAR "Type" = "'uint8'"!]
    [!ELSE!]
      [!VAR "BitWidth" = "16"!]
      [!VAR "Type" = "'uint16'"!]
    [!ENDIF!]
    [!VAR "Index" = "0"!]
    [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceTimeBase'], './DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">Debounce Time based class index.</L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/[!"$Type"!]</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DebounceTimeClassIdx</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!VAR "Index" = "$Index + 1"!]
    [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_DebounceTimeClassIdx</SYMBOL>
                  </MC-DATA-INSTANCE>

                  <MC-DATA-INSTANCE>

                    <SHORT-NAME>Dem_DebounceTimeClass</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i($DebounceTimeClassCount)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!VAR "TimeDebounceIdx" = "0"!]
    [!FOR "TimeDebounceCtrIndex" = "0" TO "$DebounceTimeClassCount - 1"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemDebounceTimeBasedClass_[!"num:i($TimeDebounceIdx)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>TimeFailedThreshold</SHORT-NAME>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint32</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>TimeFailedThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>TimePassedThreshold</SHORT-NAME>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint32</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>TimePassedThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($TimeDebounceIdx)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!VAR "TimeDebounceIdx" = "$TimeDebounceIdx + 1"!]
    [!ENDFOR!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_DebounceTimeClass</SYMBOL>
                  </MC-DATA-INSTANCE>
  [!ENDIF!]

  <!-- !LINKSTO VCC_DEM_006_Req104v1,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventEnabled</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i((count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*) + 1 + 7) div 8)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
  [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*, 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>EventAvailable_[!"num:i(DemEventId)"!]</SHORT-NAME>
                          <DESC>
                            <L-2 L="EN">
                              Availability of event (1 means enabled, 0 means disabled). Calibration of this value is only allowed before Dem_PreInit() is called.
                              <!--If the event which provides the OBD freeze frame is disabled
                              the OBD freeze frame will not be updated and no OBD freeze frame will
                              be provided to the Dcm. If an event which is stored in event memory is
                              disabled the event memory entry is not available anymore. The Dem
                              NvM-blocks has to be invalidated after re-calibration is performed
                              (in order to avoid data inconsistency). If the event stored in event
                              memory is also combined, disabling it could lead to an inconsistent UDS
                              DTC status and shall be avoided at any case. For service 0x19, if the DTC
                              referenced by the event ID is identified by the algorithm, the value
                              of the DTC will be returned. In case calibration occurs with 0 for the
                              event ID and the service is called again, the DTC referenced by the
                              disabled event is identified by the algorithm, the DTC returned by the
                              service is DEM_NO_DTC. If re-calibration is performed during Dem
                              processing or without invalidation of outdated Dem NvM-blocks the Dem
                              behavior is undefined (can lead e.g. to segmentation faults in the
                              worst case).-->
                            </L-2>
                          </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                                <BIT-POSITION>[!"num:i(DemEventId mod 8)"!]</BIT-POSITION>
                                <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemEventEnabled</COMPU-METHOD-REF>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i(DemEventId div 8)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
  [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_EventEnabled</SYMBOL>
                  </MC-DATA-INSTANCE>

  [!/*  - Generate calibration data for DEM_EVCOMB_DISABLED - */!][!//
  [!IF "$CalibrationWithoutEvCombSupport = 'true'"!]
    [!IF "node:existsAndTrue(DemGeneral/DemDevFreezeFrameSupport)"!]
                  <!-- !LINKSTO Dem.Calibration.IndividualDevFF,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventDescDevFF</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*) + 1)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
      [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*, 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DevFreezeFrames_[!"num:i(DemEventId)"!]</SHORT-NAME>
                        <CATEGORY>ARRAY</CATEGORY>
                        <ARRAY-SIZE>2</ARRAY-SIZE>
                        <SUB-ELEMENTS>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DevFF_A</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DevFFClassIdx</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Development Freeze Frame A class index (Event: [!"as:name(.)"!]). Value [!"num:i($NumFFCls)"!] is used to disable.
                                    <!--Ranges between 0 and [!"$NumFFCls"!] defined as number of
                                    configured DemFreezeFrameClasses.
                                    Values bigger than [!"$NumFFCls"!] are not allowed.
                                    It is not allowed to calibrate freeze frames that are larger than
                                    the largest freeze frame referenced via DemDevFreezeFrameAClassRef.
                                    Note: Development freeze frame data must not include data elements with
                                    parameter DemDataElementCaptureTrigger configured to
                                    DEM_TRIGGER_ON_DEQUALIFICATION.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDevFFClassIdx</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>DevFFClassIdx</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                            <SYMBOL>[0]</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DevFF_B</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DevFFClassIdx</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Development Freeze Frame B class index (Event: [!"as:name(.)"!]).
                                    <!--Ranges between 0 and [!"$NumFFCls"!] defined as number of
                                    configured DemFreezeFrameClasses. Calibrating this class index to the value
                                    [!"$NumFFCls"!] will disable the DevFF_B functionality.
                                    Values bigger than [!"$NumFFCls"!] are not allowed.
                                    It is not allowed to calibrate freeze frames that are larger than
                                    the largest freeze frame referenced via DemDevFreezeFrameBClassRef.
                                    Note: Development freeze frame data must not include data elements with
                                    parameter DemDataElementCaptureTrigger configured to
                                    DEM_TRIGGER_ON_DEQUALIFICATION.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDevFFClassIdx</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>DevFFClassIdx</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                            <SYMBOL>[1]</SYMBOL>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"DemEventId"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_EventDescDevFF</SYMBOL>
                  </MC-DATA-INSTANCE>
    [!ENDIF!]

    [!IF "(node:refexists(DemGeneral/DemCommonFFDataClassRef)) or
        ( (node:existsAndTrue(DemGeneral/DemDevFreezeFrameSupport)) and
            (node:refexists(DemGeneral/DemCommonFFDataDevAClassRef)) )"!]
                  <!-- !LINKSTO Dem.Calibration.CommonFF,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_CommonPartFFClassIdx</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>2</ARRAY-SIZE>
                    <SUB-ELEMENTS>
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>Common_DevFF_A_Class_Index</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Class index of the common freeze frame part of DevFF_A.
                            <!-- Ranges between 0 and [!"$NumFFCls"!] defined as number of configured
                            DemFreezeFrameClasses.Calibrating this class index to the value [!"$NumFFCls"!]
                            will disable the common freeze frame part of development freeze
                            frame A functionality. Values bigger than [!"$NumFFCls"!] are not allowed.
                            Note: The common freeze frame data must not include data elements with
                            parameter DemDataElementCaptureTrigger configured to
                            DEM_TRIGGER_ON_DEQUALIFICATION.-->
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDevFFClassIdx</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[0]</SYMBOL>
                      </MC-DATA-INSTANCE>
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>Common_RegularFF_Class_Index</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Class index of the common freeze frame part of regular freeze frame.
                            <!-- Calibrating this class index to the value [!"$NumFFCls"!] will
                            disable the common freeze frame part of regular freeze frame functionality.
                            Ranges between 0 and [!"$NumFFCls"!] defined as number of configured
                            DemFreezeFrameClasses. Values bigger than [!"$NumFFCls"!] are not allowed.
                            Note: The common freeze frame shall not be changed via calibration, when
                            events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV' are configured.
                            Note: The common freeze frame data must not include data elements with
                            parameter DemDataElementCaptureTrigger configured to
                            DEM_TRIGGER_ON_DEQUALIFICATION.-->
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDevFFClassIdx</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[2]</SYMBOL>
                      </MC-DATA-INSTANCE>
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_CommonPartFFClassIdx</SYMBOL>
                  </MC-DATA-INSTANCE>
    [!ENDIF!]

    [!VAR "EnableConditionGroupNumber" = "num:integer(count(DemGeneral/DemEnableConditionGroup/eb-list::*))"!]
    [!CALL "GET_VCC_OCC5_USED"!][!//
    [!CALL "CREATE_EVENT_CLASS_LIST"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventClassDesc</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i($MaxNumberEventClasses)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!VAR "EventClassIdx" = "0"!]
    [!FOR "EmptyEventClassIdx" = "$EventClassIdx"  TO "$MaxNumberEventClasses - 1"!]
      [!VAR "EventClassString" = "."!]
                      <!-- !LINKSTO VCC_DEM_007_Req106v2,1 -->
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>EventClass_[!"num:i($EventClassIdx)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <!-- !LINKSTO VCC_DEM_006_Req108v1,1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>IndicatorClassIdx</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Allows calibration of indicator groups represented by Dem_IndicatorClasses.IndicatorClasses_x_y. Calibrate 'x' where 'x' denotes main group index and 'y' denotes group indicators. Single indicators are denoted by 'x' alone. Value [!"num:i($NumberOfIndicatorClasses + 1)"!] is used to disable.
                                <!--Notes for events assigned to a MIL group:
                                - If the MIL indicator is removed through calibration, the event is no longer
                                considered as member of the MIL group.
                                - If the calibration of the MIL indicator's class causes 'DemIndicatorFailureCycleRef'
                                or 'DemIndicatorFailureCycleCounterThreshold' to be different from 'DemOperationCycleRef'
                                or, respectively, 'DemEventFailureCycleCounterThreshold', the failure counters are not
                                in sync anymore. This could lead to undefined behavior at run-time.
                                - Calibration of the MIL indicator to a class with 'DemIndicatorFailureCycleCounterThreshold'
                                equal to 1 is not allowed.
                                Note for events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV':
                                No indicator may be assigned via calibration.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/[!"$DemIndicatorGrpIdxType"!]</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_IndicatorClassIdx</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>IndicatorClassIdx</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!IF "node:exists(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*[node:existsAndTrue(DemEventClass/DemAgingAllowed)])"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>AgingCycleCounterThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Value of DemAgingCycleCounterThreshold. Calibration of this value is only allowed before Dem_PreInit() is called. After re-calibration of aging support the stored event related data is not valid. Value 0 disables aging.
                                <!--Note that for events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV'
                                aging must not be enabled via calibration.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>AgingCycleCounterThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
      [!IF "$VccOcc5Used = 1"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>OBDAgingCycleCounterThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Value of DemOBDAgingCycleCounterThreshold. Calibration of this value is only allowed before Dem_PreInit() is called. If the threshold is re-calibrated the effect is considered at the next processing and not during initialization. Value 0 disables aging.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>OBDAgingCycleCounterThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
                          <!-- !LINKSTO Dem.Calibration.DemEventFailureCycleCounterThreshold.EventCombinationDisabled,1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EventFailureCycleCounterThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Value of DemEventFailureCycleCounterThreshold. Value 0 is only limited to events assigned to a driving cycle i.e. Zero-trip events. For MIL group events, the calibration of this parameter to value 1 is not allowed.
                                <!--Allowed calibration values are in the range 0..254.
                                If the 'DemEventFailureCycleCounterThreshold' of a MIL group event is changed
                                to be different from 'DemIndicatorFailureCycleCounterThreshold' configured
                                for its MIL indicator, the MIL counter and the confirmation counter would not
                                be in sync anymore. This could lead to undefined behavior during runtime.
                                Note:
                                - The calibrated threshold will be applied to all the events which belong to
                                  EventClass_[!"num:i($EventClassIdx)"!].-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_EventFailureCycleCounterThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>EventFailureCycleCounterThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EventPriority</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Internal value of configured event priority. Value 0 represents the highest priority and each value sequentially larger represents a lower priority in the ranking of all configured priorities.
                                <!--Dem does not store the configured DemEventPriority value directly, but creates an ordered
                                list of all configured unique DemEventPriority values in ascending priority value order to build
                                a ranking of configured priorities.
                                You calibrate the index into the list of configured event priorities. That means, it is not
                                possible to add new event priority values via calibration.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
      [!IF "(node:existsAndTrue(as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementSupport))"!]
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_EventPriorityIdx</DATA-CONSTR-REF>
      [!ELSE!]
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
      [!ENDIF!]
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>EventPriority</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!IF "$CommonOperationCycleEnabled = 'true'"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>CommonOperationCycle</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Common operation cycle is used as aging cycle, event failure cycle, indicator failure cycle and indicator healing cycle. It has to reference a configured operation cycle.
                                <!--Calibrating the common operation cycle of events assigned to the same MIL
                                group with different operation cycles could lead to
                                undefined behavior during runtime.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_OperationCycle</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>CommonOperationCycle</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
      [!IF "$AgingAllowedSeperateFlag = 'true'"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>AgingAllowed</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Parameter to enable/disable aging. Calibration of this value is only allowed before Dem_PreInit() is called. After re-calibration of aging allowed the stored event related data is not valid.
                                <!--Note that for events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV'
                                aging must not be enabled via calibration.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/boolean</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemAgingAllowed</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/boolean</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>AgingAllowed</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
      [!IF "($OBDSupport = 'true') or ($FreezeFrameRecordCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD')"!][!//
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>Bitfield</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">Collection of Boolean parameters per Event Class</L-2>
                            </DESC>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>MinRatioEvent</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Value 1 means DemMinRatioEvent == 'true' and value 0 implies that DemMinRatioEvent == 'false'.
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>0</BIT-POSITION>
                                        <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_MinRatioEvent</COMPU-METHOD-REF>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>Bitfield</SYMBOL>
                              </MC-DATA-INSTANCE>
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>FreezeFrameUpdate</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Value 1 means DemFreezeFrameUpdate == 'true' and value 0 implies that DemFreezeFrameUpdate == 'false'.
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>1</BIT-POSITION>
                                        <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_FreezeFrameUpdate</COMPU-METHOD-REF>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>Bitfield</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
      [!IF "$EnableConditionGroupNumber > 0"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EnableConditionGroupRef</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Reference to a configured enable condition group. Value [!"num:i($DemNumEnCondGroups)"!] is used to disable. Range is 0..[!"num:i($DemNumEnCondGroups)"!].
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>EnableConditionGroupRef</SYMBOL>
                          </MC-DATA-INSTANCE>
      [!ENDIF!]
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($EventClassIdx)"!]]</SYMBOL>
      [!VAR "EventClassIdx" = "$EventClassIdx + 1"!]
                      </MC-DATA-INSTANCE>
    [!ENDFOR!]
                    </SUB-ELEMENTS>
                      <SYMBOL>Dem_EventClassDesc</SYMBOL>
                  </MC-DATA-INSTANCE>

                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventDesc</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!VAR "Index" = "1"!]
    [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*, 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <!-- !LINKSTO dsn.Dem.Calibration.EvConf1.EventCombinationDisabled,1 -->
                          <!-- EvConf1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EvConf1</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <!-- !LINKSTO VCC_DEM_006_Req103v1,1 -->
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DemUdsDTC</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    UDS DTC value of the event (special case DTC 0: means DTC off; it is not allowed to have the same DTC value for more than one event).
                                    <!--Valid range of DTC calibration is within the configured DTC group including value 0
                                    to disable the DTC For service 0x19, if the DTC is identified by the algorithm the
                                    value of the DTC will be returned. If re-calibration is performed during Dcm
                                    service request processing, the Dem may return still with the DTC, although the DTC is
                                    switched off already until a request for a different DTC. In case calibration occurs with
                                    DTC off and the service is called again, the DTC being identified by the algorithm, the
                                    DTC returned by the service is DEM_NO_DTC. Range is 0..16777214, displayable on 24 bits.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>0</BIT-POSITION>
                                        <NUMBER-OF-BITS>24</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemUdsDTC</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf1</SYMBOL>
                              </MC-DATA-INSTANCE>
                              <!-- !LINKSTO VCC_DEM_006_Req103v1,1 -->
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DemDTCSeverity</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Internal representation: '0' == 'DEM_DTC_SEV_NO_SEVERITY', '1' == 'DEM_DTC_SEV_MAINTENANCE_ONLY', '2' == 'DEM_DTC_SEV_CHECK_AT_NEXT_HALT', '3' == 'DEM_DTC_SEV_IMMEDIATELY'.
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>26</BIT-POSITION>
                                        <NUMBER-OF-BITS>2</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemDTCSeverity</COMPU-METHOD-REF>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint32</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf1</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
                          <!-- !LINKSTO dsn.Dem.Calibration.EvConf2.EventCombinationDisabled,1 -->
                          <!-- EvConf2 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EvConf2</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <!-- !LINKSTO VCC_DEM_006_Req101v1_DemFreezeFrameClass,1 -->
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>FFClassIdx</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Index of used Freeze Frame class. Range is 0..16383 displayable on 14 bits (maximum assignable bits). Note: Freeze frames of events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV' must not be changed via calibration.
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalFFClassIdxOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalFFClassIdxWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemFFClassIdx</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf2</SYMBOL>
                              </MC-DATA-INSTANCE>
                              <!-- !LINKSTO VCC_DEM_006_Req101v1_DemEventClass,1 -->
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>EventClassIndex</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Index of Event Class.
                                    <!--Ranges from 0 to whichever value is greater between
                                    DemMaxNumberEventClasses and the number of different EventClasses.
                                    DemMaxNumberEventClasses can be configured to a maximum value of 2048.
                                    Notes for events belonging to a MIL group:
                                    - If the MIL indicator is removed through calibration, the event
                                    is no longer considered as member of the MIL group.
                                    - If the change of the event class no longer ensures the consistency
                                    of 'DemOperationCycleRef', 'DemEventFailureCycleRef',
                                    'DemEventFailureCycleCounterThreshold' or MIL indicator's
                                    'DemIndicatorFailureCycleRef' and 'DemIndicatorFailureCycleCounterThreshold',
                                    between the MIL group events, the MIL counters and the confirmation counters
                                    will be out of sync. This could lead to undefined behavior during run-time.
                                    - Calibration of the MIL group event to a class with
                                    'DemEventFailureCycleCounterThreshold' equal to 1 is not allowed.
                                    Note that it is not recommended to calibrate the EventClassIndex for events
                                    with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV', since this could cause violations
                                    of configuration constraints with respect to indicators, aging and MultiEventTriggering.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalEventClassOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalEventClassWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemEventClassIndex</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf2</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
                          <!-- !LINKSTO dsn.Dem.Calibration.EvConf3.EventCombinationDisabled,1 -->
                          <!-- EvConf3 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EvConf3</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <!-- !LINKSTO VCC_DEM_006_Req103v1,1 -->
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DemDTCFunctionalUnit</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    DTCFunctionalUnit identifies the corresponding basic vehicle or system function which reports the DTC. Width of this bit-field can vary depending on configuration. Ranges between 0 to maximum value which fits number of bits allocated for this information.
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalFunctionalUnitOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalFunctionalUnitWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDTCFunctionalUnit</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf3</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!VAR "Index" = "$Index + 1"!]
    [!ENDLOOP!]

                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_EventDesc</SYMBOL>
                  </MC-DATA-INSTANCE>

    [!LOOP "DemGeneral/DemFreezeFrameClass/eb-list::*"!]
      [!VAR "Index" = "0"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(DemDidClassRef/eb-list::*))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
      [!LOOP "DemDidClassRef/eb-list::*"!]
                      <!-- !LINKSTO VCC_DEM_006_Req109v1,1, dsn.Dem.Calibration.DID.Unused,1 -->
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(as:ref(.))"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Index range of DID. Index range of DID is 0..65534 and the value 65535 is used for internal processing to identify the unused DIDs, i.e. DIDs that are marked as unused via calibration.
                            <!-- Note: The DIDs contained in freeze frames of events with 'DemEventKind'
                            set to 'DEM_EVENT_KIND_SEV' must not be changed via calibration.-->
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint16</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
        [!VAR "Index" = "$Index + 1"!]
      [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_FFSegIdx[!"as:name(.)"!]</SYMBOL>
                  </MC-DATA-INSTANCE>
    [!ENDLOOP!]

    [!IF "node:existsAndTrue(DemGeneral/DemOBDSupport)"!]
      [!IF "node:exists(DemConfigSet/eb-list::*/DemPidClass/eb-list::*)"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_PidClass</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(as:modconf('Dem')[1]/DemConfigSet/eb-list::*/DemPidClass/eb-list::*))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
        [!VAR "Index" = "0"!]
      [!LOOP "DemConfigSet/eb-list::*/DemPidClass/eb-list::*"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <!-- !LINKSTO VCC_DEM_006_Req111v1,1, dsn.Dem.OBD.DemPidIdentifier.Unused,1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemPidIdentifier</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                PID Identifier. The PID identifier must be unique. Range is 0..254. Value 255 is used to disable PIDs in calibration context.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>ParameterId</SYMBOL>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
          [!VAR "Index" = "$Index + 1"!]
        [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_PidClass</SYMBOL>
                  </MC-DATA-INSTANCE>
      [!ENDIF!]
    [!ENDIF!]

    [!IF "$CalibrationWithoutEvCombSupport = 'true'"!]
      [!IF "node:existsAndTrue(DemGeneral/DemOBDSupport)"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_OBDConfig</SHORT-NAME>
                    <CATEGORY>STRUCTURE</CATEGORY>
                    <SUB-ELEMENTS>
        [!VAR "Index" = "1"!]
        [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*, 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
          [!IF "$ObdUdsDtcSeparationSupport = 'true'"!][!//
                          <!-- !LINKSTO Dem.3ByteObdDTC.Calibration,1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemDtcValue3Byte</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                3-byte OBD DTC value of the event when DemSupportedObdUdsDtcSeparation is enabled and either OBD variant is configured to DEM_OBD_VARIANT_OBDONUDS or OBD variant is selectable via DemCalloutObdVariantFnc. Value 0 means 'no 3-byte OBD DTC assigned'.
                                <!-- If re-calibration is performed for a stored event (OBD to non-OBD),
                                the related OBD freeze frame (if stored),
                                the related permanent event memory entry (if stored),
                                etc. will not be cleared. The event memory entry will remain
                                occupied and these data will then remain in an orphan state and will
                                be inaccessible, belonging to an event that is no longer an OBD
                                event. Such an OBD freeze frame can only be cleared by a subsequent
                                call of Dem_ClearDTC() on the UDS DTC of this event, or with a clear
                                on all UDS DTCs, - however, it is recommended to clear the event before
                                re-calibration and avoid this situation.
                                Take care to calibrate a non-OBD event to OBD only if
                                DemEventDestination of the event is set to DEM_DTC_ORIGIN_PRIMARY_MEMORY.
                                If 3-byte OBD DTC value re-calibration is performed for an event,
                                DemEventOBDReadinessGroup needs to be re-calibrated consistently.
                                Range is 0..16776959.
                                The ranges 1..255 and 16776960..16777215 are reserved by ISO 14229-1.
                                For events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV' only value 0 is allowed.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                  <SW-BIT-REPRESENTATION>
                                    <BIT-POSITION>0</BIT-POSITION>
                                    <NUMBER-OF-BITS>24</NUMBER-OF-BITS>
                                  </SW-BIT-REPRESENTATION>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDtcValue3Byte</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDConfig[[!"num:i($Index)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
            [!IF "$DTCClassAvailable = 'true'"!][!//
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemWWHOBDDTCClass</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                WWHOBD DTC Class of the current event.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                  <SW-BIT-REPRESENTATION>
                                    <BIT-POSITION>24</BIT-POSITION>
                                    <NUMBER-OF-BITS>3</NUMBER-OF-BITS>
                                  </SW-BIT-REPRESENTATION>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemWWHOBDDTCClass</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint32</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDConfig[[!"num:i($Index)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
            [!ENDIF!]
          [!ELSE!]
            [!IF "$DTCClassAvailable = 'true'"!][!//
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemWWHOBDDTCClass</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                WWHOBD DTC Class of the current event.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-BIT-REPRESENTATION>
                                    <BIT-POSITION>0</BIT-POSITION>
                                    <NUMBER-OF-BITS>3</NUMBER-OF-BITS>
                                  </SW-BIT-REPRESENTATION>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemWWHOBDDTCClass</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDConfig[[!"num:i($Index)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
            [!ENDIF!]
          [!ENDIF!]
          [!IF "$DemObdDTCSupport = 'true'"!][!//
                          <!-- !LINKSTO VCC_DEM_006_Req103v1,1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemObdDTC</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                2-byte OBD DTC value of the current event. Value 0 means 'no 2-byte OBD DTC assigned'.
                                <!--If re-calibration is performed for a stored event (OBD to non-OBD),
                                the related OBD freeze frame (if stored), the related permanent event
                                memory entry (if stored), etc. will not be cleared.
                                The event memory entry will remain occupied and these data will
                                then remain in an orphan state and will be inaccessible, belonging
                                to an event that is no longer an OBD event. Such an OBD freeze frame
                                can only be cleared by a subsequent call of Dem_ClearDTC() on the UDS
                                DTC of this event, or with a clear on all UDS DTCs, - however, it is
                                recommended to clear the event before re-calibration and avoid this
                                situation. Take care to calibrate a non-OBD event to OBD only if
                                DemEventDestination of the event is set to DEM_DTC_ORIGIN_PRIMARY_MEMORY.
                                If OBD DTC value re-calibration is performed for an event,
                                DemEventOBDReadinessGroup needs to be re-calibrated consistently.
                                Range is 0..65535.
                                For events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV' only value 0 is allowed.
                                It is possible to configure multiple DTCs with identical OBD DTC
                                value. When more than one DemDTCClass has identical OBD DTC, it is
                                recommended to have same DemEventPriority, DemEventOBDReadinessGroup,
                                DemDTCSeverity and DemDTCFunctionalUnit for events referring these
                                DTCs to avoid inconsistencies in the Dem behavior.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint16</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDDTC[[!"num:i($Index)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
          [!ENDIF!]
                        </SUB-ELEMENTS>
                      </MC-DATA-INSTANCE>
          [!VAR "Index" = "$Index + 1"!]
        [!ENDLOOP!]
                    </SUB-ELEMENTS>
                  </MC-DATA-INSTANCE>
      [!ENDIF!]
    [!ENDIF!]
    [!IF "node:existsAndTrue(DemGeneral/DemOBDSupport)"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_ObdReadinessForceCompleteMask</SHORT-NAME>
                    <CATEGORY>STRUCTURE</CATEGORY>
                    <SUB-ELEMENTS>
                      <!-- !LINKSTO VCC_DEM_006_Req112v1,1 -->
                      <!-- !LINKSTO Dem.DemOBDForceRGReady.Calibration,1 -->
      [!IF "((node:exists(DemGeneral/DemObdVariant)) and (DemGeneral/DemObdVariant = 'DEM_OBD_VARIANT_OBD_CLASSIC')) and
            (not(node:exists(DemGeneral/DemCalloutObdVariantFnc))) and
            (DemGeneral/DemReadinessGroupCalibrationConfigKind = 'DEM_NUMBER_OF_SLOTS_COMMON_CONFIG')"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemOBDEngineType</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Value 0 means OBDEngineType is set to DEM_IGNITION_SPARK and value 1 means OBDEngineType is set to DEM_IGNITION_COMPRESSION. Range is 0..1.
                            <!-- OBDEngineType should be calibrated only
                            when the events are assigned to generic OBD Readiness Groups,
                            which are common for spark ignition and compression
                            ignition, e.g. CMPRCMPT, MISF, FLSYS.-->
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                                <BIT-POSITION>3</BIT-POSITION>
                                <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemOBDEngineType</COMPU-METHOD-REF>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>Dem_ObdReadinessForceCompleteMask</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!ENDIF!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemOBDForceMisfireMonitoringReady</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Range is 0..1. Value 0 means DemOBDForceMisfireMonitoringReady is set to TRUE and value 1 means it is set to FALSE.
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                                <BIT-POSITION>4</BIT-POSITION>
                                <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemOBDForceMisfireMonitoringReady</COMPU-METHOD-REF>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>Dem_ObdReadinessForceCompleteMask</SYMBOL>
                      </MC-DATA-INSTANCE>
                      <!-- !LINKSTO VCC_DEM_006_Req112v1,1 -->
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemOBDForceFuelSysMonitoringReady</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Range is 0..1. Value 0 means DemOBDForceFuelSysMonitoringReady is set to TRUE and value 1 means it is set to FALSE.
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                                <BIT-POSITION>5</BIT-POSITION>
                                <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemOBDForceFuelSysMonitoringReady</COMPU-METHOD-REF>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>Dem_ObdReadinessForceCompleteMask</SYMBOL>
                      </MC-DATA-INSTANCE>
                      <!-- !LINKSTO VCC_DEM_006_Req112v1,1 -->
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemOBDForceCCMonitoringReady</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Range is 0..1. Value 0 means DemOBDForceCCMonitoringReady is set to TRUE and value 1 means it is set to FALSE.
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                              <BIT-POSITION>6</BIT-POSITION>
                              <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemOBDForceCCMonitoringReady</COMPU-METHOD-REF>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>Dem_ObdReadinessForceCompleteMask</SYMBOL>
                      </MC-DATA-INSTANCE>
                    </SUB-ELEMENTS>
                  </MC-DATA-INSTANCE>

                  <!-- !LINKSTO Dem.CalibrationPID41BitCCM_ENA,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_ObdReadinessPID41ByteB</SHORT-NAME>
                    <CATEGORY>STRUCTURE</CATEGORY>
                    <SUB-ELEMENTS>
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemOBDSetCCMenabled</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Comprehensive component monitoring enabled (CCM_ENA 1 == enabled, 0 == disabled).
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                              <SW-BIT-REPRESENTATION>
                                <BIT-POSITION>2</BIT-POSITION>
                                <NUMBER-OF-BITS>1</NUMBER-OF-BITS>
                              </SW-BIT-REPRESENTATION>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemOBDSetCCMenabled</COMPU-METHOD-REF>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>Dem_ObdReadinessPID41ByteB</SYMBOL>
                      </MC-DATA-INSTANCE>
                    </SUB-ELEMENTS>
                  </MC-DATA-INSTANCE>
    [!ENDIF!]

    [!IF "node:exists(DemGeneral/DemGeneralOBD/DemOBDCompliancy)"!]
                  <!-- !LINKSTO VCC_DEM_007_Req177v1,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_ObdCompliancyPID1CByte</SHORT-NAME>
                    <DESC>
                      <L-2 L="EN">
                        Configuration value to define the appropriate value to PID$1C.
                      </L-2>
                    </DESC>
                    <CATEGORY>VALUE</CATEGORY>
                    <RESULTING-PROPERTIES>
                      <SW-DATA-DEF-PROPS-VARIANTS>
                        <SW-DATA-DEF-PROPS-CONDITIONAL>
                          <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                          <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                          <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                        </SW-DATA-DEF-PROPS-CONDITIONAL>
                      </SW-DATA-DEF-PROPS-VARIANTS>
                    </RESULTING-PROPERTIES>
                    <SYMBOL>Dem_ObdCompliancyPID1CByte</SYMBOL>
                  </MC-DATA-INSTANCE>
    [!ENDIF!]

    [!IF "(as:modconf('Dem')[1]/DemGeneral/DemExtendedDataCapture = 'DEM_TRIGGER_ON_FDC_THRESHOLD') and
          (as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementStrategy = 'DEM_DISPLACEMENT_FULL') and
        (node:existsAndTrue(as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementSupport))"!]
      [!IF "node:exists(DemConfigSet/eb-list::*/DemAdvDisplacementPassiveTableLine/eb-list::*)"!]
        [!VAR "NumberOfLines" = "num:integer(count(DemConfigSet/eb-list::*/DemAdvDisplacementPassiveTableLine/eb-list::*))"!]
        [!VAR "NumOfLines" = "0"!]
                  <!-- !LINKSTO VCC_DEM_006_Req116v1,1 -->
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_AdvDisplPassiveTableLineReportedEventIds</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"$NumberOfLines"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
        [!LOOP "DemConfigSet/eb-list::*/DemAdvDisplacementPassiveTableLine/eb-list::*"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Reference to EventIds that are considered in the advanced displacement algorithm as reported events.
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemValidEventIdRange</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i($NumOfLines)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
          [!VAR "NumOfLines" = "$NumOfLines + 1"!]
        [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_AdvDisplPassiveTableLineReportedEventIds</SYMBOL>
                  </MC-DATA-INSTANCE>
        [!VAR "NumOfLines" = "0"!]
        [!LOOP "DemConfigSet/eb-list::*/DemAdvDisplacementPassiveTableLine/eb-list::*"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>DemAdvDisplacementPassiveTableLine[!"num:integer($NumOfLines)"!]</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(./DemPassiveEventRefs/eb-list::*/DemPassiveEventRef))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
          [!VAR "Index" = "0"!]
          [!LOOP "./DemPassiveEventRefs/eb-list::*/DemPassiveEventRef"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>DemPassiveEventRef_[!"as:name(as:ref(.))"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Reference to EventIds that are considered in the advanced displacement algorithm as passive events.
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                        <RESULTING-PROPERTIES>
                          <SW-DATA-DEF-PROPS-VARIANTS>
                            <SW-DATA-DEF-PROPS-CONDITIONAL>
                              <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                              <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                              <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemValidEventIdRange</DATA-CONSTR-REF>
                            </SW-DATA-DEF-PROPS-CONDITIONAL>
                          </SW-DATA-DEF-PROPS-VARIANTS>
                        </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
            [!VAR "Index" = "$Index + 1"!]
          [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_AdvDisplPassiveEventIdsLine[!"num:integer($NumOfLines)"!]</SYMBOL>
                  </MC-DATA-INSTANCE>
          [!VAR "NumOfLines" = "$NumOfLines + 1"!]
        [!ENDLOOP!]
      [!ENDIF!]
    [!ENDIF!]

  [!/*  - Generate calibration data for DEM_EVCOMB_TYPE1 - */!][!//
  [!ELSEIF "$CalibrationWithEvCombSupport = 'true'"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventIndicatorClassIdx</SHORT-NAME>
                    <DESC>
                      <L-2 L="EN">Array for mapping an indicator group per event</L-2>
                    </DESC>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
      [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*, 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <DESC>
                          <L-2 L="EN">
                            Allows calibration of indicator groups represented by Dem_IndicatorClasses.IndicatorClasses_x_y. Calibrate 'x' where 'x' denotes main group index and 'y' denotes group indicators. Single indicators are denoted by 'x' alone. Value [!"num:i($NumberOfIndicatorClasses + 1)"!] is used to disable.
                            <!--Index of Indicator group referenced by [!"as:name(.)"!] (DemEventId=[!"num:i(DemEventId)"!]).
        [!IF "node:exists(DemDTCClassRef) and node:refvalid(DemDTCClassRef)"!]
                            This Event references DTCClass [!"as:name(as:ref(DemDTCClassRef))"!].
        [!ELSE!]
                            This Event references no DTCClass.
        [!ENDIF!]
                            Notes for events assigned to a MIL group:
                            - If the MIL indicator is removed through calibration, the event is no longer
                            considered as member of the MIL group.
                            - If the calibration of the MIL indicator's class causes 'DemIndicatorFailureCycleRef'
                            or 'DemIndicatorFailureCycleCounterThreshold' to be different from 'DemOperationCycleRef'
                            or, respectively, 'DemEventFailureCycleCounterThreshold', the failure counters are not
                            in sync anymore. This could lead to undefined behavior at run-time.
                            Note for events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV':
                            Such security events must not be linked to an indicator.-->
                          </L-2>
                        </DESC>
                        <CATEGORY>VALUE</CATEGORY>
                          <RESULTING-PROPERTIES>
                            <SW-DATA-DEF-PROPS-VARIANTS>
                              <SW-DATA-DEF-PROPS-CONDITIONAL>
                                <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/[!"$DemIndicatorGrpIdxType"!]</BASE-TYPE-REF>
                                <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_IndicatorClassIdx</DATA-CONSTR-REF>
                              </SW-DATA-DEF-PROPS-CONDITIONAL>
                            </SW-DATA-DEF-PROPS-VARIANTS>
                          </RESULTING-PROPERTIES>
                        <SYMBOL>[[!"num:i(DemEventId)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_EventIndicatorClassIdx</SYMBOL>
                  </MC-DATA-INSTANCE>

    [!IF "node:existsAndTrue(DemGeneral/DemOBDSupport)"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_OBDConfig</SHORT-NAME>
                    <CATEGORY>STRUCTURE</CATEGORY>
                    <SUB-ELEMENTS>
      [!VAR "DTCClassIdx" = "0"!]
      [!LOOP "text:split($DemDTCClassList, '#')"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"."!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
        [!IF "$ObdUdsDtcSeparationSupport = 'true'"!][!//
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>ObdDTC3Byte</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                3-byte OBD DTC value of the event when DemSupportedObdUdsDtcSeparation is enabled and either OBD variant is configured to DEM_OBD_VARIANT_OBDONUDS or OBD variant is selected via DemCalloutObdVariantFnc. Value 0 means 'no 3-byte OBD DTC assigned'
                                <!--If re-calibration is performed for a stored event (OBD to non-OBD),
                                the related OBD freeze frame (if stored),
                                the related permanent event memory entry (if stored),
                                etc. will not be cleared. The event memory entry will remain
                                occupied and these data will then remain in an orphan state and will
                                be inaccessible, belonging to an event that is no longer an OBD
                                event. Such an OBD freeze frame can only be cleared by a subsequent
                                call of Dem_ClearDTC() on the UDS DTC of this event, or with a clear
                                on all UDS DTCs, - however, it is recommended to clear the event before
                                re-calibration and avoid this situation.
                                Take care to calibrate a non-OBD event to OBD only if
                                DemEventDestination of the event is set to DEM_DTC_ORIGIN_PRIMARY_MEMORY.
                                If 3-byte OBD DTC value re-calibration is performed for an event,
                                DemEventOBDReadinessGroup needs to be re-calibrated consistently.
                                Range is 0..16776959.
                                The ranges 1..255 and 16776960..16777215 are reserved by ISO 14229-1.
                                For events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV' only value 0 is allowed.-->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                  <SW-BIT-REPRESENTATION>
                                    <BIT-POSITION>0</BIT-POSITION>
                                    <NUMBER-OF-BITS>24</NUMBER-OF-BITS>
                                  </SW-BIT-REPRESENTATION>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemDtcValue3Byte</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDConfig[[!"num:i($DTCClassIdx)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
          [!IF "$DTCClassAvailable = 'true'"!][!//
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemWWHOBDDTCClass</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                WWHOBD DTC Class of the current event.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                  <SW-BIT-REPRESENTATION>
                                    <BIT-POSITION>24</BIT-POSITION>
                                    <NUMBER-OF-BITS>3</NUMBER-OF-BITS>
                                  </SW-BIT-REPRESENTATION>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemWWHOBDDTCClass</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint32</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDConfig[[!"num:i($DTCClassIdx)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
          [!ENDIF!]
        [!ELSE!]
          [!IF "$DTCClassAvailable = 'true'"!][!//
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DemWWHOBDDTCClass</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                WWHOBD DTC Class of the current event.
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-BIT-REPRESENTATION>
                                    <BIT-POSITION>0</BIT-POSITION>
                                    <NUMBER-OF-BITS>3</NUMBER-OF-BITS>
                                  </SW-BIT-REPRESENTATION>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_DemWWHOBDDTCClass</COMPU-METHOD-REF>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint8</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDConfig[[!"num:i($DTCClassIdx)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
          [!ENDIF!]
        [!ENDIF!]
        [!IF "$DemObdDTCSupport = 'true'"!]
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>ObdDTC</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                              2-byte OBD DTC value of the current event. Value 0 means 'no 2-byte OBD DTC assigned'.
                              <!-- If re-calibration is performed for a stored event (OBD to non-OBD),
                              the related OBD freeze frame (if stored), the related permanent event
                              memory entry (if stored), etc. will not be cleared. The event memory
                              entry will remain occupied and these data will then remain in an orphan
                              state and will be inaccessible, belonging to an event that is no longer
                              an OBD event. Such an OBD freeze frame can only be cleared by a subsequent
                              call of Dem_ClearDTC() on the UDS DTC of this event, or with a clear
                              on all UDS DTCs, - however, it is recommended to clear the event before
                              re-calibration and avoid this situation.
                              Take care to calibrate a non-OBD event to OBD only if
                              DemEventDestination of the event is set to DEM_DTC_ORIGIN_PRIMARY_MEMORY.
                              If OBD DTC value re-calibration is performed for an event,
                              DemEventOBDReadinessGroup needs to be re-calibrated consistently.
                              Range is 0..65535. Value 0 means 'no OBD DTC assigned'.
                              For events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV' only value 0 is allowed.
                              It is possible to configure multiple DTCs with identical OBD DTC
                              value. When more than one DemDTCClass has identical OBD DTC, it is
                              recommended to have same DemEventPriority, DemEventOBDReadinessGroup,
                              DemDTCSeverity and DemDTCFunctionalUnit for events referring these
                              DTCs to avoid inconsistencies in the Dem behavior.-->
                            </L-2>
                          </DESC>
                          <CATEGORY>VALUE</CATEGORY>
                          <RESULTING-PROPERTIES>
                            <SW-DATA-DEF-PROPS-VARIANTS>
                              <SW-DATA-DEF-PROPS-CONDITIONAL>
                                <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
                                <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Platform/DataConstrs/uint16</DATA-CONSTR-REF>
                              </SW-DATA-DEF-PROPS-CONDITIONAL>
                            </SW-DATA-DEF-PROPS-VARIANTS>
                          </RESULTING-PROPERTIES>
                            <SYMBOL>Dem_OBDDTC[[!"num:i($DTCClassIdx)"!]]</SYMBOL>
                          </MC-DATA-INSTANCE>
        [!ENDIF!]
                        </SUB-ELEMENTS>
                      </MC-DATA-INSTANCE>
        [!VAR "DTCClassIdx" = "$DTCClassIdx + 1"!]
      [!ENDLOOP!][!//
                    </SUB-ELEMENTS>
                  </MC-DATA-INSTANCE>
    [!ENDIF!]

    [!IF "(num:integer($EventFailureClassIdx) > 0)"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventFailureCycleCfg</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i($EventFailureClassIdx)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
      [!FOR "EachFailureClass" = "0"  TO "$EventFailureClassIdx - 1"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>EventFailureClass_[!"$EachFailureClass"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <!-- !LINKSTO Dem.Calibration.DemEventFailureCycleCounterThreshold.EventCombinationEnabled,1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EventFailureCycleCounterThreshold</SHORT-NAME>
                            <DESC>
                              <L-2 L="EN">
                                Value of DemEventFailureCycleCounterThreshold. Value 0 is only limited to events assigned to a driving cycle i.e. Zero-trip events. Note: The calibrated threshold will be applied to all events which belong to EventFailureClass_[!"$EachFailureClass"!].
                                <!--
                                For MIL group events, the calibration of this parameter to value 1 is not allowed.
                                If the 'DemEventFailureCycleCounterThreshold' of a MIL group event is changed
                                to be different from 'DemIndicatorFailureCycleCounterThreshold' configured
                                for its MIL indicator, the MIL counter and the confirmation counter would not
                                be in sync anymore. This could lead to undefined behavior during runtime. -->
                              </L-2>
                            </DESC>
                            <CATEGORY>VALUE</CATEGORY>
                            <RESULTING-PROPERTIES>
                              <SW-DATA-DEF-PROPS-VARIANTS>
                                <SW-DATA-DEF-PROPS-CONDITIONAL>
                                  <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
                                  <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                  <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_EventFailureCycleCounterThreshold</DATA-CONSTR-REF>
                                </SW-DATA-DEF-PROPS-CONDITIONAL>
                              </SW-DATA-DEF-PROPS-VARIANTS>
                            </RESULTING-PROPERTIES>
                            <SYMBOL>EventFailureCycleCounterThreshold</SYMBOL>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"$EachFailureClass"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!ENDFOR!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_EventFailureCycleCfg</SYMBOL>
                  </MC-DATA-INSTANCE>
    [!ENDIF!]

    [!VAR "EnableConditionGroupNumber" = "num:integer(count(DemGeneral/DemEnableConditionGroup/eb-list::*))"!]
                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_EventDesc</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:integer(count(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*))"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!VAR "Index" = "1"!]
    [!LOOP "util:distinct(node:order(DemConfigSet/eb-list::*/DemEventParameter/eb-list::*, 'DemEventId'))"!]
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <!-- !LINKSTO dsn.Dem.Calibration.EvConf1.EventCombinationEnabled,1 -->
                          <!-- EvConf1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>EvConf1</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <!-- !LINKSTO Dem.Calibration.DemEventFailureClassIdx.EventCombinationEnabled,1 -->
      [!IF "(num:integer($EventFailureClassIdx) > 0)"!]
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DemEventFailureClassIdx</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Index of Event failure class. Fault confirmation can be removed by calibrating to [!"num:i($EventFailureClassIdx)"!].
                                    <!--Note:
                                    - If the event belongs to a MIL group, it shall be ensured that an appropriate
                                      index of event failure class with event failure cycle counter threshold greater
                                      than 1 shall be calibrated.
                                    - If a combined event is calibrated with a new index of event failure class, it
                                      shall be ensured that all the associated events within the combined set shall also
                                      be calibrated with the same index of event failure class.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalEventFailureClassIdxOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalEventFailureClassIdxWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_EventFailureClassIdx</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf1</SYMBOL>
                              </MC-DATA-INSTANCE>
      [!ENDIF!]
      [!IF "$EnableConditionGroupNumber > 0"!]
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>EnableConditionGroupRef</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Reference to a configured enable condition group. Value [!"num:i($DemNumEnCondGroups)"!] is used to disable.
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalEnableConditionGroupIdxOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalEnableConditionGroupIdxWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_EnableConditionGroup</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>EvConf1</SYMBOL>
                              </MC-DATA-INSTANCE>
      [!ENDIF!]
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($Index)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
      [!VAR "Index" = "$Index + 1"!]
    [!ENDLOOP!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_EventDesc</SYMBOL>
                  </MC-DATA-INSTANCE>

                  <MC-DATA-INSTANCE>
                    <SHORT-NAME>Dem_DTCDesc</SHORT-NAME>
                    <CATEGORY>ARRAY</CATEGORY>
                    <ARRAY-SIZE>[!"num:i($DemNbOfDTCClasses)"!]</ARRAY-SIZE>
                    <SUB-ELEMENTS>
    [!FOR "DTCCtr" = "0" TO "num:integer($DemNbOfDTCClasses) - 1"!][!//
      [!VAR "DTCClassName" = "text:split($DemDTCClassList, '#')[position() = $DTCCtr+1]"!][!//
      [!LOOP "as:modconf('Dem')[1]/DemConfigSet/eb-list::*/DemEventParameter/eb-list::*"!][!//
        [!IF "node:exists(DemDTCClassRef)"!][!//
          [!VAR "EventDTCClassName" = "text:split(DemDTCClassRef, '/')[last()]"!][!//
        [!ELSE!][!/* No DTC class or no UDS-DTC configured */!][!//
          [!VAR "EventDTCClassName" = "node:name(.)"!][!//
        [!ENDIF!][!//
        [!IF "$DTCClassName = $EventDTCClassName"!][!//
          [!IF "not(node:exists(DemDTCClassRef)) or not(node:exists(DemEvtCmbCommonParamMaster)) or (node:existsAndTrue(DemEvtCmbCommonParamMaster))"!][!//
                      <MC-DATA-INSTANCE>
                        <SHORT-NAME>[!"as:name(.)"!]</SHORT-NAME>
                        <CATEGORY>STRUCTURE</CATEGORY>
                        <SUB-ELEMENTS>
                          <!-- !LINKSTO dsn.Dem.Calibration.DTCConf1.EventCombinationEnabled,1 -->
                          <!-- DTCConf1 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DTCConf1</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
                              <!-- !LINKSTO VCC_DEM_006_Req103v1,1 -->
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>DemUdsDTC</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    UDS DTC value of the event (special case DTC 0: means DTC off; it is not allowed to have the same DTC value for more than one event).
                                    <!--Valid range of DTC calibration is within the configured DTC group including value 0
                                    to disable the DTC For service 0x19, if the DTC is identified by the algorithm the
                                    value of the DTC will be returned. If re-calibration is performed during Dcm
                                    service request processing, the Dem may return still with the DTC, although the DTC is
                                    switched off already until a request for a different DTC. In case calibration occurs with
                                    DTC off and the service is called again, the DTC being identified by the algorithm, the
                                    DTC returned by the service is DEM_NO_DTC. Range is 0..16777214, displayable on 24 bits.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>0</BIT-POSITION>
                                        <NUMBER-OF-BITS>24</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_DemUdsDTC</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>DTCConf1</SYMBOL>
                              </MC-DATA-INSTANCE>
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
            [!IF "(node:existsAndTrue(as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementSupport)) or
                ($DemAgingAllowedSupport = 'true')"!]
                          <!-- !LINKSTO dsn.Dem.Calibration.DTCConf2.EventCombinationEnabled,1 -->
                          <!-- DTCConf2 -->
                          <MC-DATA-INSTANCE>
                            <SHORT-NAME>DTCConf2</SHORT-NAME>
                            <CATEGORY>STRUCTURE</CATEGORY>
                            <SUB-ELEMENTS>
              [!IF "(node:existsAndTrue(as:modconf('Dem')[1]/DemGeneral/DemEventDisplacementSupport))"!]
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>EventPriority</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Internal value of configured event priority. Value 0 represents the highest priority and each value sequentially larger represents a lower priority in the ranking of all configured priorities.
                                    <!--Dem does not store the configured DemEventPriority value directly, but creates an ordered
                                    list of all configured unique DemEventPriority values in ascending priority value order to build
                                    a ranking of configured priorities.
                                    You calibrate the index into the list of configured event priorities. That means, it is not
                                    possible to add new event priority values via calibration.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalEventPriorityOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalEventPriorityWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_EventPriorityIdx</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>DTCConf2</SYMBOL>
                              </MC-DATA-INSTANCE>
              [!ENDIF!]
              [!IF "$DemAgingAllowedSupport = 'true'"!]
                              <MC-DATA-INSTANCE>
                                <SHORT-NAME>AgingCycleCounterThreshold</SHORT-NAME>
                                <DESC>
                                  <L-2 L="EN">
                                    Value of DemAgingCycleCounterThreshold. Calibration of this value is only allowed before Dem_PreInit() is called. After re-calibration of aging support the stored event related data is not valid. Value 0 disables aging.
                                    <!--Range is configuration dependent.
                                    Note that for events with 'DemEventKind' set to 'DEM_EVENT_KIND_SEV'
                                    aging must not be enabled via calibration.-->
                                  </L-2>
                                </DESC>
                                <CATEGORY>VALUE</CATEGORY>
                                <RESULTING-PROPERTIES>
                                  <SW-DATA-DEF-PROPS-VARIANTS>
                                    <SW-DATA-DEF-PROPS-CONDITIONAL>
                                      <BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
                                      <SW-BIT-REPRESENTATION>
                                        <BIT-POSITION>[!"num:i($CalAgingCycleIdOffset)"!]</BIT-POSITION>
                                        <NUMBER-OF-BITS>[!"num:i($CalAgingCycleIdWidth)"!]</NUMBER-OF-BITS>
                                      </SW-BIT-REPRESENTATION>
                                      <SW-CALIBRATION-ACCESS>READ-WRITE</SW-CALIBRATION-ACCESS>
                                      <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_AgingCycleThreshold</DATA-CONSTR-REF>
                                    </SW-DATA-DEF-PROPS-CONDITIONAL>
                                  </SW-DATA-DEF-PROPS-VARIANTS>
                                </RESULTING-PROPERTIES>
                                <SYMBOL>DTCConf2</SYMBOL>
                              </MC-DATA-INSTANCE>
              [!ENDIF!]
                            </SUB-ELEMENTS>
                          </MC-DATA-INSTANCE>
            [!ENDIF!]
                        </SUB-ELEMENTS>
                        <SYMBOL>[[!"num:i($DTCCtr)"!]]</SYMBOL>
                      </MC-DATA-INSTANCE>
            [!BREAK!][!//
          [!ENDIF!]
        [!ENDIF!]
      [!ENDLOOP!]
    [!ENDFOR!]
                    </SUB-ELEMENTS>
                    <SYMBOL>Dem_DTCDesc</SYMBOL>
                  </MC-DATA-INSTANCE>

  [!ENDIF!]
[!ENDIF!]
                </MC-PARAMETER-INSTANCES>
              </MC-SUPPORT>
[!INCLUDE "../Dem_Bswmd_ResourceConsumption.arxml.m"!]
            </BSW-IMPLEMENTATION>
          </ELEMENTS>
        </AR-PACKAGE>
      </AR-PACKAGES>
    </AR-PACKAGE>
  </AR-PACKAGES>
</AUTOSAR>
