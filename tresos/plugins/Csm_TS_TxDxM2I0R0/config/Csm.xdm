<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM2I0R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Csm" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>0.1.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY/>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                    &lt;p&gt;
                      EN: Configuration of the Csm module.
                    &lt;/p&gt;
                  &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="9"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="110"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Select the configuration variant. Currently only PreCompile is supported.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="EDITABLE" value="false"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:ctr name="CsmGeneral" type="IDENTIFIABLE">
                <v:var name="CsmRteUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enables the usage of the RTE for the Csm. TRUE = Rte enabled. FALSE =
                          Rte disabled.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Rte usage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:var name="CsmVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Pre-processor switch to enable and disable availability of the API
                          Csm_GetVersionInfo(). TRUE = API Csm_GetVersionInfo() is available.
                          FALSE = API Csm_GetVersionInfo() is not available.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmVersionInfoApi"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:var name="CsmMaxAlignScalarType" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          &lt;p&gt;The type with maximal alignment
                          restrictions.&lt;/p&gt;&lt;p&gt;If the global option
                          &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled, the string
                          must represent the name of a valid scalar data type (e.g. uint8,
                          uint16, uint32). &lt;/p&gt; &lt;p&gt;If the global option
                          &lt;code&gt;Enable Rte usage&lt;/code&gt; is enabled, the string must
                          represent the name of a valid scalar data type defined at
                          &lt;code&gt;/AUTOSAR_Platform/ImplementationDataTypes/CsmMaxAlignScalarType&lt;/code&gt;
                          &lt;/p&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Type with maximal alignment restrictions"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="uint32"/>
                </v:var>
                <v:var name="CsmSizeMaxAlignScalarType" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          &lt;p&gt;Size of &lt;code&gt;CsmMaxAlignScalarType&lt;/code&gt; in
                          bytes.&lt;/p&gt;&lt;p&gt;This parameter is enabled if the global
                          option&lt;code&gt;Enable Rte usage&lt;/code&gt; is enabled.&lt;/p&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the type with maximal alignment restrictions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range expr="&gt;0"/>
                    <mt:xpath 
                              true="Parameter &apos;CsmSizeMaxAlignScalarType&apos; does not match the value of parameter &apos;CsmMaxAlignScalarType&apos;" 
                              expr="(text:match(node:value(./../CsmMaxAlignScalarType), &apos;uint8|uint16|uint32|uint64|sint8|sint16|sint32|sint64|uint8_least|uint16_least|uint32_least|uint64_least|sint8_least|sint16_least|sint32_least|sint64_least&apos;)) and (num:i(node:value(.)) != num:i(num:div(num:i(text:replace(node:value(./../CsmMaxAlignScalarType), &apos;[su]int(\d+)(_least)?&apos;, &apos;$1&apos;)), 8)))"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="not(text:match(node:value(./../CsmMaxAlignScalarType), &apos;uint8|uint16|uint32|uint64|sint8|sint16|sint32|sint64|uint8_least|uint16_least|uint32_least|uint64_least|sint8_least|sint16_least|sint32_least|sint64_least&apos;))" 
                        true="Parameter &apos;CsmSizeMaxAlignScalarType&apos; shall be checked if it really matches the value of parameter &apos;CsmMaxAlignScalarType&apos;"/>
                </v:var>
                <v:var name="CsmMainFunctionCycleTime" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the cycle time of the Csm main function in
                          seconds.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Csm Main Function Cycle Time"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="0.01"/>
                </v:var>
                <v:var name="CsmUseSyncJobProcessing" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          &lt;p&gt;Pre-processor switch to enable and disable synchronous job
                          processing.&lt;/p&gt;&lt;p&gt;TRUE = synchronous job processing
                          enabled&lt;/p&gt;&lt;p&gt;FALSE = synchronous job processing
                          disabled&lt;/p&gt;&lt;p&gt;In synchronous job processing mode, the
                          Csm itself calls the main function of the underlying cryptographic
                          primitives (Cry) in a blocking loop until the Cry calls a callback of
                          the Csm. Hence, it is assumed that the Cry processes the job
                          asynchronously, i.e. provides a main function and calls callback when
                          done. &lt;b&gt;Please check if the used Cry or CryShe module supports
                          this mode of operation.&lt;/b&gt;&lt;/p&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Csm synchronous job processing"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:var name="CsmUsePriorities" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          &lt;p&gt;Pre-processor switch to enable and disable priority
                          handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                          enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                          disabled&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                          forwards a call to Csm_&lt;Service&gt;Start to the Cry even when a
                          calculation is already ongoing, provided that the same cryptographic
                          primitive is used for the new request. The priority handling itself
                          has to be performed by the Cry. &lt;b&gt;Please check if the used Cry
                          or CryShe module supports this mode of operation.&lt;/b&gt;&lt;/p&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Csm priorities handling"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;"/>
                </v:var>
              </v:ctr>
              <v:ctr name="CsmAsymPrivateKeyWrapAsym" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of AsymPrivateKeyWrapAsym primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmAsymPrivateKeyWrapAsym"/>
                <v:var name="CsmAsymPrivateKeyWrapAsymMaxPrivKeySize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum length, in bytes, of all private key types used in all
                          CRY primitives which implement an asymmetrical private key wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="CsmAsymPrivateKeyWrapAsymMaxPrivKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPrivateKeyWrapAsymMaxPubKeySize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum length, in bytes, of all public key types used in all CRY
                          primitives which implement an asymmetrical private key wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="CsmAsymPrivateKeyWrapAsymMaxPubKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPrivateKeyWrapAsymDataBufferSize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;AsymPrivateKeyWrapAsymDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmAsymPrivateKeyWrapAsymUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmAsymPrivateKeyWrapAsym&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;AsymPrivateKeyWrapAsymUpdate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;dataBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmAsymPrivateKeyWrapAsymUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT AsymPrivateKeyWrapAsymDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmAsymPrivateKeyWrapAsym configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type AsymPrivateKeyWrapAsymDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmAsymPrivateKeyWrapAsym/CsmAsymPrivateKeyWrapAsymConfig/*[CsmAsymPrivateKeyWrapAsymEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPrivateKeyWrapAsymImmediateRestart" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmAsymPrivateKeyWrapAsymConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackAsymPrivateKeyWrapAsym</a:v>
                    <a:v>CsmAsymPrivateKeyWrapAsymInitConfiguration</a:v>
                    <a:v>CsmAsymPrivateKeyWrapAsymPrimitiveName</a:v>
                    <a:v>CsmAsymPrivateKeyWrapAsymEnableRteInterface</a:v>
                    <a:v>CsmAsymPrivateKeyWrapAsymEnableRestart</a:v>
                    <a:v>CsmAsymPrivateKeyWrapAsymUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmAsymPrivateKeyWrapAsymConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmAsymPrivateKeyWrapAsymConfig" 
                         type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service AsymPrivateKeyWrapAsym. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmAsymPrivateKeyWrapAsymConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmAsymPrivateKeyWrapAsymEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackAsymPrivateKeyWrapAsym))))" 
                          true="The callback CsmCallbackAsymPrivateKeyWrapAsym shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackAsymPrivateKeyWrapAsym" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmAsymPrivateKeyWrapAsymEnableRteInterface&lt;/code&gt;
                              is disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled
                              for this configuration, the callback function must be provided by
                              the Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is
                              enabled, the configuration parameter
                              CsmCallbackAsymPrivateKeyWrapAsym is optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmCallbackAsymPrivateKeyWrapAsym"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmAsymPrivateKeyWrapAsymEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapAsymInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmAsymPrivateKeyWrapAsymInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapAsymPrimitiveName" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmAsymPrivateKeyWrapAsymPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapAsymEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapAsymEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmAsymPrivateKeyWrapAsymStart cancels ongoing requests with the
                              same configuration ID. Note that the used Cry module needs to
                              support the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapAsymUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmAsymPrivateKeyWrapSym" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of AsymPrivateKeyWrapSym primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmAsymPrivateKeyWrapSym"/>
                <v:var name="CsmAsymPrivateKeyWrapSymMaxPrivKeySize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum length, in bytes, of all private information types used
                          in all CRY primitives which implement an asymetric private key
                          wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="CsmAsymPrivateKeyWrapSymMaxPrivKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPrivateKeyWrapSymMaxSymKeySize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement an asymetrical private key wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="CsmAsymPrivateKeyWrapSymMaxSymKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPrivateKeyWrapSymDataBufferSize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;AsymPrivateKeyWrapSymDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmAsymPrivateKeyWrapSymUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmAsymPrivateKeyWrapSym&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;AsymPrivateKeyWrapSymUpdate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;dataBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmAsymPrivateKeyWrapSymUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT AsymPrivateKeyWrapSymDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmAsymPrivateKeyWrapSym configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type AsymPrivateKeyWrapSymDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmAsymPrivateKeyWrapSym/CsmAsymPrivateKeyWrapSymConfig/*[CsmAsymPrivateKeyWrapSymEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPrivateKeyWrapSymImmediateRestart" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmAsymPrivateKeyWrapSymConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackAsymPrivateKeyWrapSym</a:v>
                    <a:v>CsmAsymPrivateKeyWrapSymInitConfiguration</a:v>
                    <a:v>CsmAsymPrivateKeyWrapSymPrimitiveName</a:v>
                    <a:v>CsmAsymPrivateKeyWrapSymEnableRteInterface</a:v>
                    <a:v>CsmAsymPrivateKeyWrapSymEnableRestart</a:v>
                    <a:v>CsmAsymPrivateKeyWrapSymUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmAsymPrivateKeyWrapSymConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmAsymPrivateKeyWrapSymConfig" 
                         type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service AsymPrivateKeyWrapSym. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmAsymPrivateKeyWrapSymConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmAsymPrivateKeyWrapSymEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackAsymPrivateKeyWrapSym))))" 
                          true="The callback CsmCallbackAsymPrivateKeyWrapSym shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackAsymPrivateKeyWrapSym" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmAsymPrivateKeyWrapSymEnableRteInterface&lt;/code&gt;
                              is disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled
                              for this configuration, the callback function must be provided by
                              the Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is
                              enabled, the configuration parameter
                              CsmCallbackAsymPrivateKeyWrapSym is optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackAsymPrivateKeyWrapSym"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmAsymPrivateKeyWrapSymEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapSymInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmAsymPrivateKeyWrapSymInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapSymPrimitiveName" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmAsymPrivateKeyWrapSymPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapSymEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapSymEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmAsymPrivateKeyWrapSymStart cancels ongoing requests with the
                              same configuration ID. Note that the used Cry module needs to
                              support the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmAsymPrivateKeyWrapSymUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmAsymPublicKeyExtract" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of AsymPublicKeyExtract primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmAsymPublicKeyExtract"/>
                <v:var name="CsmAsymPublicKeyExtractMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement an asymmetrical public key extraction.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmAsymPublicKeyExtractMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPublicKeyExtractDataBufferSize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;AsymPublicKeyExtractDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmAsymPublicKeyExtractUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmAsymPublicKeyExtract&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;AsymPublicKeyExtractUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmAsymPublicKeyExtractUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN AsymPublicKeyExtractDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmAsymPublicKeyExtract configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type AsymPublicKeyExtractDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmAsymPublicKeyExtract/CsmAsymPublicKeyExtractConfig/*[CsmAsymPublicKeyExtractEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmAsymPublicKeyExtractImmediateRestart" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmAsymPublicKeyExtractConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackAsymPublicKeyExtract</a:v>
                    <a:v>CsmAsymPublicKeyExtractInitConfiguration</a:v>
                    <a:v>CsmAsymPublicKeyExtractPrimitiveName</a:v>
                    <a:v>CsmAsymPublicKeyExtractEnableRteInterface</a:v>
                    <a:v>CsmAsymPublicKeyExtractEnableRestart</a:v>
                    <a:v>CsmAsymPublicKeyExtractUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmAsymPublicKeyExtractConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmAsymPublicKeyExtractConfig" 
                         type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service AsymPublicKeyExtract. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmAsymPublicKeyExtractConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmAsymPublicKeyExtractEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackAsymPublicKeyExtract))))" 
                          true="The callback CsmCallbackAsymPublicKeyExtract shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackAsymPublicKeyExtract" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmAsymPublicKeyExtractEnableRteInterface&lt;/code&gt;
                              is disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled
                              for this configuration, the callback function must be provided by
                              the Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is
                              enabled, the configuration parameter
                              CsmCallbackAsymPublicKeyExtract is optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackAsymPublicKeyExtract"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmAsymPublicKeyExtractEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmAsymPublicKeyExtractInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmAsymPublicKeyExtractInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmAsymPublicKeyExtractPrimitiveName" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmAsymPublicKeyExtractPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmAsymPublicKeyExtractEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmAsymPublicKeyExtractEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmAsymPublicKeyExtractStart cancels ongoing requests with the
                              same configuration ID. Note that the used Cry module needs to
                              support the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmAsymPublicKeyExtractUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmChecksum" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of Checksum primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmChecksum"/>
                <v:var name="CsmChecksumDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;ChecksumDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmChecksumUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmChecksum&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;ChecksumUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmChecksumUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN ChecksumDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmChecksum configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type ChecksumDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmChecksum/CsmChecksumConfig/*[CsmChecksumEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmChecksumResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;ChecksumResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmChecksumFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmChecksum&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;ChecksumFinish&lt;/code&gt; returns in the
                          parameter &lt;code&gt;resultBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmChecksumFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT ChecksumResultBuffer resultBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 resultLength, &lt;br/&gt;
                              &#160;&#160;IN boolean TruncationIsAllowed&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmChecksum configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type ChecksumResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmChecksum/CsmChecksumConfig/*[CsmChecksumEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmChecksumImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmChecksumConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackChecksum</a:v>
                    <a:v>CsmChecksumInitConfiguration</a:v>
                    <a:v>CsmChecksumPrimitiveName</a:v>
                    <a:v>CsmChecksumEnableRteInterface</a:v>
                    <a:v>CsmChecksumEnableRestart</a:v>
                    <a:v>CsmChecksumUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmChecksumConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmChecksumConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service Checksum. The container name
                            serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmChecksumConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmChecksumEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackChecksum))))" 
                          true="The callback CsmCallbackChecksum shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackChecksum" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmChecksumEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackChecksum is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackChecksum"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmChecksumEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmChecksumInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmChecksumInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmChecksumPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmChecksumPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmChecksumEnableRteInterface" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmChecksumEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmChecksumStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmChecksumUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmHash" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of Hash primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmHash"/>
                <v:var name="CsmHashDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;HashDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmHashUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmHash&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;HashUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmHashUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN HashDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmHash configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type HashDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmHash/CsmHashConfig/*[CsmHashEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmHashResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;HashResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmHashFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmHash&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;HashFinish&lt;/code&gt; returns in the
                          parameter &lt;code&gt;resultBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmHashFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT HashResultBuffer resultBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 resultLength, &lt;br/&gt;
                              &#160;&#160;IN boolean TruncationIsAllowed&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmHash configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type HashResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmHash/CsmHashConfig/*[CsmHashEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmHashImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmHashConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackHash</a:v>
                    <a:v>CsmHashInitConfiguration</a:v>
                    <a:v>CsmHashPrimitiveName</a:v>
                    <a:v>CsmHashEnableRteInterface</a:v>
                    <a:v>CsmHashEnableRestart</a:v>
                    <a:v>CsmHashUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmHashConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmHashConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configurations for the Hash service. The container name serves as a
                            symbolic name for the identifier of a service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmHashConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmHashEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackHash))))" 
                          true="The callback CsmCallbackHash shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackHash" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmHashEnableRteInterface&lt;/code&gt; is disabled.
                              &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for this
                              configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackHash is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackHash"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmHashEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmHashInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmHashInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmHashPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmHashPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmHashEnableRteInterface" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmHashEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmHashStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmHashUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmMacGenerate" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of MacGenerate primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmMacGenerate"/>
                <v:var name="CsmMacGenerateMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a MAC generation.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmMacGenerateMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmMacGenerateDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;MacGenerateDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmMacGenerateUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmMacGenerate&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;MacGenerateUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmMacGenerateUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN MacGenerateDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmMacGenerate configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type MacGenerateDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmMacGenerate/CsmMacGenerateConfig/*[CsmMacGenerateEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmMacGenerateResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;MacGenerateResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmMacGenerateFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmMacGenerate&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;MacGenerateFinish&lt;/code&gt; returns in the
                          parameter &lt;code&gt;resultBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmMacGenerateFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT MacGenerateResultBuffer resultBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 resultLength, &lt;br/&gt;
                              &#160;&#160;IN boolean TruncationIsAllowed&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmMacGenerate configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type MacGenerateResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmMacGenerate/CsmMacGenerateConfig/*[CsmMacGenerateEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmMacGenerateImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmMacGenerateConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackMacGenerate</a:v>
                    <a:v>CsmMacGenerateInitConfiguration</a:v>
                    <a:v>CsmMacGeneratePrimitiveName</a:v>
                    <a:v>CsmMacGenerateEnableRteInterface</a:v>
                    <a:v>CsmMacGenerateEnableRestart</a:v>
                    <a:v>CsmMacGenerateUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmMacGenerateConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmMacGenerateConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configurations for the MacGenerate service. The container name
                            serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmMacGenerateConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmMacGenerateEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackMacGenerate))))" 
                          true="The callback CsmCallbackMacGenerate shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackMacGenerate" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmMacGenerateEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackMacGenerate is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackMacGenerate"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmMacGenerateEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmMacGenerateInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmMacGenerateInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmMacGeneratePrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmMacGeneratePrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmMacGenerateEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmMacGenerateEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmMacGenerateStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmMacGenerateUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmMacVerify" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of MacVerify primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmMacVerify"/>
                <v:var name="CsmMacVerifyMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a MAC verification.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmMacVerifyMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmMacVerifyDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;MacVerifyDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmMacVerifyUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmMacVerify&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;MacVerifyUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmMacVerifyUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN MacVerifyDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmMacVerify configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type MacVerifyDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmMacVerify/CsmMacVerifyConfig/*[CsmMacVerifyEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmMacVerifyCompareBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;MacVerifyCompareBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmMacVerifyFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmMacVerify&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;MacBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;MacVerifyFinish&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmMacVerifyFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN MacVerifyCompareBuffer MacBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 MacLength, &lt;br/&gt;
                              &#160;&#160;OUT Csm_VerifyResultType resultBuffer&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmMacVerify configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type MacVerifyCompareBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmMacVerify/CsmMacVerifyConfig/*[CsmMacVerifyEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmMacVerifyImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmMacVerifyConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackMacVerify</a:v>
                    <a:v>CsmMacVerifyInitConfiguration</a:v>
                    <a:v>CsmMacVerifyPrimitiveName</a:v>
                    <a:v>CsmMacVerifyEnableRteInterface</a:v>
                    <a:v>CsmMacVerifyEnableRestart</a:v>
                    <a:v>CsmMacVerifyUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmMacVerifyConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmMacVerifyConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configurations for the MacVerify service. The container name serves
                            as a symbolic name for the identifier of a service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmMacVerifyConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmMacVerifyEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackMacVerify))))" 
                          true="The callback CsmCallbackMacVerify shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackMacVerify" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmMacVerifyEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackMacVerify is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackMacVerify"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmMacVerifyEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmMacVerifyInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmMacVerifyInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmMacVerifyPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmMacVerifyPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmMacVerifyEnableRteInterface" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmMacVerifyEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmMacVerifyStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmMacVerifyUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmRandomGenerate" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of RandomGenerate primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmRandomGenerate"/>
                <v:var name="CsmRandomGenerateResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;RandomGenerateResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmRandomGenerate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmRandomGenerate&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;RandomGenerate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;resultBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmRandomGenerate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT RandomGenerateResultBuffer resultBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 resultLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmRandomGenerate configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type RandomGenerateResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmRandomGenerate/CsmRandomGenerateConfig/*[CsmRandomGenerateEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmRandomGenerateImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmRandomGenerateConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackRandomGenerate</a:v>
                    <a:v>CsmRandomGenerateInitConfiguration</a:v>
                    <a:v>CsmRandomGeneratePrimitiveName</a:v>
                    <a:v>CsmRandomGenerateEnableRteInterface</a:v>
                    <a:v>CsmRandomGenerateEnableRestart</a:v>
                    <a:v>CsmRandomGenerateUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmRandomGenerateConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmRandomGenerateConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service RandomGenerate. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmRandomGenerateConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmRandomGenerateEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackRandomGenerate))))" 
                          true="The callback CsmCallbackRandomGenerate shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackRandomGenerate" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmRandomGenerateEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackRandomGenerate is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackRandomGenerate"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmRandomGenerateEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmRandomGenerateInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmRandomGenerateInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmRandomGeneratePrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmRandomGeneratePrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmRandomGenerateEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmRandomGenerateEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmRandomGenerateStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmRandomGenerateUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmRandomSeed" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of RandomSeed primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmRandomSeed"/>
                <v:var name="CsmRandomSeedDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;RandomSeedDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmRandomSeedUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmRandomSeed&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;seedBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;RandomSeedUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmRandomSeedUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN RandomSeedDataBuffer seedBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 seedLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmRandomSeed configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type RandomSeedDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmRandomSeed/CsmRandomSeedConfig/*[CsmRandomSeedEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmRandomSeedImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmRandomSeedConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackRandomSeed</a:v>
                    <a:v>CsmRandomSeedInitConfiguration</a:v>
                    <a:v>CsmRandomSeedPrimitiveName</a:v>
                    <a:v>CsmRandomSeedEnableRteInterface</a:v>
                    <a:v>CsmRandomSeedEnableRestart</a:v>
                    <a:v>CsmRandomSeedUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmRandomSeedConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmRandomSeedConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service RandomSeed. The container
                            name serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmRandomSeedConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmRandomSeedEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackRandomSeed))))" 
                          true="The callback CsmCallbackRandomSeed shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackRandomSeed" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmRandomSeedEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackRandomSeed is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackRandomSeed"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmRandomSeedEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmRandomSeedInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmRandomSeedInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmRandomSeedPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmRandomSeedPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmRandomSeedEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmRandomSeedEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmRandomSeedStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmRandomSeedUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSignatureGenerate" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SignatureGenerate primitives
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSignatureGenerate"/>
                <v:var name="CsmSignatureGenerateMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a signature generation.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSignatureGenerateMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSignatureGenerateDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SignatureGenerateDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSignatureGenerateUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSignatureGenerate&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SignatureGenerateUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSignatureGenerateUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SignatureGenerateDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSignatureGenerate configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SignatureGenerateDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSignatureGenerate/CsmSignatureGenerateConfig/*[CsmSignatureGenerateEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSignatureGenerateResultBufferSize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SignatureGenerateResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSignatureGenerateFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSignatureGenerate&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;SignatureGenerateFinish&lt;/code&gt; returns in the
                          parameter &lt;code&gt;resultBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSignatureGenerateFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT SignatureGenerateResultBuffer resultBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 resultLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSignatureGenerate configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SignatureGenerateResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSignatureGenerate/CsmSignatureGenerateConfig/*[CsmSignatureGenerateEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSignatureGenerateImmediateRestart" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSignatureGenerateConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSignatureGenerate</a:v>
                    <a:v>CsmSignatureGenerateInitConfiguration</a:v>
                    <a:v>CsmSignatureGeneratePrimitiveName</a:v>
                    <a:v>CsmSignatureGenerateEnableRteInterface</a:v>
                    <a:v>CsmSignatureGenerateEnableRestart</a:v>
                    <a:v>CsmSignatureGenerateUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSignatureGenerateConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSignatureGenerateConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SignatureGenerate. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSignatureGenerateConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSignatureGenerateEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSignatureGenerate))))" 
                          true="The callback CsmCallbackSignatureGenerate shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSignatureGenerate" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSignatureGenerateEnableRteInterface&lt;/code&gt;
                              is disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled
                              for this configuration, the callback function must be provided by
                              the Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is
                              enabled, the configuration parameter CsmCallbackSignatureGenerate
                              is optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSignatureGenerate"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSignatureGenerateEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSignatureGenerateInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSignatureGenerateInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSignatureGeneratePrimitiveName" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSignatureGeneratePrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSignatureGenerateEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSignatureGenerateEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSignatureGenerateStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSignatureGenerateUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSignatureVerify" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SignatureGenerate primitives
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSignatureVerify"/>
                <v:var name="CsmSignatureVerifyMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a signature verification.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSignatureVerifyMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSignatureVerifyDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SignatureVerifyDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSignatureVerifyUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSignatureVerify&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SignatureVerifyUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSignatureVerifyUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SignatureVerifyDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSignatureVerify configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SignatureVerifyDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSignatureVerify/CsmSignatureVerifyConfig/*[CsmSignatureVerifyEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSignatureVerifyCompareSignatureBufferSize" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SignatureVerifyCompareSignatureBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSignatureVerifyFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSignatureVerify&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;signatureBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SignatureVerifyFinish&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSignatureVerifyFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SignatureVerifyCompareSignatureBuffer signatureBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 signatureLength, &lt;br/&gt;
                              &#160;&#160;OUT Csm_VerifyResultType resultBuffer&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSignatureVerify configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SignatureVerifyCompareSignatureBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSignatureVerify/CsmSignatureVerifyConfig/*[CsmSignatureVerifyEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSignatureVerifyImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSignatureVerifyConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSignatureVerify</a:v>
                    <a:v>CsmSignatureVerifyInitConfiguration</a:v>
                    <a:v>CsmSignatureVerifyPrimitiveName</a:v>
                    <a:v>CsmSignatureVerifyEnableRteInterface</a:v>
                    <a:v>CsmSignatureVerifyEnableRestart</a:v>
                    <a:v>CsmSignatureVerifyUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSignatureVerifyConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSignatureVerifyConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SignatureVerify. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSignatureVerifyConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSignatureVerifyEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSignatureVerify))))" 
                          true="The callback CsmCallbackSignatureVerify shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSignatureVerify" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSignatureVerifyEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSignatureVerify is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSignatureVerify"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSignatureVerifyEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSignatureVerifyInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSignatureVerifyInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSignatureVerifyPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSignatureVerifyPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSignatureVerifyEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSignatureVerifyEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSignatureVerifyStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSignatureVerifyUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymBlockEncrypt" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymBlockEncrypt primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymBlockEncrypt"/>
                <v:var name="CsmSymBlockEncryptMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a symmetrical block encryption.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymBlockEncryptMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymBlockEncryptDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymBlockEncryptDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymBlockEncryptUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymBlockEncrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;plainTextBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymBlockEncryptUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymBlockEncryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymBlockEncryptDataBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 plainTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymBlockEncryptResultBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 cipherTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymBlockEncrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymBlockEncryptDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymBlockEncrypt/CsmSymBlockEncryptConfig/*[CsmSymBlockEncryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymBlockEncryptResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymBlockEncryptResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymBlockEncryptUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymBlockEncrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;SymBlockEncryptUpdate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;cipherTextBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymBlockEncryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymBlockEncryptDataBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 plainTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymBlockEncryptResultBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 cipherTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymBlockEncrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymBlockEncryptResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymBlockEncrypt/CsmSymBlockEncryptConfig/*[CsmSymBlockEncryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymBlockEncryptImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymBlockEncryptConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymBlockEncrypt</a:v>
                    <a:v>CsmSymBlockEncryptInitConfiguration</a:v>
                    <a:v>CsmSymBlockEncryptPrimitiveName</a:v>
                    <a:v>CsmSymBlockEncryptEnableRteInterface</a:v>
                    <a:v>CsmSymBlockEncryptEnableRestart</a:v>
                    <a:v>CsmSymBlockEncryptUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymBlockEncryptConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymBlockEncryptConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymBlockEncrypt. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymBlockEncryptConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymBlockEncryptEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymBlockEncrypt))))" 
                          true="The callback CsmCallbackSymBlockEncrypt shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymBlockEncrypt" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymBlockEncryptEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymBlockEncrypt is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymBlockEncrypt"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymBlockEncryptEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymBlockEncryptInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSymBlockEncryptInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymBlockEncryptPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymBlockEncryptPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymBlockEncryptEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymBlockEncryptEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSymBlockEncryptStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymBlockEncryptUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymBlockDecrypt" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymBlockDecrypt primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymBlockDecrypt"/>
                <v:var name="CsmSymBlockDecryptMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a symmetrical block decryption.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymBlockDecryptMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymBlockDecryptDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymBlockDecryptDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymBlockDecryptUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymBlockDecrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;cipherTextBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymBlockDecryptUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymBlockDecryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymBlockDecryptDataBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 cipherTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymBlockDecryptResultBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 plainTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymBlockDecrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymBlockDecryptDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymBlockDecrypt/CsmSymBlockDecryptConfig/*[CsmSymBlockDecryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymBlockDecryptResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymBlockDecryptResultBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymBlockDecryptUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymBlockDecrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;SymBlockDecryptUpdate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;plainTextBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymBlockDecryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymBlockDecryptDataBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 cipherTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymBlockDecryptResultBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 plainTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymBlockDecrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymBlockDecryptResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymBlockDecrypt/CsmSymBlockDecryptConfig/*[CsmSymBlockDecryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymBlockDecryptImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymBlockDecryptConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymBlockDecrypt</a:v>
                    <a:v>CsmSymBlockDecryptInitConfiguration</a:v>
                    <a:v>CsmSymBlockDecryptPrimitiveName</a:v>
                    <a:v>CsmSymBlockDecryptEnableRteInterface</a:v>
                    <a:v>CsmSymBlockDecryptEnableRestart</a:v>
                    <a:v>CsmSymBlockDecryptUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymBlockDecryptConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymBlockDecryptConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymBlockDecrypt. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymBlockDecryptConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymBlockDecryptEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymBlockDecrypt))))" 
                          true="The callback CsmCallbackSymBlockDecrypt shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymBlockDecrypt" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymBlockDecryptEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymBlockDecrypt is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymBlockDecrypt"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymBlockDecryptEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymBlockDecryptInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSymBlockDecryptInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymBlockDecryptPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymBlockDecryptPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymBlockDecryptEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymBlockDecryptEnableRestart" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSymBlockDecryptStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymBlockDecryptUsePriorities" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymEncrypt" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymEncrypt primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymEncrypt"/>
                <v:var name="CsmSymEncryptMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a symmetrical encryption.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymEncryptMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymEncryptInitVectorBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymEncryptInitVectorBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymEncryptStart&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymEncrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;InitVectorBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymEncryptStart&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymEncryptStart&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymKeyType key, &lt;br/&gt;
                              &#160;&#160;IN SymEncryptInitVectorBuffer InitVectorBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 InitVectorLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymEncrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymEncryptInitVectorBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymEncrypt/CsmSymEncryptConfig/*[CsmSymEncryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymEncryptDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymEncryptDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymEncryptUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymEncrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;plainTextBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymEncryptUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymEncryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymEncryptDataBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 plainTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymEncryptResultBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 cipherTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymEncrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymEncryptDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymEncrypt/CsmSymEncryptConfig/*[CsmSymEncryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymEncryptResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymEncryptResultBuffer&lt;/code&gt; used in the
                          operations &lt;code&gt;CsmSymEncryptUpdate&lt;/code&gt; and &lt;code&gt;CsmSymEncryptFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymEncrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operations &lt;code&gt;SymEncryptUpdate&lt;/code&gt; and &lt;code&gt;SymEncryptFinish&lt;/code&gt; returns in the
                          parameter &lt;code&gt;cipherTextBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymEncryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymEncryptDataBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 plainTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymEncryptResultBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 cipherTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymEncryptFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT SymEncryptResultBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 cipherTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymEncrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymEncryptResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymEncrypt/CsmSymEncryptConfig/*[CsmSymEncryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymEncryptImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymEncryptConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymEncrypt</a:v>
                    <a:v>CsmSymEncryptInitConfiguration</a:v>
                    <a:v>CsmSymEncryptPrimitiveName</a:v>
                    <a:v>CsmSymEncryptEnableRteInterface</a:v>
                    <a:v>CsmSymEncryptEnableRestart</a:v>
                    <a:v>CsmSymEncryptUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymEncryptConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymEncryptConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymEncrypt. The container
                            name serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymEncryptConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymEncryptEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymEncrypt))))" 
                          true="The callback CsmCallbackSymEncrypt shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymEncrypt" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymEncryptEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymEncrypt is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymEncrypt"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymEncryptEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymEncryptInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymEncryptInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymEncryptPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymEncryptPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymEncryptEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymEncryptEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmSymEncryptStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymEncryptUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymDecrypt" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymDecrypt primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymDecrypt"/>
                <v:var name="CsmSymDecryptMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a symmetrical decryption.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymDecryptMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymDecryptInitVectorBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymDecryptInitVectorBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymDecryptStart&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymDecrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;InitVectorBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymDecryptStart&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymDecryptStart&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymKeyType key, &lt;br/&gt;
                              &#160;&#160;IN SymDecryptInitVectorBuffer InitVectorBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 InitVectorLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymDecrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymDecryptInitVectorBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymDecrypt/CsmSymDecryptConfig/*[CsmSymDecryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymDecryptDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymDecryptDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymDecryptUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymDecrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;cipherTextBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymDecryptUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymDecryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymDecryptDataBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 cipherTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymDecryptResultBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 plainTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymDecrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymDecryptDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymDecrypt/CsmSymDecryptConfig/*[CsmSymDecryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymDecryptResultBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymDecryptResultBuffer&lt;/code&gt; used in the
                          operations &lt;code&gt;CsmSymDecryptUpdate&lt;/code&gt; and &lt;code&gt;CsmSymDecryptFinish&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymDecrypt&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operations &lt;code&gt;SymDecryptUpdate&lt;/code&gt; and &lt;code&gt;SymDecryptFinish&lt;/code&gt; returns in the
                          parameter &lt;code&gt;plainTextBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymDecryptUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymDecryptDataBuffer cipherTextBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 cipherTextLength, &lt;br/&gt;
                              &#160;&#160;OUT SymDecryptResultBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 plainTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymDecryptFinish&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT SymDecryptResultBuffer plainTextBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 plainTextLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymDecrypt configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymDecryptResultBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymDecrypt/CsmSymDecryptConfig/*[CsmSymDecryptEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymDecryptImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymDecryptConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymDecrypt</a:v>
                    <a:v>CsmSymDecryptInitConfiguration</a:v>
                    <a:v>CsmSymDecryptPrimitiveName</a:v>
                    <a:v>CsmSymDecryptEnableRteInterface</a:v>
                    <a:v>CsmSymDecryptEnableRestart</a:v>
                    <a:v>CsmSymDecryptUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymDecryptConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymDecryptConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymDecrypt. The container
                            name serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymDecryptConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymDecryptEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymDecrypt))))" 
                          true="The callback CsmCallbackSymDecrypt shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymDecrypt" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymDecryptEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymDecrypt is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymDecrypt"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymDecryptEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymDecryptInitConfiguration" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymDecryptInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymDecryptPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymDecryptPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymDecryptEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymDecryptEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to CsmSymDecryptStart
                              cancels ongoing requests with the same configuration ID. Note
                              that the used Cry module needs to support the cancellation
                              feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymDecryptUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymKeyExtract" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymKeyExtract primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymKeyExtract"/>
                <v:var name="CsmSymKeyExtractMaxKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement a symmetrical key extraction.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyExtractMaxKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyExtractDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymKeyExtractDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymKeyExtractUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymKeyExtract&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to be at least the size of the
                          largest chunk of data passed (in the parameter
                          &lt;code&gt;dataBuffer&lt;/code&gt;) to the operation
                          &lt;code&gt;SymKeyExtractUpdate&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymKeyExtractUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;IN SymKeyExtractDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;IN uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymKeyExtract configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymKeyExtractDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymKeyExtract/CsmSymKeyExtractConfig/*[CsmSymKeyExtractEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyExtractImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymKeyExtractConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymKeyExtract</a:v>
                    <a:v>CsmSymKeyExtractInitConfiguration</a:v>
                    <a:v>CsmSymKeyExtractPrimitiveName</a:v>
                    <a:v>CsmSymKeyExtractEnableRteInterface</a:v>
                    <a:v>CsmSymKeyExtractEnableRestart</a:v>
                    <a:v>CsmSymKeyExtractUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyExtractConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymKeyExtractConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymKeyExtract. The container
                            name serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymKeyExtractConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymKeyExtractEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymKeyExtract))))" 
                          true="The callback CsmCallbackSymKeyExtract shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymKeyExtract" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymKeyExtractEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymKeyExtract is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymKeyExtract"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymKeyExtractEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymKeyExtractInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSymKeyExtractInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymKeyExtractPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymKeyExtractPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymKeyExtractEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymKeyExtractEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSymKeyExtractStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymKeyExtractUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymKeyWrapAsym" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymKeyWrapAsym primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymKeyWrapAsym"/>
                <v:var name="CsmSymKeyWrapAsymMaxPubKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum length, in bytes, of all public key types used in all CRY
                          primitives which implement an asymmetrical key wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyWrapAsymMaxPubKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyWrapAsymMaxSymKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement an asymmetrical key wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyWrapAsymMaxSymKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyWrapAsymDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymKeyWrapAsymDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymKeyWrapAsymUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymKeyWrapAsym&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;SymKeyWrapAsymUpdate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;dataBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymKeyWrapAsymUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT SymKeyWrapAsymDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymKeyWrapAsym configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymKeyWrapAsymDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymKeyWrapAsym/CsmSymKeyWrapAsymConfig/*[CsmSymKeyWrapAsymEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyWrapAsymImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymKeyWrapAsymConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymKeyWrapAsym</a:v>
                    <a:v>CsmSymKeyWrapAsymInitConfiguration</a:v>
                    <a:v>CsmSymKeyWrapAsymPrimitiveName</a:v>
                    <a:v>CsmSymKeyWrapAsymEnableRteInterface</a:v>
                    <a:v>CsmSymKeyWrapAsymEnableRestart</a:v>
                    <a:v>CsmSymKeyWrapAsymUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyWrapAsymConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymKeyWrapAsymConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymKeyWrapAsym. The
                            container name serves as a symbolic name for the identifier of a
                            service configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymKeyWrapAsymConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymKeyWrapAsymEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymKeyWrapAsym))))" 
                          true="The callback CsmCallbackSymKeyWrapAsym shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymKeyWrapAsym" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymKeyWrapAsymEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymKeyWrapAsym is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymKeyWrapAsym"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymKeyWrapAsymEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymKeyWrapAsymInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSymKeyWrapAsymInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapAsymPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymKeyWrapAsymPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapAsymEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapAsymEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSymKeyWrapAsymStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapAsymUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CsmSymKeyWrapSym" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for incorporation of SymKeyWrapSym primitives.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="CsmSymKeyWrapSym"/>
                <v:var name="CsmSymKeyWrapSymMaxSymKeySize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The maximum, in bytes, of all key lengths used in all CRY primitives
                          which implement an symmetrical key wrapping.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyWrapSymMaxSymKeySize"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyWrapSymDataBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This parameter defines the size (in bytes) of the array type
                          &lt;code&gt;SymKeyWrapSymDataBuffer&lt;/code&gt; used in the
                          operation &lt;code&gt;CsmSymKeyWrapSymUpdate&lt;/code&gt; of the client
                          server interface &lt;code&gt;CsmSymKeyWrapSym&lt;/code&gt;&lt;br/&gt;
                          This parameter must be configured to accomodate the largest result
                          the operation &lt;code&gt;SymKeyWrapSymUpdate&lt;/code&gt; returns in the
                          parameter &lt;code&gt;dataBuffer&lt;/code&gt;.&lt;br/&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;
                            CsmSymKeyWrapSymUpdate&lt;br/&gt;
                            (&lt;br/&gt;
                              &#160;&#160;IN Csm_ConfigIdType pdav0, &lt;br/&gt;
                              &#160;&#160;OUT SymKeyWrapSymDataBuffer dataBuffer, &lt;br/&gt;
                              &#160;&#160;INOUT uint32 dataLength&lt;br/&gt;
                            );&lt;br/&gt;
                          &lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          This parameter is enabled if the following conditions are fulfilled:
                          &lt;ul&gt;
                            &lt;li&gt;
                              The global option &lt;code&gt;Enable Rte usage&lt;/code&gt; is
                              enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              At least one CsmSymKeyWrapSym configuration enabled the option
                              &lt;code&gt;Enable Rte Interface&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Size of the array data type SymKeyWrapSymDataBuffer"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (count(as:modconf(&apos;Csm&apos;)[1]/CsmSymKeyWrapSym/CsmSymKeyWrapSymConfig/*[CsmSymKeyWrapSymEnableRteInterface=&apos;true&apos;]) &gt; 0)"/>
                  <a:da name="RANGE" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="CsmSymKeyWrapSymImmediateRestart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Enable the cancelation of an ongoing calculation regardless of the
                          configuration ID.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable immediate cancelation of ongoing requests"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="False"/>
                </v:var>
                <v:lst name="CsmSymKeyWrapSymConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>CsmCallbackSymKeyWrapSym</a:v>
                    <a:v>CsmSymKeyWrapSymInitConfiguration</a:v>
                    <a:v>CsmSymKeyWrapSymPrimitiveName</a:v>
                    <a:v>CsmSymKeyWrapSymEnableRteInterface</a:v>
                    <a:v>CsmSymKeyWrapSymEnableRestart</a:v>
                    <a:v>CsmSymKeyWrapSymUsePriorities</a:v>
                  </a:a>
                  <a:a name="LABEL" value="CsmSymKeyWrapSymConfig"/>
                  <a:da name="MAX" value="32"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="CsmSymKeyWrapSymConfig" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container for configuration of service SymKeyWrapSym. The container
                            name serves as a symbolic name for the identifier of a service
                            configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="CsmSymKeyWrapSymConfig"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) or (./CsmSymKeyWrapSymEnableRteInterface = &apos;false&apos;)) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (not(node:exists(./CsmCallbackSymKeyWrapSym))))" 
                          true="The callback CsmCallbackSymKeyWrapSym shall be enabled in asynchronous mode, if the Rte interface is not used."/>
                    <v:var name="CsmCallbackSymKeyWrapSym" type="FUNCTION-NAME">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;The name of the callback function which is called when
                              the service has finished.&lt;/p&gt; &lt;p&gt;This configuration
                              parameter is only enabled if no Rte interface is activated for
                              this configuration either because &lt;br/&gt; (1) the global
                              parameter &lt;code&gt;Enable Rte usage&lt;/code&gt; is disabled
                              or &lt;br/&gt; (2) the configuration parameter
                              &lt;code&gt;CsmSymKeyWrapSymEnableRteInterface&lt;/code&gt; is
                              disabled. &lt;/p&gt; &lt;p&gt;If the Rte interface is enabled for
                              this configuration, the callback function must be provided by the
                              Rte.&lt;/p&gt; &lt;p&gt;If synchronous job processing is enabled,
                              the configuration parameter CsmCallbackSymKeyWrapSym is
                              optional.&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmCallbackSymKeyWrapSym"/>
                      <a:a name="OPTIONAL" value="True"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="ENABLE" value="True"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;) and (../CsmSymKeyWrapSymEnableRteInterface = &apos;true&apos;)) and (node:exists(.)))" 
                               true="If the Rte interface for this configuration is enabled, the application is notified via the Rte, not by this callback."/>
                        <a:tst 
                               expr="((as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;false&apos;) and (as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUseSyncJobProcessing = &apos;false&apos;) and (node:value(.) = &apos;&apos;))" 
                               true="If the Rte interface for this configuration is disabled and the synchronous job is not used, the callback must be configured."/>
                      </a:da>
                    </v:var>
                    <v:var name="CsmSymKeyWrapSymInitConfiguration" 
                           type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of a C symbol which contains the configuration of the
                              underlying cryptographic primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="CsmSymKeyWrapSymInitConfiguration"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapSymPrimitiveName" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the cryptographic primitive to use.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="CsmSymKeyWrapSymPrimitiveName"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapSymEnableRteInterface" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enables/Disables Rte interfaces for this
                              configuration.&lt;/p&gt;&lt;p&gt;To be able to use this
                              configuration option, the global option &lt;code&gt;Enable Rte
                              usage&lt;/code&gt; must be enabled.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Rte Interface"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmRteUsage = &apos;true&apos;"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapSymEnableRestart" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enabling this feature configures if a call to
                              CsmSymKeyWrapSymStart cancels ongoing requests with the same
                              configuration ID. Note that the used Cry module needs to support
                              the cancellation feature as well.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable the cancelation of ongoing requests"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                    </v:var>
                    <v:var name="CsmSymKeyWrapSymUsePriorities" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;p&gt;Pre-processor switch to enable and disable priority
                              handling.&lt;/p&gt;&lt;p&gt;TRUE = priority handling
                              enabled&lt;/p&gt;&lt;p&gt;FALSE = priority handling
                              disabled.&lt;/p&gt;&lt;p&gt;In priority handling mode, the Csm
                              forwards a call to Csm_&lt;i&gt;Service&lt;/i&gt;Start to the Cry
                              even when a calculation is already ongoing, provided that the
                              same cryptographic primitive is used for the new request. The
                              priority handling itself has to be performed by the
                              Cry.&lt;/p&gt;&lt;p&gt;To be able to use this configuration
                              option, the global option
                              &lt;code&gt;CsmUsePriorities&lt;/code&gt; must be enabled.
                              &lt;b&gt;Please check if the used Cry or CryShe module supports
                              this mode of operation.&lt;/b&gt;&lt;/p&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Csm priorities handling"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="False"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="as:modconf(&apos;Csm&apos;)[1]/CsmGeneral/CsmUsePriorities = &apos;true&apos;"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Csm"/>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Csm can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
          <d:chc name="myEcuParameterDefinition" type="AR-ELEMENT" 
                 value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_TxDxM2I0R0/Csm"/>
              </d:lst>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
