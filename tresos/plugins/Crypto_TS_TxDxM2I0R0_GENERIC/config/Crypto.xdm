<?xml version='1.0'?>
<datamodel version="8.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/18/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/18/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:ce="http://www.tresos.de/_projects/DataModel2/18/childenable.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM2I0R0_GENERIC" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Crypto" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.3.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                    &lt;p&gt;
                      EN: Configuration of the Crypto (CryptoDriver) module.
                    &lt;/p&gt;
                  &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="POSTBUILDVARIANTSUPPORT" value="false"/>
              <a:a name="RELEASE" value="asc:4.3"/>
              <a:a name="UPPER-MULTIPLICITY" value="*"/>
              <a:a name="UUID" value="6c92eefb-021d-4331-906b-d0c34220d4b9"/>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Crypto can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Common container, aggregated by all modules. It contains published
                        information about vendor and versions.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="4"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="3"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="39"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="114"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
                <v:var name="VendorApiInfix" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Vendor Api Infix of the dedicated implementation of this module according
                          to AUTOSAR.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="VendorApiInfix"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="text:replaceAll(text:replaceAll(as:name(../../../..), &apos;Crypto&apos;, &apos;&apos;), &apos;_&apos;, &apos;&apos;)"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(num:i(1) &lt; num:i(count(as:modconf(&apos;Crypto&apos;)))) and (true() = node:empty(as:modconf(&apos;Crypto&apos;)/CommonPublishedInformation/VendorApiInfix))" 
                           true="&apos;VendorApiInfix&apos; shall not be empty if at least 2 &apos;Crypto&apos; modules are included. &apos;VendorApiInfix&apos; is derived (remove all &apos;Crypto&apos; and &apos;_&apos; substrings) from configured module name during addition of Crypto module instance in &apos;Module Configurations&apos;."/>
                    <a:tst 
                           expr="(num:i(1) &lt; num:i(count(as:modconf(&apos;Crypto&apos;)))) and (false() = text:uniq(as:modconf(&apos;Crypto&apos;)/CommonPublishedInformation/VendorApiInfix, node:value(.)))" 
                           true="&apos;VendorApiInfix&apos; shall be unique over all configured &apos;Crypto&apos; modules. &apos;VendorApiInfix&apos; is derived (remove all &apos;Crypto&apos; and &apos;_&apos; substrings) from configured module name during addition of Crypto module instance in &apos;Module Configurations&apos;."/>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Select the configuration variant. Currently only PreCompile is supported.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="a11becc1-e95e-4d84-a5d8-4eba871c6b74"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:ctr name="CryptoGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for common configuration options.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" value="6a653a73-aa0d-4414-a39d-53e73b8645c5"/>
                <v:var name="CryptoDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Switches the development error detection and notification on or off.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="86a8c30e-afd5-441d-b45b-ebf1c936bffe"/>
                </v:var>
                <v:var name="CryptoDetRuntimeChecks" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Switches the runtime error detection and notification on or off.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b30e349b-767c-46d9-bf7c-83800e25d56e"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="CryptoInstanceId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Instance ID of the crypto module. This ID is used to discern several
                          crypto modules in case more than one module is used in the same ECU.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC, 4.3.1"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4ae5d708-76ec-4125-a343-166520616017"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&gt;=0"/>
                      <mt:tst expr="&lt;=255"/>
                    </mt:range>
                    <mt:xpath true="The instance Id node is not unique." 
                              expr="not(text:uniq(as:modconf(&apos;Crypto&apos;)/CryptoGeneral/CryptoInstanceId, node:value(.)))"/>
                  </a:da>
                </v:var>
                <v:var name="CryptoMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Specifies the period of main function Crypto_MainFunction in seconds.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b3391764-7d0e-41b8-87b5-f2d0a21a647a"/>
                  <a:da name="DEFAULT" value="0.01"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=4294967295"/>
                    <a:tst expr="&gt;0.0"/>
                  </a:da>
                </v:var>
                <v:var name="CryptoVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Pre-processor switch to enable and disable availability of the API
                          Crypto_GetVersionInfo().
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="0e9ce0a0-a5b0-4639-9928-e9ebe3784685"/>
                </v:var>
                <v:lst name="CryptoEcucPartitionRef">
                  <v:ref name="CryptoEcucPartitionRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Maps the Crypto driver to zero or multiple ECUC partitions to make the modules API available in this partition. The module will operate as an independent instance in each of the partitions.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC, 4.4.0"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                  </v:ref>
                </v:lst>
              </v:ctr>
              <v:ctr name="CryptoDriverObjects" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for CRYPTO Objects
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" value="7ec44a83-c51b-40b3-bbaa-a9c4dfb5bce9"/>
                <a:da name="INVALID" type="XPath">
                  <a:tst 
                         expr="not(node:isconsecutive(./eb-list::*/eb-list::*/CryptoDriverObjectId,0))" 
                         true="&apos;CryptoDriverObjects&apos;s shall consecutive, gapless and start from zero."/>
                  <a:tst 
                         expr="(num:i(count(util:distinct(node:refs(eb-list::*/eb-list::*/eb-list::*/eb-list::*))/CryptoPrimitiveAlgorithmFamiliy/eb-list::*[. = &apos;CRYPTO_ALGOFAM_SIPHASH&apos;])) != num:i(0)) and (node:existsAndFalse(as:modconf(&apos;Base&apos;)/BaseTypes/BaseTypes64bit))" 
                         true="Siphash is configured, Base 64 support shall be enabled."/>
                  <a:tst 
                         expr="num:i(0) != num:i(count(util:distinct(node:refs(eb-list::*/eb-list::*/eb-list::*/eb-list::*))/CryptoPrimitiveService[. != &apos;HASH&apos;])) and false() = node:exists(../CryptoKeys)" 
                         true="If a CryptoPrimitive (which is NOT part of CryptoPrimitiveService HASH) is referenced within a Crypto Driver Object, CryptoKeys have to be configured."/>
                </a:da>
                <v:lst name="CryptoDriverObject" type="MAP">
                  <v:ctr name="CryptoDriverObject" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configuration of a CryptoDriverObject.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="a1c2ad56-a589-4386-8830-003c5103aee6"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="not(node:exists(./CryptoDefaultRandomPrimitiveRef)) and (                         (num:i(0) != num:i(count(util:distinct(node:refs(./CryptoPrimitiveRef/eb-list::*))/CryptoPrimitiveService[. = &apos;SIGNATURE_GENERATE&apos;]/../CryptoPrimitiveAlgorithmFamiliy/eb-list::*[. = &apos;CRYPTO_ALGOFAM_ECCNIST&apos; or . = &apos;CRYPTO_ALGOFAM_BRAINPOOL&apos;]))) or                         (num:i(0) != num:i(count(util:distinct(node:refs(./CryptoPrimitiveRef/eb-list::*))/CryptoPrimitiveService[. = &apos;ENCRYPT&apos;]/../CryptoPrimitiveAlgorithmMode/eb-list::*[. = &apos;CRYPTO_ALGOMODE_RSAES_OAEP&apos;]))) or                         (num:i(0) != num:i(count(util:distinct(node:refs(./CryptoPrimitiveRef/eb-list::*))/CryptoPrimitiveService[. = &apos;RANDOM&apos;]/../CryptoPrimitiveAlgorithmFamiliy/eb-list::*[. = &apos;CRYPTO_ALGOFAM_NOTSET&apos;]/../CryptoPrimitiveAlgorithmMode/eb-list::*[. = &apos;CRYPTO_ALGOMODE_NOTSET&apos;]))))" 
                             true="If primitives of Service &apos;SIGNATURE_GENERATE&apos; and AlgorithmFamily &apos;CRYPTO_ALGOFAM_ECCNIST&apos; or &apos;CRYPTO_ALGOFAM_BRAINPOOL&apos; or Service &apos;ENCRYPT&apos; and AlgorithmMode &apos;CRYPTO_ALGOMODE_RSAES_OAEP&apos; are referenced to a Crypto Driver Object, a random number generator as an additional component must be configured."/>
                      <a:tst 
                             expr="num:i(0) != num:i(count(util:distinct(node:refs(./CryptoPrimitiveRef/eb-list::*))/CryptoPrimitiveService[. = &apos;SIGNATURE_GENERATE&apos; or . = &apos;SIGNATURE_VERIFY&apos;]/../CryptoPrimitiveAlgorithmFamiliy/eb-list::*[. = &apos;CRYPTO_ALGOFAM_RSA&apos;])) and not(node:exists(./CryptoEbPrimaryHeapSize))" 
                             true="If a CryptoPrimitive (which is part of CryptoPrimitiveAlgorithmFamiliy RSA) is referenced within a Crypto Driver Object, CryptoEbPrimaryHeapSize of sufficient size has to be configured."/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:exists(./CryptoDefaultRandomPrimitiveRef) and (                         (num:i(0) = num:i(count(util:distinct(node:refs(./CryptoPrimitiveRef/eb-list::*))/CryptoPrimitiveService[. = &apos;SIGNATURE_GENERATE&apos;]/../CryptoPrimitiveAlgorithmFamiliy/eb-list::*[. = &apos;CRYPTO_ALGOFAM_ECCNIST&apos; or . = &apos;CRYPTO_ALGOFAM_BRAINPOOL&apos;]))) and                         (num:i(0) = num:i(count(util:distinct(node:refs(./CryptoPrimitiveRef/eb-list::*))/CryptoPrimitiveService[. = &apos;ENCRYPT&apos;]/../CryptoPrimitiveAlgorithmMode/eb-list::*[. = &apos;CRYPTO_ALGOMODE_RSAES_OAEP&apos;]))))" 
                          true="If primitives of Service &apos;SIGNATURE_GENERATE&apos; and AlgorithmFamily &apos;CRYPTO_ALGOFAM_ECCNIST&apos; or &apos;CRYPTO_ALGOFAM_BRAINPOOL&apos; or Service &apos;ENCRYPT&apos; and AlgorithmMode &apos;CRYPTO_ALGOMODE_RSAES_OAEP&apos; are not referenced to a Crypto Driver Object, a random number generator as an additional component needs not to be configured."/>
                    <v:var name="CryptoDriverObjectId" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Identifier of the Crypto Driver Object. The Crypto Driver Object
                              offers different crypto primitives.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="62ece692-24f5-4823-97a7-5454c6cc1d7f"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoQueueSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Size of the queue in the Crypto Driver. Defines the maximum number of
                              jobs in the Crypto Driver Object queue. If it is set to 0, queueing is
                              disabled in the Crypto Driver Object.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="0d64e769-a709-4610-a700-84fa323c2eef"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoEbUseForKeyManagement" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Determines whether this Crypto Driver Object shall be allowed to be
                              used by key management functions that depend on the execution of
                              Crypto primitives.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                TRUE = The Crypto Driver Object is allowed to be used by key management functions
                              &lt;/li&gt;
                              &lt;li&gt;
                                FALSE = The Crypto Driver Object is not allowed to be used by key management functions
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="fbe772d3-f37b-4ed8-a553-63bfbd24f039"/>
                      <a:da name="DEFAULT" value="true"/>
                    </v:var>
                    <v:ref name="CryptoDefaultRandomPrimitiveRef" 
                           type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Beside a Hash as secondary component, primitives of service
                              &apos;SIGNATURE_GENERATE&apos; and AlgorithmFamily
                              &apos;CRYPTO_ALGOFAM_ECCNIST&apos; or
                              &apos;CRYPTO_ALGOFAM_BRAINPOOL&apos;
                              require a random number generator as an additional component.
                              This component is common for all above mentioned primitives of a
                              Crypto Driver Object.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC, R19-11"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="UUID" 
                           value="8b083154-e47e-4be0-af6b-80096f78c845"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="not(node:refvalid(.))" 
                               true="If primitives of Service &apos;SIGNATURE_GENERATE&apos; and AlgorithmFamily &apos;CRYPTO_ALGOFAM_ECCNIST&apos; or &apos;CRYPTO_ALGOFAM_BRAINPOOL&apos; are referenced to a Crypto Driver Object, a random number generator as an additional secondary primitive must be configured."/>
                        <a:tst expr="not(node:refvalid(.))" 
                               true="If primitives of Service &apos;DECRYPT&apos; or &apos;ENCRYPT&apos; and AlgorithmMode &apos;CRYPTO_ALGOMODE_RSAES_OAEP&apos; are referenced to a Crypto Driver Object, a random number generator as an additional secondary primitive must be configured."/>
                        <a:tst 
                               expr="not(lic:feature(Crypto:GetCprFeatureName(node:ref(.)/CryptoPrimitiveService,                                                                               node:ref(.)/CryptoPrimitiveAlgorithmFamiliy/eb-list::*[1],                                                                               node:ref(.)/CryptoPrimitiveAlgorithmMode/eb-list::*[1],                                                                               &apos;EB_SEC_CPR&apos;                                                                              )                                                     )                                         )" 
                               true="The primary part of the referenced primitive is not licensed."/>
                        <a:tst 
                               expr="node:value(node:ref(.)/CryptoPrimitiveAlgorithmSecondaryFamiliy/eb-list::*[1]) != &apos;CRYPTO_ALGOFAM_NOT_SET&apos; and                                      not(lic:feature(Crypto:GetCprFeatureName(&apos;HASH&apos;,                                                                               node:ref(.)/CryptoPrimitiveAlgorithmSecondaryFamiliy/eb-list::*[1],                                                                               &apos;CRYPTO_ALGOMODE_NOT_SET&apos;,                                                                               &apos;EB_SEC_CPR&apos;                                                                              )                                                     )                                         )" 
                               true="The secondary part of the referenced primitive is not licensed."/>
                        <a:tst 
                               expr="node:value(node:ref(.)/CryptoPrimitiveService) != &apos;RANDOM&apos;" 
                               true="Service used for CryptoDefaultRandomPrimitiveRef must be &apos;RANDOM&apos;."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoPrimitives/CryptoPrimitive"/>
                    </v:ref>
                    <v:ref name="CryptoDefaultRandomKeyRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Seed input value for the primitive referenced by CryptoDefaultRandomPrimitiveRef.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC, R19-11"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="UUID" 
                           value="59b7fd61-c384-48b0-a519-a45f76059841"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeys/CryptoKey"/>
                      <a:da name="WARNING" type="XPath" 
                            expr="not(node:refvalid(./CryptoDefaultRandomKeyRef)) and util:distinct(node:refs(node:ref(node:ref(.)/CryptoKeyTypeRef)/CryptoKeyElementRef/eb-list::*))/CryptoKeyElementId != 3" 
                            true="Referenced CryptoKey should contain a CryptoKeyElement &apos;CRYPTO_KE_RANDOM_SEED_STATE&apos;."/>
                    </v:ref>
                    <v:var name="CryptoEbPrimaryWorkspaceSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The desired size in bytes of the shared buffer for all primary
                              primitive workspaces of this Crypto Driver Object.
                            &lt;/p&gt;
                            &lt;p&gt;
                              The real size of the shared buffer for the primary primitive
                              workspaces of this Crypto Driver Object is determined by converting
                              the number of bytes into the rounded number of words of the target.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                DISABLED = If the size is necessary the number of bytes will be
                                determined automatically
                              &lt;/li&gt;
                              &lt;li&gt;
                                ENABLED = If the size is necessary the configured number of bytes
                                will be used
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="235d6562-4275-47cc-99de-1710b66360db"/>
                      <a:da name="DEFAULT" value="16"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=1"/>
                        <a:tst expr="&lt;=4294967295"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoEbSecondaryWorkspaceSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The desired size in bytes of the shared buffer for all secondary
                              primitive workspaces of this Crypto Driver Object.
                            &lt;/p&gt;
                            &lt;p&gt;
                              The real size of the shared buffer for the secondary primitive
                              workspaces of this Crypto Driver Object is determined by converting
                              the number of bytes into the rounded number of words of the target.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                DISABLED = If the size is necessary the number of bytes will be
                                determined automatically
                              &lt;/li&gt;
                              &lt;li&gt;
                                ENABLED = If the size is necessary the configured number of bytes
                                will be used
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="6d6a6270-41c4-44aa-ac24-0c35236a9326"/>
                      <a:da name="DEFAULT" value="16"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=1"/>
                        <a:tst expr="&lt;=4294967295"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoDefaultRandomPrimaryWorkspaceSize" 
                           type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The desired size in bytes of the buffer for the secondary random
                              primary primitive workspace of this Crypto Driver Object.
                            &lt;/p&gt;
                            &lt;p&gt;
                              The real size of the shared buffer for the secondary random primary
                              primitive workspaces of this Crypto Driver Object is determined by
                              converting the number of bytes into the rounded number of words of the
                              target.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                DISABLED = If the size is necessary the number of bytes will be
                                determined automatically
                              &lt;/li&gt;
                              &lt;li&gt;
                                ENABLED = If the size is necessary the configured number of bytes
                                will be used
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="14a61984-5908-4587-8d93-9e27b428b6c0"/>
                      <a:da name="DEFAULT" value="16"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=1"/>
                        <a:tst expr="&lt;=4294967295"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoDefaultRandomSecondaryWorkspaceSize" 
                           type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The desired size in bytes of the buffer for the secondary random
                              secondary primitive workspace of this Crypto Driver Object.
                            &lt;/p&gt;
                            &lt;p&gt;
                              The real size of the shared buffer for the secondary random secondary
                              primitive workspaces of this Crypto Driver Object is
                              determined by converting the number of bytes into the rounded number
                              of words of the target.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                DISABLED = If the size is necessary the number of bytes will be
                                determined automatically
                              &lt;/li&gt;
                              &lt;li&gt;
                                ENABLED = If the size is necessary the configured number of bytes
                                will be used
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="770d6feb-7b1d-49fd-b26b-02b0290db2a0"/>
                      <a:da name="DEFAULT" value="16"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=1"/>
                        <a:tst expr="&lt;=4294967295"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoEbPrimaryHeapSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The desired size in bytes of the heap buffer for all primary
                              primitives of this Crypto Driver Object.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                DISABLED = If no heap buffer is required
                              &lt;/li&gt;
                              &lt;li&gt;
                                ENABLED = A heap buffer with the configured number of bytes will be used
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="1EA2E74E-337D-4adf-B510-120D074CB029"/>
                      <a:da name="DEFAULT" value="42"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=42"/>
                        <a:tst expr="&lt;=65535"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoEbSecondaryHeapSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The desired size in bytes of the heap buffer for all secondary
                              primitives of this Crypto Driver Object.
                            &lt;/p&gt;
                            &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;
                                DISABLED = If no heap buffer is required
                              &lt;/li&gt;
                              &lt;li&gt;
                                ENABLED = A heap buffer with the configured number of bytes will be used
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="DDE42EDF-FEAE-4941-AC45-A5A45C7B4B60"/>
                      <a:da name="DEFAULT" value="42"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=42"/>
                        <a:tst expr="&lt;=65535"/>
                      </a:da>
                    </v:var>
                    <v:ref name="CryptoDriverObjectEcucPartitionRef" 
                           type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Maps a crypto driver object to zero or one ECUC partition. The ECUC partition referenced is a subset of the ECUC partitions where the Crypto driver is mapped to.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC, R20-11"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="num:i(count(./../../../../CryptoGeneral/CryptoEcucPartitionRef/eb-list::*)) &gt; 0"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                    </v:ref>
                    <v:lst name="CryptoPrimitiveRef">
                      <v:ref name="CryptoPrimitiveRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Refers to primitive in the CRYPTO.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="UUID" 
                             value="dc70ddfa-53fe-4efb-9d39-53ee33568897"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="not(node:refvalid(.))" 
                                 true="Invalid reference."/>
                          <a:tst 
                                 expr="not(text:uniq(node:paths(node:refs(./../eb-list::*)), node:path(node:ref(.))))" 
                                 true="The configured node is not unique."/>
                          <a:tst 
                                 expr="not(lic:feature(Crypto:GetCprFeatureName(node:ref(.)/CryptoPrimitiveService,                                                                                 node:ref(.)/CryptoPrimitiveAlgorithmFamiliy/eb-list::*[1],                                                                                 node:ref(.)/CryptoPrimitiveAlgorithmMode/eb-list::*[1],                                                                                 &apos;EB_SEC_CPR&apos;                                                                                )                                                       )                                           )" 
                                 true="The primary part of the referenced primitive is not licensed."/>
                          <a:tst 
                                 expr="node:value(node:ref(.)/CryptoPrimitiveAlgorithmSecondaryFamiliy/eb-list::*[1]) != &apos;CRYPTO_ALGOFAM_NOT_SET&apos; and                                        node:value(node:ref(.)/CryptoPrimitiveAlgorithmSecondaryFamiliy/eb-list::*[1]) != &apos;CRYPTO_ALGOFAM_PADDING_PKCS7&apos; and                                        node:value(node:ref(.)/CryptoPrimitiveAlgorithmSecondaryFamiliy/eb-list::*[1]) != &apos;CRYPTO_ALGOFAM_PADDING_TLS12&apos; and                                        not(lic:feature(Crypto:GetCprFeatureName(&apos;HASH&apos;,                                                                                 node:ref(.)/CryptoPrimitiveAlgorithmSecondaryFamiliy/eb-list::*[1],                                                                                 &apos;CRYPTO_ALGOMODE_NOT_SET&apos;,                                                                                 &apos;EB_SEC_CPR&apos;                                                                                )                                                       )                                           )" 
                                 true="The secondary part of the referenced primitive is not licensed."/>
                        </a:da>
                        <a:da name="RANGE" type="XPath" 
                              expr="node:paths(./../../../../../CryptoPrimitives/eb-list::*/eb-list::*/eb-list::*)"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoPrimitives/CryptoPrimitive"/>
                      </v:ref>
                    </v:lst>
                    <v:lst name="CryptoEbPrimitiveCfg" type="MAP">
                      <v:ctr name="CryptoEbPrimitiveCfg" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Configuration of EB specific parameters per Crypto primitive
                                assigned to a Crypto Driver Object.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="b3a915e3-931f-4ac9-93f4-fe13f9b6d69d"/>
                        <v:ref name="CryptoEbPrimitiveRef" 
                               type="CHOICE-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Refers to a primitive of this Crypto Driver Object.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="UUID" 
                               value="438137d6-c687-472e-93b0-5346683f0a42"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="not(node:refvalid(.))" 
                                true="Invalid reference."/>
                          <a:da name="RANGE" type="XPath" 
                                expr="node:paths(util:distinct(node:refs(./../../../CryptoPrimitiveRef/eb-list::*)))"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoPrimitives/CryptoPrimitive"/>
                        </v:ref>
                        <v:var name="CryptoEbTimeout" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Defines the time of timeout interruption.
                                  A value of zero means that no timeout check will be processed.
                                &lt;/p&gt;
                                &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                                &lt;p&gt;
                                  &lt;font color=&quot;red&quot;&gt;
                                    The feature &apos;CryptoEbFeatureTimeout&apos; is not supported
                                    on this Crypto module!
                                  &lt;/font&gt;
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="3c519a02-a5af-46e8-b983-e96d6527e02d"/>
                          <a:da name="DEFAULT" value="8"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="node:exists(../../../../../../CryptoEbGeneral/CryptoEbFeatureTimeout)"/>
                          <a:da name="INVALID" type="Range" expr="&gt;=0"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="node:value(.) != 0" 
                                true="The feature &apos;CryptoEbFeatureTimeout&apos; is not supported on this Crypto module!"/>
                        </v:var>
                        <v:var name="CryptoEbFlashLock" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Determines whether this Crypto primitive on this Crypto Driver
                                  Object needs to request access to flash.
                                &lt;/p&gt;
                                &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    TRUE = The primitive needs to request access to flash
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    FALSE = The primitive needs not to request access to flash
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                                &lt;p&gt;
                                  &lt;font color=&quot;red&quot;&gt;
                                    The feature &apos;CryptoEbFeatureFlashLock&apos; is not
                                    supported on this Crypto module!
                                  &lt;/font&gt;
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ca2d36a3-d84c-43a5-bf9c-9b1b7ac860bd"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="node:exists(../../../../../../CryptoEbGeneral/CryptoEbFeatureFlashLock)"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="node:existsAndTrue(.)" 
                                true="The feature &apos;CryptoEbFeatureFlashLock&apos; is not supported on this Crypto module!"/>
                        </v:var>
                        <v:var name="CryptoEbErrorNotificationFunctionName" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  The name of the callout function that will be called by the Crypto
                                  driver to report errors for this Crypto primitive on this Crypto
                                  Driver Object.
                                  The reserved value &quot;_EMPTY_&quot; means that no callout function call
                                  will be processed.
                                &lt;/p&gt;
                                &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                                &lt;p&gt;
                                  &lt;tt&gt;
                                    #define CRYPTO_START_SEC_{{CryptoEbErrorNotificationFunctionName.upper()}}_CODE&lt;br/&gt;
                                    FUNC(void, CRYPTO_{{CryptoEbErrorNotificationFunctionName.upper()}}_CODE) {{CryptoEbErrorNotificationFunctionName}}(uint8* dataPtr, uint32 dataLength);&lt;br/&gt;
                                    #define CRYPTO_STOP_SEC_{{CryptoEbErrorNotificationFunctionName.upper()}}_CODE
                                  &lt;/tt&gt;
                                &lt;/p&gt;
                                &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                                &lt;p&gt;
                                  &lt;font color=&quot;red&quot;&gt;
                                    The feature &apos;CryptoEbFeatureErrorNotification&apos; is not
                                    supported on this Crypto module!
                                  &lt;/font&gt;
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="49e2cc68-0704-464b-9669-e7ecab7acc02"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="node:exists(../../../../../../CryptoEbGeneral/CryptoEbFeatureErrorNotification)"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="node:value(.) != &apos;_EMPTY_&apos;" 
                                true="The feature &apos;CryptoEbFeatureErrorNotification&apos; is not supported on this Crypto module!"/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CryptoKeyElements" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for Crypto key elements.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="OPTIONAL" value="true"/>
                <a:a name="UUID" value="b87d9012-ac2b-478f-8546-a8904cd41803"/>
                <a:da name="ENABLE" value="false"/>
                <v:lst name="CryptoKeyElement" type="MAP">
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="CryptoKeyElement" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configuration of a CryptoKeyElement.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="05fb173b-7daf-4868-8b05-e9b2e53d9ad1"/>
                    <v:var name="CryptoKeyElementAllowPartialAccess" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enable or disable writing and reading the key element with data
                              smaller than the size of the element.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="1aaa85b3-1b3f-4cd0-8624-764d8adc25c9"/>
                    </v:var>
                    <v:var name="CryptoKeyElementFormat" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Defines the format for the key element. This is the format used to
                              provide or extract the key data from the driver.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC, 4.3.1"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="db184da9-454c-487a-b644-ec491af4537a"/>
                      <a:da name="DEFAULT" value="CRYPTO_KE_FORMAT_BIN_OCTET"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:empty(.)" 
                               true="The format of the key element is empty."/>
                        <a:tst 
                               expr="node:value(.) = &apos;CRYPTO_KE_FORMAT_BIN_CERT_CVC&apos;" 
                               true="&apos;CryptoKeyElementFormat = CRYPTO_KE_FORMAT_BIN_CERT_CVC&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                        <a:tst 
                               expr="node:value(.) = &apos;CRYPTO_KE_FORMAT_BIN_CERT_X509_V3&apos;" 
                               true="&apos;CryptoKeyElementFormat = CRYPTO_KE_FORMAT_BIN_CERT_X509_V3&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                        <a:tst 
                               expr="node:value(.) = &apos;CRYPTO_KE_FORMAT_BIN_IDENT_PRIVATEKEY_PKCS8&apos;" 
                               true="&apos;CryptoKeyElementFormat = CRYPTO_KE_FORMAT_BIN_IDENT_PRIVATEKEY_PKCS8&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                        <a:tst 
                               expr="node:value(.) = &apos;CRYPTO_KE_FORMAT_BIN_IDENT_PUBLICKEY&apos;" 
                               true="&apos;CryptoKeyElementFormat = CRYPTO_KE_FORMAT_BIN_IDENT_PUBLICKEY&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                        <a:tst 
                               expr="node:value(.) = &apos;CRYPTO_KE_FORMAT_BIN_SHEKEYS&apos;" 
                               true="&apos;CryptoKeyElementFormat = CRYPTO_KE_FORMAT_BIN_SHEKEYS&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                      </a:da>
                      <a:da name="RANGE">
                        <a:v>CRYPTO_KE_FORMAT_BIN_CERT_CVC</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_CERT_X509_V3</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_IDENT_PRIVATEKEY_PKCS8</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_IDENT_PUBLICKEY</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_OCTET</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_RSA_PRIVATEKEY</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_RSA_PUBLICKEY</a:v>
                        <a:v>CRYPTO_KE_FORMAT_BIN_SHEKEYS</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoKeyElementId" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Identifier of the CRYPTO key element.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="2ac56bae-63f3-44f5-95ee-73214459bbc9"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoKeyElementInitValue" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Value which will be used to fill the element during initialisation,
                              when the element is not already initialized.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="c9f40168-beab-4503-b25d-3adb7b9d2849"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(node:empty(.) or text:match(node:value(.), &apos;^(\s*0x[A-Fa-f0-9]{2}\s*)(\s*,\s*0x[A-Fa-f0-9]{2}\s*)*$&apos;)) and node:value(../CryptoKeyElementSize) &gt;= count(text:split(node:value(.), &apos;,&apos;))" 
                            false="The initialization value is not given in the correct format or contains more values than configured by CryptoKeyElementSize."/>
                    </v:var>
                    <v:var name="CryptoKeyElementPersist" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Enable or disable persisting of the key element in non-volatile
                              storage.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="75cb652e-435a-4513-98e8-393c1f65dcf7"/>
                    </v:var>
                    <v:var name="CryptoKeyElementReadAccess" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Define the reading access rights of the key element.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="c6807ec7-dcd7-4f29-a230-0445f05331cd"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="node:value(.) = &apos;CRYPTO_RA_ENCRYPTED&apos;" 
                            true="&apos;CryptoKeyElementReadAccess = CRYPTO_RA_ENCRYPTED&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                      <a:da name="RANGE">
                        <a:v>CRYPTO_RA_ALLOWED</a:v>
                        <a:v>CRYPTO_RA_DENIED</a:v>
                        <a:v>CRYPTO_RA_ENCRYPTED</a:v>
                        <a:v>CRYPTO_RA_INTERNAL_COPY</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoKeyElementSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Maximum Size size of a CRYPTO key element in bytes.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="7d35ed4e-ff43-4814-bd1f-88591fdd0189"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoKeyElementWriteAccess" 
                           type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Define the writing access rights of the key element.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="7f9c059e-c6c6-45e8-832b-c870fe16aa9a"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="node:value(.) = &apos;CRYPTO_WA_ENCRYPTED&apos;" 
                            true="&apos;CryptoKeyElementWriteAccess = CRYPTO_WA_ENCRYPTED&apos; is not supported by this Crypto module. Please check the &apos;Limitations&apos; section in the &apos;Crypto module release notes&apos;."/>
                      <a:da name="RANGE">
                        <a:v>CRYPTO_WA_ALLOWED</a:v>
                        <a:v>CRYPTO_WA_DENIED</a:v>
                        <a:v>CRYPTO_WA_ENCRYPTED</a:v>
                        <a:v>CRYPTO_WA_INTERNAL_COPY</a:v>
                      </a:da>
                    </v:var>
                    <v:lst name="CryptoKeyElementVirtualTargetRef">
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="MIN" value="1"/>
                      <v:ref name="CryptoKeyElementVirtualTargetRef" 
                             type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Refers to a key element which will contain the actual data.
                                If the Reference is configured, the key element will be a virtual
                                key element.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="UUID" 
                             value="35e49a73-9206-4fd2-8855-343c0fce7c14"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeyElements/CryptoKeyElement"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CryptoKeyTypes" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        N: Container for CRYPTO key types.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="OPTIONAL" value="true"/>
                <a:a name="UUID" value="61dc22f8-f874-494d-b471-eceb1c310cee"/>
                <a:da name="ENABLE" value="false"/>
                <v:lst name="CryptoKeyType" type="MAP">
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="CryptoKeyType" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configuration of a CryptoKeyType.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="b572556c-c530-4e0a-a107-4b2a96ab7898"/>
                    <v:lst name="CryptoKeyElementRef">
                      <a:da name="MIN" value="1"/>
                      <v:ref name="CryptoKeyElementRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Refers to a pointer in the Crypto Key Element, which holds
                                the data of the crypto key element.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="UUID" 
                             value="4a881625-8ade-4937-9327-0b14288490e6"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="not(node:refvalid(.))" 
                                 true="Invalid reference."/>
                          <a:tst 
                                 expr="not(text:uniq(node:paths(node:refs(./../eb-list::*)), node:path(node:ref(.))))" 
                                 true="The configured node is not unique."/>
                          <a:tst 
                                 expr="text:contains(node:foreach(util:distinct(node:refs(node:difference((../eb-list::*), .)))/CryptoKeyElementId,&apos;key&apos;,&apos;$key&apos;),node:value(node:ref(.)/CryptoKeyElementId))" 
                                 true="The referenced CryptoKeyElementId must be unique within a CryptoKeyElementType."/>
                        </a:da>
                        <a:da name="RANGE" type="XPath" 
                              expr="node:paths(./../../../../../CryptoKeyElements/eb-list::*/eb-list::*)"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeyElements/CryptoKeyElement"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="CryptoKeys" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for CRYPTO keys.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="OPTIONAL" value="true"/>
                <a:a name="UUID" value="13dc9f09-4afd-4df6-8b1f-9cf1d0c87dfa"/>
                <a:da name="ENABLE" value="false"/>
                <a:da name="INVALID" type="XPath" 
                      expr="not(node:isconsecutive(./eb-list::*/eb-list::*/CryptoKeyId,0))" 
                      true="CryptoKeyId&apos;s shall consecutive, gapless and start from zero."/>
                <v:lst name="CryptoKey" type="MAP">
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="CryptoKey" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configuration of a CryptoKey.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="d5adccbd-8007-4703-a92e-4fb6d5d5536d"/>
                    <v:var name="CryptoKeyDeriveIterations" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Holds the number of iterations to be performed by the key derivation
                              primitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ab5af339-30e5-4a5f-b5f6-df8518248897"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="CryptoKeyId" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Identifier of the CRYPTO Key.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="74bc2747-f1fb-4a38-946f-11acea474ed3"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:ref name="CryptoKeyTypeRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Refers to a pointer in the CRYPTOto a CryptoKeyType.
                              The CryptoKeyType provides the information which key elements are
                              contained in a CryptoKey.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="UUID" 
                           value="b1356e2a-0473-4610-a8bf-81f9b2a2ea74"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="not(node:refvalid(.))" 
                            true="Invalid reference."/>
                      <a:da name="RANGE" type="XPath" 
                            expr="node:paths(./../../../../CryptoKeyTypes/eb-list::*/eb-list::*)"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeyTypes/CryptoKeyType"/>
                    </v:ref>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:lst name="CryptoPrimitives" type="MAP">
                <a:da name="EDITABLE" value="false"/>
                <a:da name="ENABLE" value="true"/>
                <v:ctr name="CryptoPrimitives" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Container for CRYPTO primitives.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="UUID" value="f8575bcc-5f3a-4555-9741-40a74ed44afc"/>
                  <a:da name="EDITABLE" value="false"/>
                  <v:lst name="CryptoPrimitive" type="MAP">
                    <a:da name="EDITABLE" value="false"/>
                    <v:ctr name="CryptoPrimitive" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Configuration of a CryptoPrimitive.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="4daa18ca-afe2-4a24-8a11-d82651fa1624"/>
                      <a:da name="EDITABLE" value="false"/>
                      <v:lst name="CryptoPrimitiveAlgorithmFamiliy">
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:var name="CryptoPrimitiveAlgorithmFamiliy" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Determines the algorithm family used for the crypto service.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="e905a06b-2403-487e-a5ef-6b82470c40a9"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>CRYPTO_ALGOFAM_3DES</a:v>
                            <a:v>CRYPTO_ALGOFAM_AES</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_1_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_1_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_2s_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_2s_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_BRAINPOOL</a:v>
                            <a:v>CRYPTO_ALGOFAM_CHACHA</a:v>
                            <a:v>CRYPTO_ALGOFAM_CUSTOM</a:v>
                            <a:v>CRYPTO_ALGOFAM_ECCNIST</a:v>
                            <a:v>CRYPTO_ALGOFAM_ECDSA</a:v>
                            <a:v>CRYPTO_ALGOFAM_ECIES</a:v>
                            <a:v>CRYPTO_ALGOFAM_ED25519</a:v>
                            <a:v>CRYPTO_ALGOFAM_ED25519PH</a:v>
                            <a:v>CRYPTO_ALGOFAM_LZSS</a:v>
                            <a:v>CRYPTO_ALGOFAM_NOT_SET</a:v>
                            <a:v>CRYPTO_ALGOFAM_RIPEMD160</a:v>
                            <a:v>CRYPTO_ALGOFAM_RNG</a:v>
                            <a:v>CRYPTO_ALGOFAM_RSA</a:v>
                            <a:v>CRYPTO_ALGOFAM_SECURECOUNTER</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA1</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_224</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_384</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_512_224</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_512_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_224</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_384</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHAKE128</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHAKE256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SIPHASH</a:v>
                          </a:da>
                        </v:var>
                      </v:lst>
                      <v:lst name="CryptoPrimitiveAlgorithmMode">
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:var name="CryptoPrimitiveAlgorithmMode" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Determines the algorithm mode used for the crypto service.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="1255500f-70dc-4379-a74f-91c65d91b8fa"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>CRYPTO_ALGOMODE_12ROUNDS</a:v>
                            <a:v>CRYPTO_ALGOMODE_20ROUNDS</a:v>
                            <a:v>CRYPTO_ALGOMODE_8ROUNDS</a:v>
                            <a:v>CRYPTO_ALGOMODE_CBC</a:v>
                            <a:v>CRYPTO_ALGOMODE_CFB</a:v>
                            <a:v>CRYPTO_ALGOMODE_CMAC</a:v>
                            <a:v>CRYPTO_ALGOMODE_CTR</a:v>
                            <a:v>CRYPTO_ALGOMODE_CTRDRBG</a:v>
                            <a:v>CRYPTO_ALGOMODE_CUSTOM</a:v>
                            <a:v>CRYPTO_ALGOMODE_STREAMBYTE</a:v>
                            <a:v>CRYPTO_ALGOMODE_STREAMBIT</a:v>
                            <a:v>CRYPTO_ALGOMODE_ECB</a:v>
                            <a:v>CRYPTO_ALGOMODE_GCM</a:v>
                            <a:v>CRYPTO_ALGOMODE_CCM</a:v>
                            <a:v>CRYPTO_ALGOMODE_GMAC</a:v>
                            <a:v>CRYPTO_ALGOMODE_HMAC</a:v>
                            <a:v>CRYPTO_ALGOMODE_NOT_SET</a:v>
                            <a:v>CRYPTO_ALGOMODE_OFB</a:v>
                            <a:v>CRYPTO_ALGOMODE_RSAES_OAEP</a:v>
                            <a:v>CRYPTO_ALGOMODE_RSAES_PKCS1_v1_5</a:v>
                            <a:v>CRYPTO_ALGOMODE_RSASSA_PKCS1_v1_5</a:v>
                            <a:v>CRYPTO_ALGOMODE_RSASSA_PSS</a:v>
                            <a:v>CRYPTO_ALGOMODE_SIPHASH_2_4</a:v>
                            <a:v>CRYPTO_ALGOMODE_SIPHASH_4_8</a:v>
                            <a:v>CRYPTO_ALGOMODE_XTS</a:v>
                          </a:da>
                        </v:var>
                      </v:lst>
                      <v:lst name="CryptoPrimitiveAlgorithmSecondaryFamiliy">
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:var name="CryptoPrimitiveAlgorithmSecondaryFamiliy" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Determines the algorithm secondary family used for the crypto
                                  service.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="2f346730-ba92-42a0-b0fd-568575696575"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>CRYPTO_ALGOFAM_3DES</a:v>
                            <a:v>CRYPTO_ALGOFAM_AES</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_1_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_1_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_2s_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_BLAKE_2s_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_BRAINPOOL</a:v>
                            <a:v>CRYPTO_ALGOFAM_CHACHA</a:v>
                            <a:v>CRYPTO_ALGOFAM_CUSTOM</a:v>
                            <a:v>CRYPTO_ALGOFAM_ECCNIST</a:v>
                            <a:v>CRYPTO_ALGOFAM_ECDSA</a:v>
                            <a:v>CRYPTO_ALGOFAM_ECIES</a:v>
                            <a:v>CRYPTO_ALGOFAM_ED25519</a:v>
                            <a:v>CRYPTO_ALGOFAM_NOT_SET</a:v>
                            <a:v>CRYPTO_ALGOFAM_RIPEMD160</a:v>
                            <a:v>CRYPTO_ALGOFAM_RNG</a:v>
                            <a:v>CRYPTO_ALGOFAM_RSA</a:v>
                            <a:v>CRYPTO_ALGOFAM_SECURECOUNTER</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA1</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_224</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_384</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_512_224</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA2_512_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_224</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_384</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHA3_512</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHAKE128</a:v>
                            <a:v>CRYPTO_ALGOFAM_SHAKE256</a:v>
                            <a:v>CRYPTO_ALGOFAM_SIPHASH</a:v>
                            <a:v>CRYPTO_ALGOFAM_PADDING_PKCS7</a:v>
                            <a:v>CRYPTO_ALGOFAM_PADDING_TLS12</a:v>
                          </a:da>
                        </v:var>
                      </v:lst>
                      <v:var name="CryptoPrimitiveService" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Determines the crypto service used for defining the capabilities.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="1200e113-0f00-4c1d-bf0c-c6f313fdf1d2"/>
                        <a:da name="RANGE">
                          <a:v>AEAD_DECRYPT</a:v>
                          <a:v>AEAD_ENCRYPT</a:v>
                          <a:v>DECRYPT</a:v>
                          <a:v>ENCRYPT</a:v>
                          <a:v>HASH</a:v>
                          <a:v>MAC_GENERATE</a:v>
                          <a:v>MAC_VERIFY</a:v>
                          <a:v>RANDOM</a:v>
                          <a:v>SIGNATURE_GENERATE</a:v>
                          <a:v>SIGNATURE_VERIFY</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:lst>
                </v:ctr>
              </v:lst>
              <v:ctr name="CryptoEbGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container for EB specific common configurations.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" value="091fbe7e-33a1-4f1d-acfb-703699df6fbc"/>
                <v:ctr name="CryptoEbMisc" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of miscellaneous options.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="3cd8a1de-6bc3-4f8c-a768-ebe14d62c9e2"/>
                  <v:var name="CryptoEbAutosarApiVersion" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Switches the compatibility of the Crypto module API and ARXML
                            description as specified by the configured AUTOSAR version.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              CRYPTO_API_VERSION_430 = Provide and expect an API and ARXML description as
                              specified by AUTOSAR v4.3.0. Deviations are documented in the release
                              notes.
                            &lt;/li&gt;
                            &lt;li&gt;
                              CRYPTO_API_VERSION_431 = Provide and expect an API and ARXML description as
                              specified by AUTOSAR v4.3.1. Deviations are documented in the release
                              notes.
                            &lt;/li&gt;
                            &lt;li&gt;
                              CRYPTO_API_VERSION_EB = Provide and expect an API and ARXML description as
                              implemented by EB Crypto drivers with version less than 2.0.0.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="0b610e36-99e2-48c1-ab5c-a40a83f73600"/>
                    <a:da name="DEFAULT" value="CRYPTO_API_VERSION_430"/>
                    <a:da name="RANGE">
                      <a:v>CRYPTO_API_VERSION_430</a:v>
                      <a:v>CRYPTO_API_VERSION_431</a:v>
                      <a:v>CRYPTO_API_VERSION_EB</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbEnhancementApiKeySetInvalid" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Pre-processor switch to enable and disable the availability of
                            Crypto_KeySetInvalid() API.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="badf8335-5af2-497b-9399-2e71c8e1c82a"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="num:i(count(../../../CryptoKeys/eb-list::*)) &gt; 0" 
                          false="There is no CryptoKey configured to call the Crypto_KeySetInvalid() API."/>
                  </v:var>
                  <v:var name="CryptoEbEnhancementApiKeyGetStatus" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Pre-processor switch to enable and disable the availability of
                            Crypto_KeyGetStatus() API.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9d0fba7e-a8bd-4dfb-8011-e3730de679ee"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="num:i(count(../../../CryptoKeys/eb-list::*)) &gt; 0" 
                          false="There is no CryptoKey configured to call the Crypto_KeyGetStatus() API."/>
                  </v:var>
                  <v:lst name="CryptoEbKeyManagementAlgorithm">
                    <a:a name="TAB" value="EB General"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(./../../../CryptoKeys)"/>
                    <a:da name="MIN" value="0"/>
                    <v:var name="CryptoEbKeyManagementAlgorithm" 
                           type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Determines the algorithm that shall be available for run-time configuration
                              via CRYPTO_KE_KEYGENERATE_ALGORITHM, CRYPTO_KE_KEYEXCHANGE_ALGORITHM,
                              CRYPTO_KE_KEYDERIVE_ALGORITHM or CRYPTO_KE_RANDOMSEED_ALGORITHM.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="10698ae5-8750-4610-b19a-a627ee4a743f"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="not(ecu:has(concat(&apos;Crypto_TS_TxDxM2I0R0_GENERIC.KMn.&apos;, text:replace(node:value(.), &apos;CRYPTO_KMN_&apos;, &apos;&apos;), &apos;.IsGeneric&apos;)))" 
                            true="The configured key management algorithm is not supported on this Crypto module!"/>
                      <a:da name="RANGE">
                        <a:v>CRYPTO_KMN_KEYGENERATE_ED25519_NOTSET</a:v>
                        <a:v>CRYPTO_KMN_KEYGENERATE_ED25519PH_NOTSET</a:v>
                        <a:v>CRYPTO_KMN_KEYGENERATE_PRECALC_NOTSET</a:v>
                        <a:v>CRYPTO_KMN_KEYEXCHANGE_X25519_NOTSET</a:v>
                        <a:v>CRYPTO_KMN_RANDOMSEED_AES_CTRDRBG</a:v>
                        <a:v>CRYPTO_KMN_KEYDERIVE_SINGLESTEPKDF_NOTSET</a:v>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="not(text:uniq(./../eb-list::*, node:value(.)))" 
                            true="The configured key management algorithm is not unique!"/>
                    </v:var>
                  </v:lst>
                </v:ctr>
                <v:ctr name="CryptoEbFeatureEnhancedStdReturn" 
                       type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of the enhanced return values of Crypto APIs feature.
                        &lt;/p&gt;
                        &lt;p&gt;
                          If this feature is enabled, it will allow the Crypto module to return a
                          series of extended error codes that are currently not specified by the
                          Autosar specification. For more details please consult the Crypto module
                          user-guide.
                        &lt;/p&gt;
                        &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                        &lt;p&gt;
                          &lt;font color=&quot;red&quot;&gt;
                            This feature is not supported on this Crypto module!
                          &lt;/font&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="1ece7714-cab0-445b-92c9-df6f00ffaede"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" expr="true()" 
                        true="The feature &apos;CryptoEbFeatureEnhancedStdReturn&apos; is not supported on this Crypto module!"/>
                </v:ctr>
                <v:ctr name="CryptoEbFeatureInitCallback" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of the Crypto_Init() callback feature.
                        &lt;/p&gt;
                        &lt;p&gt;
                          If this feature is enabled, it offers the opportunity to execute custom
                          code during a specific (target) initialization stage.
                        &lt;/p&gt;
                        &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                        &lt;p&gt;
                          &lt;font color=&quot;red&quot;&gt;
                            This feature is not supported on this Crypto module!
                          &lt;/font&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="b2cbe7aa-a3a1-4395-9a76-387dd5c5f5a6"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" expr="true()" 
                        true="The feature &apos;CryptoEbFeatureInitCallback&apos; is not supported on this Crypto module!"/>
                  <v:var name="CryptoEbInitCallbackName" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Name of the user function that will be called back by the Crypto module
                            after the first phase of the initialization.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;p&gt;
                            &lt;tt&gt;
                              #define CRYPTO_START_SEC_{{CryptoEbInitCallbackName.upper()}}_CODE&lt;br/&gt;
                              FUNC(void, CRYPTO_{{CryptoEbInitCallbackName.upper()]_CODE) {{CryptoEbInitCallbackName}}(void);&lt;br/&gt;
                              #define CRYPTO_STOP_SEC_{{CryptoEbInitCallbackName.upper()}}_CODE
                            &lt;/tt&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="2f5a5638-c2e1-4d2d-bdaf-b446bc752ba0"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="CryptoEbFeatureTimeout" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of the Timeout feature.
                        &lt;/p&gt;
                        &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                        &lt;p&gt;
                          &lt;font color=&quot;red&quot;&gt;
                            This feature is not supported on this Crypto module!
                          &lt;/font&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="7b2715fe-7c18-4979-958b-963635f53fd5"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" expr="true()" 
                        true="The feature &apos;CryptoEbFeatureTimeout&apos; is not supported on this Crypto module!"/>
                  <v:var name="CryptoEbTimeoutHeaderFileName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Name of the header file which contains the declarations of the timeout
                            functions.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="b9656792-48bb-41bd-9b13-382face0bd5c"/>
                  </v:var>
                  <v:var name="CryptoEbTimeoutGetTimeFunctionName" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            N: Name of the function that the Crypto module uses to determine the
                            current time.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;p&gt;
                            &lt;tt&gt;
                              #define CRYPTO_START_SEC_{{CryptoEbGetTimeFunctionName.upper()}}_CODE&lt;br/&gt;
                              FUNC(void, CRYPTO_{{CryptoEbGetTimeFunctionName.upper()}}_CODE) {{CryptoEbGetTimeFunctionName}}(void);&lt;br/&gt;
                              #define CRYPTO_STOP_SEC_{{CryptoEbGetTimeFunctionName.upper()}}_CODE
                            &lt;/tt&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="cc0e890a-39c1-4e06-8e12-35613876dbf8"/>
                  </v:var>
                  <v:var name="CryptoEbTimeoutInit" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the time of timeout interruption regarding
                            &apos;Crypto_Init()&apos;.
                            A value of zero means that no timeout check will be processed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="3148a4b5-94cd-4df2-8c53-677f68cb0d7c"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=4294967295"/>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbTimeoutKeyElementGet" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the time of timeout interruption regarding
                            &apos;Crypto_KeyElementGet()&apos;.
                            A value of zero means that no timeout check will be processed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="33fa51a8-f15f-4b7f-bfec-c72f38e33640"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=4294967295"/>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbTimeoutKeyElementSet" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the time of timeout interruption regarding
                            &apos;Crypto_KeyElementSet()&apos;.
                            A value of zero means that no timeout check will be processed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="209fd176-a505-4432-9f23-c613d2b02222"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=4294967295"/>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbTimeoutRandomSeed" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the time of timeout interruption regarding
                            &apos;Crypto_RandomSeed()&apos;.
                            A value of zero means that no timeout check will be processed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="e1048494-07a4-4d9a-81ed-2827a7b673dd"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=4294967295"/>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbTimeoutDebug" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the time of timeout interruption regarding
                            &apos;CryptoEbFeatureDebug&apos;.
                            A value of zero means that no timeout check will be processed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="dae275b5-6ab5-491d-889a-21886b8ee1bd"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../CryptoEbFeatureDebug)"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=4294967295"/>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="CryptoEbFeatureDebug" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of the debug feature.
                        &lt;/p&gt;
                        &lt;p&gt;
                          If this feature is enabled, it the following APIs are additionally
                          provided:
                        &lt;ul&gt;
                          &lt;li&gt;
                            Crypto_GetStatus()
                          &lt;/li&gt;
                          &lt;li&gt;
                            Crypto_GetUid()
                          &lt;/li&gt;
                          &lt;li&gt;
                            Crypto_DebugStart()
                          &lt;/li&gt;
                          &lt;li&gt;
                            Crypto_DebugFinish()
                          &lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/p&gt;
                        &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                        &lt;p&gt;
                          &lt;font color=&quot;red&quot;&gt;
                            This feature is not supported on this Crypto module!
                          &lt;/font&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="f164b37c-6333-48f4-ae69-cd7ae52dd6bf"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" expr="true()" 
                        true="The feature &apos;CryptoEbFeatureDebug&apos; is not supported on this Crypto module!"/>
                </v:ctr>
                <v:ctr name="CryptoEbFeatureFlashLock" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of the FlashLock feature.
                        &lt;/p&gt;
                        &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                        &lt;p&gt;
                          &lt;font color=&quot;red&quot;&gt;
                            This feature is not supported on this Crypto module!
                          &lt;/font&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="44dd2211-f1db-41a4-a30b-e86c93287d3d"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" expr="true()" 
                        true="The feature &apos;CryptoEbFeatureFlashLock&apos; is not supported on this Crypto module!"/>
                  <v:var name="CryptoEbFlashLockHeaderFileName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Name of the header file which contains the declarations of the flash
                            lock functions.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="dd381499-c58f-4e04-b4f9-1f6627cbd80b"/>
                  </v:var>
                  <v:var name="CryptoEbFlashLockInit" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This parameter enables the user to configure whether the initialization
                            function of the Crypto module uses the flash locking feature before it
                            initializes the cryptographic peripheral.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="3988e7c8-9c70-4995-9aa1-9930d49fc8e5"/>
                    <a:da name="DEFAULT" value="NoFlashRequest"/>
                    <a:da name="RANGE">
                      <a:v>NoFlashRequest</a:v>
                      <a:v>RequestFlash</a:v>
                      <a:v>RequestFlashAndSuspend</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbFlashLockKeyManagement" 
                         type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This parameter enables the user to configure whether the key
                            management primitives (Crypto_KeyElementSet, Crypto_KeyElementGet,
                            Crypto_RandomSeed) use the flash locking feature before accessing the
                            cryptographic peripheral.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9ea1c327-c4a0-4b9e-a003-d6400d739b48"/>
                    <a:da name="DEFAULT" value="NoFlashRequest"/>
                    <a:da name="RANGE">
                      <a:v>NoFlashRequest</a:v>
                      <a:v>RequestFlash</a:v>
                      <a:v>RequestFlashAndSuspend</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbFlashLockDebug" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This parameter enables the user to configure whether the HW Debug
                            functions (Crypto_GetStatus, Crypto_GetUid, Crypto_DebugStart,
                            Crypto_DebugFinish) use the flash locking feature before accessing the
                            cryptographic peripheral.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="6c95f6a9-dcd3-47c0-a8d0-0b478c68a6e7"/>
                    <a:da name="DEFAULT" value="NoFlashRequest"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="node:exists(../../CryptoEbFeatureDebug)"/>
                    <a:da name="RANGE">
                      <a:v>NoFlashRequest</a:v>
                      <a:v>RequestFlash</a:v>
                      <a:v>RequestFlashAndSuspend</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="CryptoEbFlashLockRequestFunctionName" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Name of the function which the Crypto module uses to request a lock of
                            the Flash.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;p&gt;
                            &lt;tt&gt;
                              #define CRYPTO_START_SEC_{{CryptoEbFlashLockRequestFunctionName.upper()}}_CODE&lt;br/&gt;
                              FUNC(void, CRYPTO_{{CryptoEbFlashLockRequestFunctionName.upper()}}_CODE) {{CryptoEbFlashLockRequestFunctionName}}(void);&lt;br/&gt;
                              #define CRYPTO_STOP_SEC_{{CryptoEbFlashLockRequestFunctionName.upper()}}_CODE
                            &lt;/tt&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="908bbb20-56bb-4be8-8e92-c4fa0e087297"/>
                  </v:var>
                  <v:var name="CryptoEbFlashLockRequestAndSuspendFunctionName" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Name of the function which the Crypto module uses to suspend access and
                            request a lock of the Flash.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;p&gt;
                            &lt;tt&gt;
                              #define CRYPTO_START_SEC_{{CryptoEbFlashLockRequestAndSuspendFunctionName.upper()}}_CODE&lt;br/&gt;
                              FUNC(void, CRYPTO_{{CryptoEbFlashLockRequestAndSuspendFunctionName.upper()}}_CODE) {{CryptoEbFlashLockRequestAndSuspendFunctionName}}(void);&lt;br/&gt;
                              #define CRYPTO_STOP_SEC_{{CryptoEbFlashLockRequestAndSuspendFunctionName.upper()}}_CODE
                            &lt;/tt&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="4eea592b-c74c-4b9b-8ce5-d243c20ee43b"/>
                  </v:var>
                  <v:var name="CryptoEbFlashLockReleaseFunctionName" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Name of the function which the Crypto module uses to release a lock of
                            the Flash.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;p&gt;
                            &lt;tt&gt;
                              #define CRYPTO_START_SEC_{{CryptoEbFlashLockReleaseFunctionName.upper()}}_CODE&lt;br/&gt;
                              FUNC(void, CRYPTO_{{CryptoEbFlashLockReleaseFunctionName.upper()}}_CODE) {{CryptoEbFlashLockReleaseFunctionName}}(void);&lt;br/&gt;
                              #define CRYPTO_STOP_SEC_{{CryptoEbFlashLockReleaseFunctionName.upper()}}_CODE
                            &lt;/tt&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="c9895c58-ae05-4759-a4f3-4305854a2a08"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="CryptoEbFeatureErrorNotification" 
                       type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configuration of the error notification feature.
                        &lt;/p&gt;
                        &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                        &lt;p&gt;
                          &lt;font color=&quot;red&quot;&gt;
                            This feature is not supported on this Crypto module!
                          &lt;/font&gt;
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="TAB" value="EB General"/>
                  <a:a name="UUID" value="ec5ceffa-f78f-407d-829a-bbed94ded20a"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="WARNING" type="XPath" expr="true()" 
                        true="The feature &apos;CryptoEbFeatureErrorNotification&apos; is not supported on this Crypto module!"/>
                  <v:var 
                         name="CryptoEbErrorNotificationFunctionNameKeyManagement" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This parameter enables the user to configure the CustomErrorNotification
                            feature for the Crypto KeyManagement functions.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;br/&gt;&lt;/p&gt;
                          &lt;p&gt;
                            &lt;tt&gt;
                              #define CRYPTO_START_SEC_{{CryptoEbErrorNotificationFunctionNameKeyManagement.upper()}}_CODE&lt;br/&gt;
                              FUNC(void, CRYPTO_{{CryptoEbErrorNotificationFunctionNameKeyManagement.upper()}}_CODE) {{CryptoEbErrorNotificationFunctionNameKeyManagement}}(uint8* dataPtr, uint32 dataLength);&lt;br/&gt;
                              #define CRYPTO_STOP_SEC_{{CryptoEbErrorNotificationFunctionNameKeyManagement.upper()}}_CODE
                            &lt;/tt&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="6b6b7a34-349e-45d6-b6fd-3425a8262392"/>
                  </v:var>
                </v:ctr>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Crypto"/>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
