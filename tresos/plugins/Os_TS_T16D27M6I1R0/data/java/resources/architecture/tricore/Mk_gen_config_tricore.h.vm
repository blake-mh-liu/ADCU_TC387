########### CORE PART OF THE TEMPLATE - START ###########
#parse("include/Mk_gen_config.h.vm")
########### CORE PART OF THE TEMPLATE - END #############
########### TARGET PART OF THE TEMPLATE - START ###########
########### Arch specific velocimacros that can be called from the common code parts ###########
#macro( VM_ArchOsConfigIncludeFiles )
#end
##
##
#macro( VM_ArchOsConfigDataInit )
#end
##
##
#macro( VM_ArchOsConfigInterruptInit )
#end
##
##
#macro( VM_ArchOsConfigTimestampInit )
#end

/*===================================================================
 * Tricore specific data
 *==================================================================*/
#if( $OsConfig.hasTimestampSTM() )
#* *#\#define MK_TRICORE_TIMESTAMPSTMBASE  MK_${OsConfig.getTimestampSTM()}_BASE
#end

/*===================================================================
 * Tricore Memory Partitions
 *==================================================================*/
#foreach( $coreId in $OsModel.getUsedCoreIds() )
#* *##set( $mkPartitionList = $mkPartitionManager.getCore($coreId) )
#* *#\#define MK_CFG_C${coreId}_NSTATICPARTITIONS  $mkPartitionList.getNumberOfStaticPartitions()
#end

\#define MK_CFG_DYNREGIONS_MAX     $mkPartitionManager.getNumDynamicRegions()
#foreach( $coreId in $OsModel.getUsedCoreIds() )
#* *##set( $cLocalPartList = $mkPartitionManager.getCore($coreId) )
#* *#\#define MK_CFG_C${coreId}_DYNREGIONS_MAX  $cLocalPartList.getMaxRegionSize()
#end

#ifdef __cplusplus
}
#endif
#endif  /* MK_GEN_CONFIG_H */
