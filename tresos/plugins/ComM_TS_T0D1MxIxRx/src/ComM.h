/**EB_Automotive_C_Source_File */

#ifndef COMM_H
#define COMM_H

/*==[Includes]================================================================*/

#include <ComM_StubCfg.h>
#include <ComStack_Types.h>

/*==[Macros]==================================================================*/

/* Configuration macros */
#ifndef EBSTUBS_MAX_CALLS_COMM
#define EBSTUBS_MAX_CALLS_COMM 1U
#endif /* EBSTUBS_MAX_CALLS_COMM */

#ifndef EBSTUBS_MAX_CALLS_COMM_DEINIT
#define EBSTUBS_MAX_CALLS_COMM_DEINIT EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_DEINIT */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE
#define EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS
#define EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE
#define EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE
#define EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETSTATE
#define EBSTUBS_MAX_CALLS_COMM_GETSTATE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETSTATE */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETSTATUS
#define EBSTUBS_MAX_CALLS_COMM_GETSTATUS EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETSTATUS */

#ifndef EBSTUBS_MAX_CALLS_COMM_GETVERSIONINFO
#define EBSTUBS_MAX_CALLS_COMM_GETVERSIONINFO EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_GETVERSIONINFO */

#ifndef EBSTUBS_MAX_CALLS_COMM_INIT
#define EBSTUBS_MAX_CALLS_COMM_INIT EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_INIT */

#ifndef EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG
#define EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG */

#ifndef EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE
#define EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE
#define EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP
#define EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP */

#ifndef EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER
#define EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER */

#ifndef EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE
#define EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_RESETINHIBITCOUNTER
#define EBSTUBS_MAX_CALLS_COMM_RESETINHIBITCOUNTER EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_RESETINHIBITCOUNTER */

#ifndef EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION
#define EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION */

#ifndef EBSTUBS_FUNCENABLED_COMM
#define EBSTUBS_FUNCENABLED_COMM STD_ON
#endif /* EBSTUBS_FUNCENABLED_COMM */

#ifndef EBSTUBS_FUNCENABLED_COMM_INIT
#define EBSTUBS_FUNCENABLED_COMM_INIT EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_INIT */

#ifndef EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG
#define EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG */

#ifndef EBSTUBS_FUNCENABLED_COMM_DEINIT
#define EBSTUBS_FUNCENABLED_COMM_DEINIT EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_DEINIT */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETSTATE
#define EBSTUBS_FUNCENABLED_COMM_GETSTATE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETSTATE */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETSTATUS
#define EBSTUBS_FUNCENABLED_COMM_GETSTATUS EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETSTATUS */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS
#define EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS */

#ifndef EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE
#define EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE
#define EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE
#define EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE
#define EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP
#define EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP */

#ifndef EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE
#define EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE
#define EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER
#define EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER */

#ifndef EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER
#define EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER */

#ifndef EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION
#define EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION */

#ifndef EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO
#define EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO */

/* ComM_InitStatusType */
#define COMM_UNINIT 0U
#define COMM_INIT 1U

/* ComM_PncModeType */
#define PNC_REQUESTED 0U
#define PNC_READY_SLEEP 1U
#define PNC_PREPARE_SLEEP 2U
#define PNC_NO_COMMUNICATION 3U
#define PNC_FULL_COMMUNICATION 4U
#define PNC_REQUESTED_WITH_WAKEUP_REQUEST 5U
#define COMM_PNC_REQUESTED 0U
#define COMM_PNC_READY_SLEEP 1U
#define COMM_PNC_PREPARE_SLEEP 2U
#define COMM_PNC_NO_COMMUNICATION 3U
#define COMM_PNC_FULL_COMMUNICATION 4U
#define COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST 5U

/* ComM_ModeType */
#define COMM_NO_COMMUNICATION 0U
#define COMM_SILENT_COMMUNICATION 1U
#define COMM_FULL_COMMUNICATION 2U
#define COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST 3U

/* ComM_StateType */
#define COMM_NO_COM_NO_PENDING_REQUEST 0U
#define COMM_NO_COM_REQUEST_PENDING 1U
#define COMM_FULL_COM_NETWORK_REQUESTED 2U
#define COMM_FULL_COM_READY_SLEEP 3U
#define COMM_SILENT_COM 4U

/* ComM_StdReturnType_Dummy */
#define COMM_E_MODE_LIMITATION 2U
#define COMM_E_UNINIT 3U

/* ComM_VersionMacros_Dummy */
#define COMM_AR_RELEASE_MAJOR_VERSION 4U
#define COMM_AR_RELEASE_MINOR_VERSION 0U

/*==[Types]===================================================================*/

typedef struct
{
   uint8 PBcfg_dummy;
} ComM_ConfigType;

typedef uint8 ComM_InitStatusType;

typedef uint8 ComM_PncModeType;

typedef uint8 ComM_InhibitionStatusType;

typedef uint8 ComM_UserHandleType;

typedef uint8 ComM_ModeType;

typedef uint8 ComM_StateType;

typedef Std_ReturnType ComM_StdReturnType_Dummy;

typedef uint8 ComM_VersionMacros_Dummy;

#if (EBSTUBS_FUNCENABLED_COMM_INIT == STD_ON)
typedef void(*ComM_Init_CalloutType)
(
   P2CONST(ComM_ConfigType, TYPEDEF, EBSTUBS_APPL_CONST)
);
typedef struct
{
   uint32 Count;
   ComM_Init_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_INIT > 1)
    P2CONST(ComM_ConfigType, TYPEDEF, EBSTUBS_APPL_CONST) ConfigPtr_Ary[EBSTUBS_MAX_CALLS_COMM_INIT];
#endif /* (EBSTUBS_MAX_CALLS_COMM_INIT > 1) */

    P2CONST(ComM_ConfigType, TYPEDEF, EBSTUBS_APPL_CONST) ConfigPtr;
} ComM_Init_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_INIT == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG == STD_ON)
typedef Std_ReturnType(*ComM_IsValidConfig_CalloutType)
(
   P2CONST(void, TYPEDEF, EBSTUBS_APPL_CONST)
);
typedef struct
{
   uint32 Count;
   ComM_IsValidConfig_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG > 1)
    P2CONST(void, TYPEDEF, EBSTUBS_APPL_CONST) voidConfigPtr_Ary[EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG];
#endif /* (EBSTUBS_MAX_CALLS_COMM_ISVALIDCONFIG > 1) */

    P2CONST(void, TYPEDEF, EBSTUBS_APPL_CONST) voidConfigPtr;
   Std_ReturnType RetVal;
} ComM_IsValidConfig_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_DEINIT == STD_ON)
typedef void(*ComM_DeInit_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   ComM_DeInit_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_DEINIT > 1)
#endif /* (EBSTUBS_MAX_CALLS_COMM_DEINIT > 1) */

} ComM_DeInit_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_DEINIT == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETSTATE == STD_ON)
typedef Std_ReturnType(*ComM_GetState_CalloutType)
(
   NetworkHandleType,
   P2VAR(ComM_StateType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetState_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETSTATE > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_GETSTATE];
    ComM_StateType State_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETSTATE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_GETSTATE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETSTATE > 1) */

    NetworkHandleType Channel;
    ComM_StateType State_Out;
   Std_ReturnType RetVal;
} ComM_GetState_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETSTATE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETSTATUS == STD_ON)
typedef Std_ReturnType(*ComM_GetStatus_CalloutType)
(
   P2VAR(ComM_InitStatusType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETSTATUS > 1)
    ComM_InitStatusType Status_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_GETSTATUS];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETSTATUS > 1) */

    ComM_InitStatusType Status_Out;
   Std_ReturnType RetVal;
} ComM_GetStatus_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETSTATUS == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS == STD_ON)
typedef Std_ReturnType(*ComM_GetInhibitionStatus_CalloutType)
(
   NetworkHandleType,
   P2VAR(ComM_InhibitionStatusType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetInhibitionStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS];
    ComM_InhibitionStatusType Status_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETINHIBITIONSTATUS > 1) */

    NetworkHandleType Channel;
    ComM_InhibitionStatusType Status_Out;
   Std_ReturnType RetVal;
} ComM_GetInhibitionStatus_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE == STD_ON)
typedef Std_ReturnType(*ComM_RequestComMode_CalloutType)
(
   ComM_UserHandleType,
   ComM_ModeType
);
typedef struct
{
   uint32 Count;
   ComM_RequestComMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE > 1)
    ComM_UserHandleType User_Ary[EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE];
    ComM_ModeType ComMode_Ary[EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_REQUESTCOMMODE > 1) */

    ComM_UserHandleType User;
    ComM_ModeType ComMode;
   Std_ReturnType RetVal;
} ComM_RequestComMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE == STD_ON)
typedef Std_ReturnType(*ComM_GetMaxComMode_CalloutType)
(
   ComM_UserHandleType,
   P2VAR(ComM_ModeType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetMaxComMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE > 1)
    ComM_UserHandleType User_Ary[EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE];
    ComM_ModeType ComMode_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETMAXCOMMODE > 1) */

    ComM_UserHandleType User;
    ComM_ModeType ComMode_Out;
   Std_ReturnType RetVal;
} ComM_GetMaxComMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE == STD_ON)
typedef Std_ReturnType(*ComM_GetRequestedComMode_CalloutType)
(
   ComM_UserHandleType,
   P2VAR(ComM_ModeType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetRequestedComMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE > 1)
    ComM_UserHandleType User_Ary[EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE];
    ComM_ModeType ComMode_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETREQUESTEDCOMMODE > 1) */

    ComM_UserHandleType User;
    ComM_ModeType ComMode_Out;
   Std_ReturnType RetVal;
} ComM_GetRequestedComMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE == STD_ON)
typedef Std_ReturnType(*ComM_GetCurrentComMode_CalloutType)
(
   ComM_UserHandleType,
   P2VAR(ComM_ModeType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetCurrentComMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE > 1)
    ComM_UserHandleType User_Ary[EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE];
    ComM_ModeType ComMode_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETCURRENTCOMMODE > 1) */

    ComM_UserHandleType User;
    ComM_ModeType ComMode_Out;
   Std_ReturnType RetVal;
} ComM_GetCurrentComMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP == STD_ON)
typedef Std_ReturnType(*ComM_PreventWakeUp_CalloutType)
(
   NetworkHandleType,
   boolean
);
typedef struct
{
   uint32 Count;
   ComM_PreventWakeUp_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP];
    boolean Status_Ary[EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP];
#endif /* (EBSTUBS_MAX_CALLS_COMM_PREVENTWAKEUP > 1) */

    NetworkHandleType Channel;
    boolean Status;
   Std_ReturnType RetVal;
} ComM_PreventWakeUp_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE == STD_ON)
typedef Std_ReturnType(*ComM_LimitChannelToNoComMode_CalloutType)
(
   NetworkHandleType,
   boolean
);
typedef struct
{
   uint32 Count;
   ComM_LimitChannelToNoComMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE];
    boolean Status_Ary[EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_LIMITCHANNELTONOCOMMODE > 1) */

    NetworkHandleType Channel;
    boolean Status;
   Std_ReturnType RetVal;
} ComM_LimitChannelToNoComMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE == STD_ON)
typedef Std_ReturnType(*ComM_LimitECUToNoComMode_CalloutType)
(
   boolean
);
typedef struct
{
   uint32 Count;
   ComM_LimitECUToNoComMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE > 1)
    boolean Status_Ary[EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_LIMITECUTONOCOMMODE > 1) */

    boolean Status;
   Std_ReturnType RetVal;
} ComM_LimitECUToNoComMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER == STD_ON)
typedef Std_ReturnType(*ComM_ReadInhibitCounter_CalloutType)
(
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_ReadInhibitCounter_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER > 1)
    uint16 CounterValue_Out_Ary[EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER];
#endif /* (EBSTUBS_MAX_CALLS_COMM_READINHIBITCOUNTER > 1) */

    uint16 CounterValue_Out;
   Std_ReturnType RetVal;
} ComM_ReadInhibitCounter_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER == STD_ON)
typedef Std_ReturnType(*ComM_ResetInhibitCounter_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   ComM_ResetInhibitCounter_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_RESETINHIBITCOUNTER > 1)
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_RESETINHIBITCOUNTER];
#endif /* (EBSTUBS_MAX_CALLS_COMM_RESETINHIBITCOUNTER > 1) */

   Std_ReturnType RetVal;
} ComM_ResetInhibitCounter_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION == STD_ON)
typedef Std_ReturnType(*ComM_SetECUGroupClassification_CalloutType)
(
   ComM_InhibitionStatusType
);
typedef struct
{
   uint32 Count;
   ComM_SetECUGroupClassification_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION > 1)
    ComM_InhibitionStatusType Status_Ary[EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION];
#endif /* (EBSTUBS_MAX_CALLS_COMM_SETECUGROUPCLASSIFICATION > 1) */

    ComM_InhibitionStatusType Status;
   Std_ReturnType RetVal;
} ComM_SetECUGroupClassification_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO == STD_ON)
typedef void(*ComM_GetVersionInfo_CalloutType)
(
   P2VAR(Std_VersionInfoType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   ComM_GetVersionInfo_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_GETVERSIONINFO > 1)
    Std_VersionInfoType Versioninfo_Out_Ary[EBSTUBS_MAX_CALLS_COMM_GETVERSIONINFO];
#endif /* (EBSTUBS_MAX_CALLS_COMM_GETVERSIONINFO > 1) */

    Std_VersionInfoType Versioninfo_Out;
} ComM_GetVersionInfo_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO == STD_ON) */

/*==[Declaration of functions with external linkage]==========================*/

#define EBSTUBS_START_SEC_CODE
#include <EBStubs_MemMap.h>

#if (EBSTUBS_FUNCENABLED_COMM_INIT == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Init
(
  P2CONST(ComM_ConfigType, AUTOMATIC, EBSTUBS_APPL_CONST) ConfigPtr
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_INIT == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_IsValidConfig
(
  P2CONST(void, AUTOMATIC, EBSTUBS_APPL_CONST) voidConfigPtr
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_DEINIT == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_DeInit
(
  void
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_DEINIT == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETSTATE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_GetState
(
  NetworkHandleType Channel,
  P2VAR(ComM_StateType, AUTOMATIC, EBSTUBS_APPL_DATA) State
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETSTATE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_GetStatus
(
  P2VAR(ComM_InitStatusType, AUTOMATIC, EBSTUBS_APPL_DATA) Status
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETSTATUS == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_GetInhibitionStatus
(
  NetworkHandleType Channel,
  P2VAR(ComM_InhibitionStatusType, AUTOMATIC, EBSTUBS_APPL_DATA) Status
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_RequestComMode
(
  ComM_UserHandleType User,
  ComM_ModeType ComMode
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_GetMaxComMode
(
  ComM_UserHandleType User,
  P2VAR(ComM_ModeType, AUTOMATIC, EBSTUBS_APPL_DATA) ComMode
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_GetRequestedComMode
(
  ComM_UserHandleType User,
  P2VAR(ComM_ModeType, AUTOMATIC, EBSTUBS_APPL_DATA) ComMode
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_GetCurrentComMode
(
  ComM_UserHandleType User,
  P2VAR(ComM_ModeType, AUTOMATIC, EBSTUBS_APPL_DATA) ComMode
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_PreventWakeUp
(
  NetworkHandleType Channel,
  boolean Status
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_LimitChannelToNoComMode
(
  NetworkHandleType Channel,
  boolean Status
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_LimitECUToNoComMode
(
  boolean Status
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_ReadInhibitCounter
(
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) CounterValue
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_ResetInhibitCounter
(
  void
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) ComM_SetECUGroupClassification
(
  ComM_InhibitionStatusType Status
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_GetVersionInfo
(
  P2VAR(Std_VersionInfoType, AUTOMATIC, EBSTUBS_APPL_DATA) Versioninfo
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO == STD_ON) */

#define EBSTUBS_STOP_SEC_CODE
#include <EBStubs_MemMap.h>

/*==[Constants with external linkage]=========================================*/

/*==[Variables with external linkage]=========================================*/

#define EBSTUBS_START_SEC_VAR_CLEARED_UNSPECIFIED
#include <EBStubs_MemMap.h>

#if (EBSTUBS_FUNCENABLED_COMM_DEINIT == STD_ON)
extern VAR(ComM_DeInit_StubType, EBSTUBS_VAR)
   ComM_DeInit_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_DEINIT == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE == STD_ON)
extern VAR(ComM_GetCurrentComMode_StubType, EBSTUBS_VAR)
   ComM_GetCurrentComMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETCURRENTCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS == STD_ON)
extern VAR(ComM_GetInhibitionStatus_StubType, EBSTUBS_VAR)
   ComM_GetInhibitionStatus_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETINHIBITIONSTATUS == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE == STD_ON)
extern VAR(ComM_GetMaxComMode_StubType, EBSTUBS_VAR)
   ComM_GetMaxComMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETMAXCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE == STD_ON)
extern VAR(ComM_GetRequestedComMode_StubType, EBSTUBS_VAR)
   ComM_GetRequestedComMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETREQUESTEDCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETSTATE == STD_ON)
extern VAR(ComM_GetState_StubType, EBSTUBS_VAR)
   ComM_GetState_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETSTATE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETSTATUS == STD_ON)
extern VAR(ComM_GetStatus_StubType, EBSTUBS_VAR)
   ComM_GetStatus_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETSTATUS == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO == STD_ON)
extern VAR(ComM_GetVersionInfo_StubType, EBSTUBS_VAR)
   ComM_GetVersionInfo_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_GETVERSIONINFO == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_INIT == STD_ON)
extern VAR(ComM_Init_StubType, EBSTUBS_VAR)
   ComM_Init_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_INIT == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG == STD_ON)
extern VAR(ComM_IsValidConfig_StubType, EBSTUBS_VAR)
   ComM_IsValidConfig_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_ISVALIDCONFIG == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE == STD_ON)
extern VAR(ComM_LimitChannelToNoComMode_StubType, EBSTUBS_VAR)
   ComM_LimitChannelToNoComMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_LIMITCHANNELTONOCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE == STD_ON)
extern VAR(ComM_LimitECUToNoComMode_StubType, EBSTUBS_VAR)
   ComM_LimitECUToNoComMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_LIMITECUTONOCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP == STD_ON)
extern VAR(ComM_PreventWakeUp_StubType, EBSTUBS_VAR)
   ComM_PreventWakeUp_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_PREVENTWAKEUP == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER == STD_ON)
extern VAR(ComM_ReadInhibitCounter_StubType, EBSTUBS_VAR)
   ComM_ReadInhibitCounter_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_READINHIBITCOUNTER == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE == STD_ON)
extern VAR(ComM_RequestComMode_StubType, EBSTUBS_VAR)
   ComM_RequestComMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_REQUESTCOMMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER == STD_ON)
extern VAR(ComM_ResetInhibitCounter_StubType, EBSTUBS_VAR)
   ComM_ResetInhibitCounter_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_RESETINHIBITCOUNTER == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION == STD_ON)
extern VAR(ComM_SetECUGroupClassification_StubType, EBSTUBS_VAR)
   ComM_SetECUGroupClassification_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_SETECUGROUPCLASSIFICATION == STD_ON) */


#define EBSTUBS_STOP_SEC_VAR_CLEARED_UNSPECIFIED
#include <EBStubs_MemMap.h>

/* stub extension header file */
#include <ComM_StubExt.h>

#endif /* COMM_H */
