/**EB_Automotive_C_Source_File */

#ifndef COMM_NM_H
#define COMM_NM_H

/*==[Includes]================================================================*/

#include <ComM_StubCfg.h>
#include <ComStack_Types.h>

/*==[Macros]==================================================================*/

/* Configuration macros */
#ifndef EBSTUBS_MAX_CALLS_COMM
#define EBSTUBS_MAX_CALLS_COMM 1U
#endif /* EBSTUBS_MAX_CALLS_COMM */

#ifndef EBSTUBS_MAX_CALLS_COMM_NM_BUSSLEEPMODE
#define EBSTUBS_MAX_CALLS_COMM_NM_BUSSLEEPMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_NM_BUSSLEEPMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN
#define EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN */

#ifndef EBSTUBS_MAX_CALLS_COMM_NM_NETWORKMODE
#define EBSTUBS_MAX_CALLS_COMM_NM_NETWORKMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_NM_NETWORKMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_NM_NETWORKSTARTINDICATION
#define EBSTUBS_MAX_CALLS_COMM_NM_NETWORKSTARTINDICATION EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_NM_NETWORKSTARTINDICATION */

#ifndef EBSTUBS_MAX_CALLS_COMM_NM_PREPAREBUSSLEEPMODE
#define EBSTUBS_MAX_CALLS_COMM_NM_PREPAREBUSSLEEPMODE EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_NM_PREPAREBUSSLEEPMODE */

#ifndef EBSTUBS_MAX_CALLS_COMM_NM_RESTARTINDICATION
#define EBSTUBS_MAX_CALLS_COMM_NM_RESTARTINDICATION EBSTUBS_MAX_CALLS_COMM
#endif /* EBSTUBS_MAX_CALLS_COMM_NM_RESTARTINDICATION */

#ifndef EBSTUBS_FUNCENABLED_COMM
#define EBSTUBS_FUNCENABLED_COMM STD_ON
#endif /* EBSTUBS_FUNCENABLED_COMM */

#ifndef EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION
#define EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION */

#ifndef EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE
#define EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE
#define EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE
#define EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE */

#ifndef EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION
#define EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION */

#ifndef EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN
#define EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN EBSTUBS_FUNCENABLED_COMM
#endif /* EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN */

/*==[Types]===================================================================*/

#if (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION == STD_ON)
typedef void(*ComM_Nm_NetworkStartIndication_CalloutType)
(
   NetworkHandleType
);
typedef struct
{
   uint32 Count;
   ComM_Nm_NetworkStartIndication_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_NM_NETWORKSTARTINDICATION > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_NM_NETWORKSTARTINDICATION];
#endif /* (EBSTUBS_MAX_CALLS_COMM_NM_NETWORKSTARTINDICATION > 1) */

    NetworkHandleType Channel;
} ComM_Nm_NetworkStartIndication_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE == STD_ON)
typedef void(*ComM_Nm_NetworkMode_CalloutType)
(
   NetworkHandleType
);
typedef struct
{
   uint32 Count;
   ComM_Nm_NetworkMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_NM_NETWORKMODE > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_NM_NETWORKMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_NM_NETWORKMODE > 1) */

    NetworkHandleType Channel;
} ComM_Nm_NetworkMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE == STD_ON)
typedef void(*ComM_Nm_PrepareBusSleepMode_CalloutType)
(
   NetworkHandleType
);
typedef struct
{
   uint32 Count;
   ComM_Nm_PrepareBusSleepMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_NM_PREPAREBUSSLEEPMODE > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_NM_PREPAREBUSSLEEPMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_NM_PREPAREBUSSLEEPMODE > 1) */

    NetworkHandleType Channel;
} ComM_Nm_PrepareBusSleepMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE == STD_ON)
typedef void(*ComM_Nm_BusSleepMode_CalloutType)
(
   NetworkHandleType
);
typedef struct
{
   uint32 Count;
   ComM_Nm_BusSleepMode_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_NM_BUSSLEEPMODE > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_NM_BUSSLEEPMODE];
#endif /* (EBSTUBS_MAX_CALLS_COMM_NM_BUSSLEEPMODE > 1) */

    NetworkHandleType Channel;
} ComM_Nm_BusSleepMode_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION == STD_ON)
typedef void(*ComM_Nm_RestartIndication_CalloutType)
(
   NetworkHandleType
);
typedef struct
{
   uint32 Count;
   ComM_Nm_RestartIndication_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_NM_RESTARTINDICATION > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_NM_RESTARTINDICATION];
#endif /* (EBSTUBS_MAX_CALLS_COMM_NM_RESTARTINDICATION > 1) */

    NetworkHandleType Channel;
} ComM_Nm_RestartIndication_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN == STD_ON)
typedef void(*ComM_Nm_ForwardSynchronizedPncShutdown_CalloutType)
(
   NetworkHandleType,
   P2CONST(uint8, TYPEDEF, EBSTUBS_APPL_CONST)
);
typedef struct
{
   uint32 Count;
   ComM_Nm_ForwardSynchronizedPncShutdown_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN > 1)
    NetworkHandleType Channel_Ary[EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN];
    P2CONST(uint8, TYPEDEF, EBSTUBS_APPL_CONST) PncBitVectorPtr_Ary[EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN];
#endif /* (EBSTUBS_MAX_CALLS_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN > 1) */

    NetworkHandleType Channel;
    P2CONST(uint8, TYPEDEF, EBSTUBS_APPL_CONST) PncBitVectorPtr;
} ComM_Nm_ForwardSynchronizedPncShutdown_StubType;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN == STD_ON) */

/*==[Declaration of functions with external linkage]==========================*/

#define EBSTUBS_START_SEC_CODE
#include <EBStubs_MemMap.h>

#if (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Nm_NetworkStartIndication
(
  NetworkHandleType Channel
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Nm_NetworkMode
(
  NetworkHandleType Channel
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Nm_PrepareBusSleepMode
(
  NetworkHandleType Channel
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Nm_BusSleepMode
(
  NetworkHandleType Channel
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Nm_RestartIndication
(
  NetworkHandleType Channel
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN == STD_ON)
extern FUNC(void, EBSTUBS_CODE) ComM_Nm_ForwardSynchronizedPncShutdown
(
  NetworkHandleType Channel,
  P2CONST(uint8, AUTOMATIC, EBSTUBS_APPL_CONST) PncBitVectorPtr
);
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN == STD_ON) */

#define EBSTUBS_STOP_SEC_CODE
#include <EBStubs_MemMap.h>

/*==[Constants with external linkage]=========================================*/

/*==[Variables with external linkage]=========================================*/

#define EBSTUBS_START_SEC_VAR_CLEARED_UNSPECIFIED
#include <EBStubs_MemMap.h>

#if (EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE == STD_ON)
extern VAR(ComM_Nm_BusSleepMode_StubType, EBSTUBS_VAR)
   ComM_Nm_BusSleepMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_BUSSLEEPMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN == STD_ON)
extern VAR(ComM_Nm_ForwardSynchronizedPncShutdown_StubType, EBSTUBS_VAR)
   ComM_Nm_ForwardSynchronizedPncShutdown_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_FORWARDSYNCHRONIZEDPNCSHUTDOWN == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE == STD_ON)
extern VAR(ComM_Nm_NetworkMode_StubType, EBSTUBS_VAR)
   ComM_Nm_NetworkMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION == STD_ON)
extern VAR(ComM_Nm_NetworkStartIndication_StubType, EBSTUBS_VAR)
   ComM_Nm_NetworkStartIndication_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_NETWORKSTARTINDICATION == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE == STD_ON)
extern VAR(ComM_Nm_PrepareBusSleepMode_StubType, EBSTUBS_VAR)
   ComM_Nm_PrepareBusSleepMode_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_PREPAREBUSSLEEPMODE == STD_ON) */

#if (EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION == STD_ON)
extern VAR(ComM_Nm_RestartIndication_StubType, EBSTUBS_VAR)
   ComM_Nm_RestartIndication_Stub;
#endif /* (EBSTUBS_FUNCENABLED_COMM_NM_RESTARTINDICATION == STD_ON) */


#define EBSTUBS_STOP_SEC_VAR_CLEARED_UNSPECIFIED
#include <EBStubs_MemMap.h>

/* stub extension header file */
#include <ComM_StubExt.h>

#endif /* COMM_NM_H */
