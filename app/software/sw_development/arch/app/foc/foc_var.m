%===========$Update Time :  2025-08-31 19:02:52 $=========
disp('Loading $Id: foc_var.m  2025-08-31 19:02:52    foxtron $      FVT_export_businfo_v2.0 2021-11-02')
%% Calibration Name, Units, Min, Max, Data Type, Comment
a2l_par('KFOC_VdCmd_V', 	'V',    -577,    577,    'single',    '');
a2l_par('KFOC_VqCmd_V', 	'V',    -577,    577,    'single',    '');
a2l_par('KFOC_FakeSpdE_rpm', 	'rpm',    0,    1000000,    'single',    '');
a2l_par('KFOC_RDCconst_raw', 	'raw',    0,    1000000,    'single',    '');
a2l_par('KFOC_Mode_enum', 	'enum',    0,    2,    'uint8',    '');
a2l_par('KFOC_AlignRDCVdCmd_V', 	'V',    0,    10,    'single',    '');
a2l_par('KFOC_RotorPosnOffset_rad', 	'rad',    0,    2000,    'single',    '');
a2l_par('KFOC_SensorMode_enum', 	'enum',    0,    255,    'uint8',    '');
a2l_par('KFOC_PosnOffset_flg_ovrdflg', 	'enum',    0,    1,    'boolean',    '');
a2l_par('KFOC_PosnOffset_rad_ovrdval', 	'enum',    -7,    7,    'single',    '');
a2l_par('KFOC_IqCmd_A', 	'A',    -50,    50,    'single',    '');
a2l_par('KFOC_IdCmd_A', 	'A',    -50,    50,    'single',    '');
a2l_par('KFOC_LutPICtrl_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_Kpd_gain', 	'gain',    0,    0.8,    'single',    '');
a2l_par('KFOC_Kid_gain', 	'gain',    0,    0.8,    'single',    '');
a2l_par('KFOC_Kpq_gain', 	'gain',    0,    0.8,    'single',    '');
a2l_par('KFOC_Kiq_gain', 	'gain',    0,    0.8,    'single',    '');
a2l_par('KFOC_Decouple_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_CurSensorGain_gain', 	'gain',    -100,    100,    'single',    '');
a2l_par('KFOC_CurSensorOffset_A', 	'A',    0,    30000,    'single',    '');
a2l_par('KFOC_CutOff_A', 	'A',    0,    30000,    'single',    '');
a2l_par('KFOC_GateICTempConst_raw', 	'raw',    0,    30000,    'single',    '');
a2l_par('KFOC_VTS25_V', 	'V',    0,    30000,    'single',    '');
a2l_par('KFOC_TCTS_const', 	'const',    -30000,    30000,    'single',    '');
a2l_par('KFOC_25Amb_degC', 	'degC',    0,    30000,    'single',    '');
a2l_par('KFOC_IIRconst_const', 	'const',    0,    30000,    'single',    '');
a2l_par('KFOC_PolePairs_p', 	'p',    0,    100,    'single',    '');
a2l_par('KFOC_MagFluxLinkage_C', 	'phi',    0,    1000,    'single',    '');
a2l_par('KFOC_FOFTc_const', 	'const',    0,    30000,    'single',    '');
a2l_par('KFOC_LPFcutoffFreqGain_gain', 	'gain',    0,    10,    'single',    '');
a2l_par('KFOC_ResetPI_flg', 	'rad',    0,    1,    'boolean',    '');
a2l_par('KFOC_ContollerVdCmd_V_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_ContollerVdCmd_V_ovrdval', 	'V',    -577,    577,    'single',    '');
a2l_par('KFOC_ContollerVqCmd_V_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_ContollerVqCmd_V_ovrdval', 	'V',    -577,    577,    'single',    '');
a2l_par('KFOC_CurFilterType_enum', 	'enum',    0,    255,    'uint8',    '');
a2l_par('KFOC_PosnDiffTc_const', 	'const',    -30000,    30000,    'single',    '');
a2l_par('KFOC_SinFdbkTc_const', 	'const',    -30000,    30000,    'single',    '');
a2l_par('KFOC_SinFdbkFilter_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_CosFdbkTc_const', 	'const',    -30000,    30000,    'single',    '');
a2l_par('KFOC_CosFdbkFilter_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_SpdTc_const', 	'const',    -30000,    30000,    'single',    '');
a2l_par('KFOC_SpdFilter_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_SpdCmd_RPM', 	'RPM',    0,    3000,    'single',    '');
a2l_par('KFOC_IdqRef_A', 	'A',    -50,    50,    'single',    '');
a2l_par('KFOC_IdqThetaCmd_deg', 	'rad',    0,    360,    'single',    '');
a2l_par('KFOC_SpdKp_gain', 	'gain',    0,    0.8,    'single',    '');
a2l_par('KFOC_SpdKi_gain', 	'gain',    0,    0.8,    'single',    '');
a2l_par('KFOC_SpdCtrl_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_SpdLimiterUp_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_SpdLimiterLow_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_CurRateLimiter_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_IdLimiterUp_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_IdLimiterLow_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_IqLimiterUp_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_IqLimiterLow_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_DCBusVoltINV_gain', 	'gain',    0,    1,    'single',    '');
a2l_par('KFOC_SpdAntiWindup_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_IqAntiWindup_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_IdAntiWindup_gain', 	'gain',    -30000,    30000,    'single',    '');
a2l_par('KFOC_SpdIntSatU_gain', 	'gain',    -30000,    30000,    'double',    '');
a2l_par('KFOC_IqIntSatU_gain', 	'gain',    -30000,    30000,    'double',    '');
a2l_par('KFOC_IdIntSatU_gain', 	'gain',    -30000,    30000,    'double',    '');
a2l_par('KFOC_SpdIntSatL_gain', 	'gain',    -30000,    30000,    'double',    '');
a2l_par('KFOC_IqIntSatL_gain', 	'gain',    -30000,    30000,    'double',    '');
a2l_par('KFOC_IdIntSatL_gain', 	'gain',    -30000,    30000,    'double',    '');
a2l_par('KFOC_SpdLimit_RPM', 	'rpm',    0,    1000000,    'single',    '');
a2l_par('KFOC_PWMidle_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_DTC_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_DCBusVoltage_V_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_DCBusVoltage_V_ovrdval', 	'V',    0,    2000,    'single',    '');
a2l_par('KFOC_DCBusLPF_c', 	'constant',    0,    1,    'single',    '');
a2l_par('KFOC_GateICDisable_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_GateICEnable_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_FOCuseGRC_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_OpMod_enum', 	'enum',    0,    10,    'uint8',    '');
a2l_par('KFOC_ADCReadEnum_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_DCBusUseRaw_flg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_AlignAngleTarget_rad', 	'rad',    -6.2832,    6.2832,    'single',    '');
a2l_par('KFOC_RotPosnOffset_rad_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_RotPosnOffset_rad_ovrdval', 	'rad',    -6.2832,    6.2832,    'single',    '');
a2l_par('KFOC_OpMod_enum_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_OpMod_enum_ovrdval', 	'enum',    0,    6,    'uint8',    '');
a2l_par('KFOC_IdCmd_A_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_IdCmd_A_ovrdfval', 	'A',    -300,    300,    'single',    '');
a2l_par('KFOC_IqCmd_A_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_IqCmd_A_ovrdfval', 	'A',    -300,    300,    'single',    '');
a2l_par('KFOC_FltActn_flg_ovrdflg', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_FltActn_flg_ovrdfval', 	'flg',    0,    1,    'boolean',    '');
a2l_par('KFOC_ADCMCUTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCFlyBackTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCOilTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCMotorUTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCMotorVTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCMotorWTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCSicUTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCSicVTemp_enum', 	'enum',    0,    32,    'uint8',    '');
a2l_par('KFOC_ADCSicWTemp_enum', 	'enum',    0,    32,    'uint8',    '');

%% Monitored Signals
% Internal Signals %
a2l_mon('VFOC_RawRotorPosn_rad', 	'rad',    -2000,    2000,    'single',    '');
a2l_mon('VFOC_RotorPosnOffset_rad', 	'rad',    -2000,    2000,    'single',    '');
a2l_mon('VFOC_SinFbk_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_CosFbk_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_mReal_u', 	'u',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_mImag_u', 	'u',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_VcmdAlpha_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_VcmdBeta_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PosnSubst_rad', 	'rad',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IdFdbk_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IqFdbk_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iARaw_raw', 	'raw',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_phCurrentA_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_phCurrentB_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_phCurrentC_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iAFOFFiltered_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iBFOFFiltered_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iCFOFFiltered_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iAIIRFiltered_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iBIIRFiltered_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iCIIRFiltered_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iANoFilter_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iBNoFilter_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iCNoFilter_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICUhsDuty_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ContollerVdCmd_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ContollerVqCmd_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_HandledRotorSpdINCA_rads', 	'rads',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_SinFbkFiltered_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_CosFbkFiltered_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_RawRotorPosnFiltered_rad', 	'rad',    -2000,    2000,    'single',    '');
a2l_mon('VFOC_RotorSpdSC_rads', 	'rads',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame0Uh_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame0Ul_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame0Vh_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame0Vl_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame0Wh_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame0Wl_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame1Uh_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame1Ul_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame1Vh_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame1Vl_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame1Wh_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICWlsDuty_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_GateICFrame1Wl_pct', 	'pct',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_RotorPosnOffsetFilter_rad', 	'rad',    -2000,    2000,    'single',    '');
a2l_mon('VFOC_PosnSubstFiltered_rad', 	'rad',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IqCmd_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IdCmd_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_SpdCtrlIqCmd_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_RotorSpdSC_RPM', 	'RPM',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_HandledIdCmd_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_HandledIqCmd_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_SpdCmd_RPM', 	'RPM',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IdPIcontroller_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IqPIcontroller_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_SpdPIcontroller_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_DCBusVoltage_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_MIDC_V', 	'V',    -10,    10,    'single',    '');
a2l_mon('VFOC_MIPre_V', 	'V',    -10,    10,    'single',    '');
a2l_mon('VFOC_FreqPWM_Hz', 	'Hz',    -20000,    20000,    'single',    '');
a2l_mon('VFOC_FreqPWM_Tick', 	'Tick',    -20000,    20000,    'single',    '');
a2l_mon('VFOC_PosnDiffForSpdSC_rad', 	'rad',    -10,    10,    'single',    '');
a2l_mon('VFOC_RDCTimeStampDiff_s', 	's',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IdFdbkFVT_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IqFdbkFVT_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_VcmdAlphaFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_VcmdBetaFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IdPIcontrollerFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_IqPIcontrollerFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_TrqCmd_Nm', 	'Nm',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_TrqCmdFVT_Nm', 	'Nm',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_SpdCtrlIqCmdFVT_A', 	'A',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PWMoutA_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PWMoutB_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PWMoutC_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PWMoutAFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PWMoutBFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_PWMoutCFVT_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_DTCalpha_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_DTCbeta_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_MeasRotorPosn2Pi_rad', 	'rad',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_FakeRotorPosn_rad', 	'rad',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iBRaw_raw', 	'raw',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_iCRaw_raw', 	'raw',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_DCBusRAW_V', 	'V',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCMCUTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCFlyBackTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCOilTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCMotorUTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCMotorVTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCMotorWTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCSicUTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCSicVTemp_degC', 	'degC',    -10000,    10000,    'single',    '');
a2l_mon('VFOC_ADCSicWTemp_degC', 	'degC',    -10000,    10000,    'single',    '');

%% Outputs Signals
% Outputs Signals %
