%===========$Update Time :  2025-08-31 19:02:52 $=========
disp('Loading $Id: foc_cal.m  2025-08-31 19:02:52    foxtron $      FVT_export_businfo_v2.0 2021-11-02')

a2l_cal('KFOC_VdCmd_V',     0); 
a2l_cal('KFOC_VqCmd_V',     0); 
a2l_cal('KFOC_FakeSpdE_rpm',     1000); 
a2l_cal('KFOC_RDCconst_raw',     1); 
a2l_cal('KFOC_Mode_enum',     0); 
a2l_cal('KFOC_AlignRDCVdCmd_V',     0); 
a2l_cal('KFOC_RotorPosnOffset_rad',     0); 
a2l_cal('KFOC_SensorMode_enum',     0); 
a2l_cal('KFOC_PosnOffset_flg_ovrdflg',     0); 
a2l_cal('KFOC_PosnOffset_rad_ovrdval',     0); 
a2l_cal('KFOC_IqCmd_A',     0); 
a2l_cal('KFOC_IdCmd_A',     0); 
a2l_cal('KFOC_LutPICtrl_flg',     0); 
a2l_cal('KFOC_Kpd_gain',     5e-06); 
a2l_cal('KFOC_Kid_gain',     5e-06); 
a2l_cal('KFOC_Kpq_gain',     0.05); 
a2l_cal('KFOC_Kiq_gain',     5e-06); 
a2l_cal('KFOC_Decouple_flg',     0); 
a2l_cal('KFOC_CurSensorGain_gain',     -0.78144); 
a2l_cal('KFOC_CurSensorOffset_A',     0); 
a2l_cal('KFOC_CutOff_A',     0.4); 
a2l_cal('KFOC_GateICTempConst_raw',     7); 
a2l_cal('KFOC_VTS25_V',     2.606); 
a2l_cal('KFOC_TCTS_const',     -166.67); 
a2l_cal('KFOC_25Amb_degC',     25); 
a2l_cal('KFOC_IIRconst_const',     25); 
a2l_cal('KFOC_PolePairs_p',     3); 
a2l_cal('KFOC_MagFluxLinkage_C',     0.138); 
a2l_cal('KFOC_FOFTc_const',     0.004); 
a2l_cal('KFOC_LPFcutoffFreqGain_gain',     1); 
a2l_cal('KFOC_ResetPI_flg',     0); 
a2l_cal('KFOC_ContollerVdCmd_V_ovrdflg',     0); 
a2l_cal('KFOC_ContollerVdCmd_V_ovrdval',     0); 
a2l_cal('KFOC_ContollerVqCmd_V_ovrdflg',     0); 
a2l_cal('KFOC_ContollerVqCmd_V_ovrdval',     0); 
a2l_cal('KFOC_CurFilterType_enum',     0); 
a2l_cal('KFOC_PosnDiffTc_const',     0.004); 
a2l_cal('KFOC_SinFdbkTc_const',     0.004); 
a2l_cal('KFOC_SinFdbkFilter_flg',     0); 
a2l_cal('KFOC_CosFdbkTc_const',     0.004); 
a2l_cal('KFOC_CosFdbkFilter_flg',     0); 
a2l_cal('KFOC_SpdTc_const',     0.004); 
a2l_cal('KFOC_SpdFilter_flg',     0); 
a2l_cal('KFOC_SpdCmd_RPM',     10); 
a2l_cal('KFOC_IdqRef_A',     0); 
a2l_cal('KFOC_IdqThetaCmd_deg',     90); 
a2l_cal('KFOC_SpdKp_gain',     5e-05); 
a2l_cal('KFOC_SpdKi_gain',     5e-05); 
a2l_cal('KFOC_SpdCtrl_flg',     0); 
a2l_cal('KFOC_SpdLimiterUp_gain',     3); 
a2l_cal('KFOC_SpdLimiterLow_gain',     -3); 
a2l_cal('KFOC_CurRateLimiter_flg',     0); 
a2l_cal('KFOC_IdLimiterUp_gain',     5); 
a2l_cal('KFOC_IdLimiterLow_gain',     -5); 
a2l_cal('KFOC_IqLimiterUp_gain',     5); 
a2l_cal('KFOC_IqLimiterLow_gain',     -5); 
a2l_cal('KFOC_DCBusVoltINV_gain',     0.01); 
a2l_cal('KFOC_SpdAntiWindup_gain',     30); 
a2l_cal('KFOC_IqAntiWindup_gain',     30); 
a2l_cal('KFOC_IdAntiWindup_gain',     30); 
a2l_cal('KFOC_SpdIntSatU_gain',     30); 
a2l_cal('KFOC_IqIntSatU_gain',     30); 
a2l_cal('KFOC_IdIntSatU_gain',     30); 
a2l_cal('KFOC_SpdIntSatL_gain',     -30); 
a2l_cal('KFOC_IqIntSatL_gain',     -30); 
a2l_cal('KFOC_IdIntSatL_gain',     -30); 
a2l_cal('KFOC_SpdLimit_RPM',     1000); 
a2l_cal('KFOC_PWMidle_flg',     0); 
a2l_cal('KFOC_DTC_flg',     0); 
a2l_cal('KFOC_DCBusVoltage_V_ovrdflg',     0); 
a2l_cal('KFOC_DCBusVoltage_V_ovrdval',     0); 
a2l_cal('KFOC_DCBusLPF_c',     0.44); 
a2l_cal('KFOC_GateICDisable_flg',     0); 
a2l_cal('KFOC_GateICEnable_flg',     0); 
a2l_cal('KFOC_FOCuseGRC_flg',     1); 
a2l_cal('KFOC_OpMod_enum',     1); 
a2l_cal('KFOC_ADCReadEnum_enum',     13); 
a2l_cal('KFOC_DCBusUseRaw_flg',     0); 
a2l_cal('KFOC_AlignAngleTarget_rad',     1.5708); 
a2l_cal('KFOC_RotPosnOffset_rad_ovrdflg',     0); 
a2l_cal('KFOC_RotPosnOffset_rad_ovrdval',     0); 
a2l_cal('KFOC_OpMod_enum_ovrdflg',     0); 
a2l_cal('KFOC_OpMod_enum_ovrdval',     0); 
a2l_cal('KFOC_IdCmd_A_ovrdflg',     0); 
a2l_cal('KFOC_IdCmd_A_ovrdfval',     0); 
a2l_cal('KFOC_IqCmd_A_ovrdflg',     0); 
a2l_cal('KFOC_IqCmd_A_ovrdfval',     0); 
a2l_cal('KFOC_FltActn_flg_ovrdflg',     0); 
a2l_cal('KFOC_FltActn_flg_ovrdfval',     0); 
a2l_cal('KFOC_ADCMCUTemp_enum',     24); 
a2l_cal('KFOC_ADCFlyBackTemp_enum',     25); 
a2l_cal('KFOC_ADCOilTemp_enum',     26); 
a2l_cal('KFOC_ADCMotorUTemp_enum',     27); 
a2l_cal('KFOC_ADCMotorVTemp_enum',     28); 
a2l_cal('KFOC_ADCMotorWTemp_enum',     29); 
a2l_cal('KFOC_ADCSicUTemp_enum',     30); 
a2l_cal('KFOC_ADCSicVTemp_enum',     31); 
a2l_cal('KFOC_ADCSicWTemp_enum',     32); 
